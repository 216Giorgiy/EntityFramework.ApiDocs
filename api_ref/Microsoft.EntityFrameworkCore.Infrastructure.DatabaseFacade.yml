### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  id: DatabaseFacade
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  children:
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.AutoTransactionsEnabled
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransactionAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CommitTransaction
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CreateExecutionStrategy
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CurrentTransaction
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreatedAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeletedAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.RollbackTransaction
  langs:
  - csharp
  - vb
  name: DatabaseFacade
  nameWithType: DatabaseFacade
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DatabaseFacade
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Provides access to database related information and operations for a context.\n    Instances of this class are typically obtained from <xref href=\"Microsoft.EntityFrameworkCore.DbContext.Database\" data-throw-if-not-resolved=\"false\"></xref> and it is not designed\n    to be directly constructed in your application code.\n"
  example: []
  syntax:
    content: 'public class DatabaseFacade : IInfrastructure<IServiceProvider>'
    content.vb: >-
      Public Class DatabaseFacade
          Implements IInfrastructure(Of IServiceProvider)
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(System.String,System.Object[])
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(System.Data.IsolationLevel)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(System.Data.Common.DbTransaction)
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(System.Nullable{System.Int32})
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  - Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext)'
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: DatabaseFacade(DbContext)
  nameWithType: DatabaseFacade.DatabaseFacade(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.DatabaseFacade(Microsoft.EntityFrameworkCore.DbContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Initializes a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade\" data-throw-if-not-resolved=\"false\"></xref> class. Instances of this class are typically\n    obtained from <xref href=\"Microsoft.EntityFrameworkCore.DbContext.Database\" data-throw-if-not-resolved=\"false\"></xref> and it is not designed to be directly constructed\n    in your application code.\n"
  example: []
  syntax:
    content: public DatabaseFacade(DbContext context)
    content.vb: Public Sub New(context As DbContext)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The context this database API belongs to .
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated
  id: EnsureCreated
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: EnsureCreated()
  nameWithType: DatabaseFacade.EnsureCreated()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EnsureCreated
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    Ensures that the database for the context exists. If it exists, no action is taken. If it does not\n    exist then the database and all its schema are created. If the database exists, then no effort is made\n    to ensure it is compatible with the model for this context.\n</p>\n<p>\n    Note that this API does not use migrations to create the database. In addition, the database that is\n    created cannot be later updated using migrations. If you are targeting a relational database and using migrations,\n    you can use the DbContext.Database.Migrate() method to ensure the database is created and all migrations\n    are applied.\n</p>\n"
  example: []
  syntax:
    content: public virtual bool EnsureCreated()
    content.vb: Public Overridable Function EnsureCreated As Boolean
    return:
      type: System.Boolean
      description: 'True if the database is created, false if it already existed. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreatedAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreatedAsync(System.Threading.CancellationToken)
  id: EnsureCreatedAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: EnsureCreatedAsync(CancellationToken)
  nameWithType: DatabaseFacade.EnsureCreatedAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreatedAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EnsureCreatedAsync
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    Asynchronously ensures that the database for the context exists. If it exists, no action is taken. If it does not\n    exist then the database and all its schema are created. If the database exists, then no effort is made\n    to ensure it is compatible with the model for this context.\n</p>\n<p>\n    Note that this API does not use migrations to create the database. In addition, the database that is\n    created cannot be later updated using migrations. If you are targeting a relational database and using migrations,\n    you can use the DbContext.Database.Migrate() method to ensure the database is created and all migrations\n    are applied.\n</p>\n"
  example: []
  syntax:
    content: public virtual Task<bool> EnsureCreatedAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function EnsureCreatedAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n    A task that represents the asynchronous save operation. The task result contains true if the database is created,\n    false if it already existed.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted
  id: EnsureDeleted
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: EnsureDeleted()
  nameWithType: DatabaseFacade.EnsureDeleted()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EnsureDeleted
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    Ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does\n    exist then the database is deleted.\n</p>\n<p>\n    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by\n    the model for this context.\n</p>\n"
  example: []
  syntax:
    content: public virtual bool EnsureDeleted()
    content.vb: Public Overridable Function EnsureDeleted As Boolean
    return:
      type: System.Boolean
      description: 'True if the database is deleted, false if it did not exist. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeletedAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeletedAsync(System.Threading.CancellationToken)
  id: EnsureDeletedAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: EnsureDeletedAsync(CancellationToken)
  nameWithType: DatabaseFacade.EnsureDeletedAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeletedAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EnsureDeletedAsync
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    Asynchronously ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does\n    exist then the database is deleted.\n</p>\n<p>\n    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by\n    the model for this context.\n</p>\n"
  example: []
  syntax:
    content: public virtual Task<bool> EnsureDeletedAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function EnsureDeletedAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n    A task that represents the asynchronous save operation. The task result contains true if the database is deleted,\n    false if it did not exist.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction
  id: BeginTransaction
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: BeginTransaction()
  nameWithType: DatabaseFacade.BeginTransaction()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BeginTransaction
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 111
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Starts a new transaction.\n"
  example: []
  syntax:
    content: public virtual IDbContextTransaction BeginTransaction()
    content.vb: Public Overridable Function BeginTransaction As IDbContextTransaction
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
      description: "\n    A <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction\" data-throw-if-not-resolved=\"false\"></xref> that represents the started transaction.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransactionAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransactionAsync(System.Threading.CancellationToken)
  id: BeginTransactionAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: BeginTransactionAsync(CancellationToken)
  nameWithType: DatabaseFacade.BeginTransactionAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransactionAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BeginTransactionAsync
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 122
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Asynchronously starts a new transaction.\n"
  example: []
  syntax:
    content: public virtual Task<IDbContextTransaction> BeginTransactionAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function BeginTransactionAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IDbContextTransaction)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
      description: "\n    A task that represents the asynchronous transaction initialization. The task result contains a <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction\" data-throw-if-not-resolved=\"false\"></xref>\n    that represents the started transaction.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CommitTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CommitTransaction
  id: CommitTransaction
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: CommitTransaction()
  nameWithType: DatabaseFacade.CommitTransaction()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CommitTransaction()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CommitTransaction
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 128
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Applies the outstanding operations in the current transaction to the database.\n"
  example: []
  syntax:
    content: public virtual void CommitTransaction()
    content.vb: Public Overridable Sub CommitTransaction
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.RollbackTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.RollbackTransaction
  id: RollbackTransaction
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: RollbackTransaction()
  nameWithType: DatabaseFacade.RollbackTransaction()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.RollbackTransaction()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RollbackTransaction
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 134
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Discards the outstanding operations in the current transaction.\n"
  example: []
  syntax:
    content: public virtual void RollbackTransaction()
    content.vb: Public Overridable Sub RollbackTransaction
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CreateExecutionStrategy
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CreateExecutionStrategy
  id: CreateExecutionStrategy
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: CreateExecutionStrategy()
  nameWithType: DatabaseFacade.CreateExecutionStrategy()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CreateExecutionStrategy()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateExecutionStrategy
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 141
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n    Creates an instance of the configured <xref href=\"Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual IExecutionStrategy CreateExecutionStrategy()
    content.vb: Public Overridable Function CreateExecutionStrategy As IExecutionStrategy
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
      description: An <xref href="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" data-throw-if-not-resolved="false"></xref> instance.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CurrentTransaction
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CurrentTransaction
  id: CurrentTransaction
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: CurrentTransaction
  nameWithType: DatabaseFacade.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CurrentTransaction
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CurrentTransaction
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 160
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    Gets the current <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction\" data-throw-if-not-resolved=\"false\"></xref> being used by the context, or null\n    if no transaction is in use.\n</p>\n<p>\n    This property will be null unless one of the 'BeginTransaction' or 'UseTransaction' methods has\n    been called, some of which are available as extension methods installed by EF providers.\n    No attempt is made to obtain a transaction from the current DbConnection or similar.\n</p>\n<p>\n    For relational databases, the underlying DbTransaction can be obtained using the\n    'Microsoft.EntityFrameworkCore.Storage.GetDbTransaction'extension method\n    on the returned <xref href=\"Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: public virtual IDbContextTransaction CurrentTransaction { get; }
    content.vb: Public Overridable ReadOnly Property CurrentTransaction As IDbContextTransaction
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.AutoTransactionsEnabled
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.AutoTransactionsEnabled
  id: AutoTransactionsEnabled
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: AutoTransactionsEnabled
  nameWithType: DatabaseFacade.AutoTransactionsEnabled
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.AutoTransactionsEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AutoTransactionsEnabled
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 182
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    Gets or sets a value indicating whether or not a transaction will be created\n    automatically by <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref> if none of the\n    'BeginTransaction' or 'UseTransaction' methods have been called.\n</p>\n<p>\n    Setting this value to false will also disable the <xref href=\"Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy\" data-throw-if-not-resolved=\"false\"></xref>\n    for <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p>\n    The default value is true, meaning that SaveChanges will always use a transaction\n    when saving changes.\n</p>\n<p>\n    Setting this value to false should only be done with caution since the database\n    could be left in a corrupted state if SaveChanges fails.\n</p>\n"
  example: []
  syntax:
    content: public virtual bool AutoTransactionsEnabled { get; set; }
    content.vb: Public Overridable Property AutoTransactionsEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  langs:
  - csharp
  - vb
  name: IInfrastructure<IServiceProvider>.Instance
  nameWithType: DatabaseFacade.IInfrastructure<IServiceProvider>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/DatabaseFacade.cs
    startLine: 193
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    Gets the scoped <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> being used to resolve services.\n</p>\n<p>\n    This property is intended for use by extension methods that need to make use of services\n    not directly exposed in the public API surface.\n</p>\n"
  example: []
  syntax:
    content: IServiceProvider IInfrastructure<IServiceProvider>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance As IServiceProvider Implements IInfrastructure(Of IServiceProvider).Instance
    parameters: []
    return:
      type: System.IServiceProvider
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Instance
  nameWithType.vb: DatabaseFacade.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
references:
- uid: Microsoft.EntityFrameworkCore.DbContext.Database
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Database
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: Database
  nameWithType: DbContext.Database
  fullName: Microsoft.EntityFrameworkCore.DbContext.Database
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IServiceProvider>
  nameWithType: IInfrastructure<IServiceProvider>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>
  nameWithType.vb: IInfrastructure(Of IServiceProvider)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider)
  name.vb: IInfrastructure(Of IServiceProvider)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: EnsureClean()
  nameWithType: SqlServerDatabaseFacadeExtensions.EnsureClean()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean
    name: EnsureClean
    nameWithType: SqlServerDatabaseFacadeExtensions.EnsureClean
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean
    name: EnsureClean
    nameWithType: SqlServerDatabaseFacadeExtensions.EnsureClean
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: Migrate()
  nameWithType: RelationalDatabaseFacadeExtensions.Migrate()
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate
    name: Migrate
    nameWithType: RelationalDatabaseFacadeExtensions.Migrate
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate
    name: Migrate
    nameWithType: RelationalDatabaseFacadeExtensions.Migrate
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: GetMigrations()
  nameWithType: RelationalDatabaseFacadeExtensions.GetMigrations()
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations
    name: GetMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations
    name: GetMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: GetAppliedMigrations()
  nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrations()
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations
    name: GetAppliedMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations
    name: GetAppliedMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  name: GetAppliedMigrationsAsync(CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
    name: GetAppliedMigrationsAsync
    nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(System.Threading.CancellationToken)
    name: GetAppliedMigrationsAsync
    nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: GetPendingMigrations()
  nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrations()
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations
    name: GetPendingMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations
    name: GetPendingMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  name: GetPendingMigrationsAsync(CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(System.Threading.CancellationToken)
    name: GetPendingMigrationsAsync
    nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(System.Threading.CancellationToken)
    name: GetPendingMigrationsAsync
    nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  name: MigrateAsync(CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.MigrateAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(System.Threading.CancellationToken)
    name: MigrateAsync
    nameWithType: RelationalDatabaseFacadeExtensions.MigrateAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(System.Threading.CancellationToken)
    name: MigrateAsync
    nameWithType: RelationalDatabaseFacadeExtensions.MigrateAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Object[])
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Object[])
  name: ExecuteSqlCommand(String, Object[])
  nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(String, Object[])
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(System.String, System.Object[])
  nameWithType.vb: RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(String, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(System.String, System.Object())
  name.vb: ExecuteSqlCommand(String, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(System.String,System.Object[])
    name: ExecuteSqlCommand
    nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommand
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(System.String,System.Object[])
    name: ExecuteSqlCommand
    nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommand
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Threading.CancellationToken,System.Object[])
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Threading.CancellationToken,System.Object[])
  name: ExecuteSqlCommandAsync(String, CancellationToken, Object[])
  nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(String, CancellationToken, Object[])
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(System.String, System.Threading.CancellationToken, System.Object[])
  nameWithType.vb: RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(String, CancellationToken, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(System.String, System.Threading.CancellationToken, System.Object())
  name.vb: ExecuteSqlCommandAsync(String, CancellationToken, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
    name: ExecuteSqlCommandAsync
    nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
    name: ExecuteSqlCommandAsync
    nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: GetDbConnection()
  nameWithType: RelationalDatabaseFacadeExtensions.GetDbConnection()
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection
    name: GetDbConnection
    nameWithType: RelationalDatabaseFacadeExtensions.GetDbConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection
    name: GetDbConnection
    nameWithType: RelationalDatabaseFacadeExtensions.GetDbConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: OpenConnection()
  nameWithType: RelationalDatabaseFacadeExtensions.OpenConnection()
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection
    name: OpenConnection
    nameWithType: RelationalDatabaseFacadeExtensions.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection
    name: OpenConnection
    nameWithType: RelationalDatabaseFacadeExtensions.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  name: OpenConnectionAsync(CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.OpenConnectionAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(System.Threading.CancellationToken)
    name: OpenConnectionAsync
    nameWithType: RelationalDatabaseFacadeExtensions.OpenConnectionAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(System.Threading.CancellationToken)
    name: OpenConnectionAsync
    nameWithType: RelationalDatabaseFacadeExtensions.OpenConnectionAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: CloseConnection()
  nameWithType: RelationalDatabaseFacadeExtensions.CloseConnection()
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection
    name: CloseConnection
    nameWithType: RelationalDatabaseFacadeExtensions.CloseConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection
    name: CloseConnection
    nameWithType: RelationalDatabaseFacadeExtensions.CloseConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)
  name: BeginTransaction(IsolationLevel)
  nameWithType: RelationalDatabaseFacadeExtensions.BeginTransaction(IsolationLevel)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(System.Data.IsolationLevel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: RelationalDatabaseFacadeExtensions.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: RelationalDatabaseFacadeExtensions.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel,System.Threading.CancellationToken)
  name: BeginTransactionAsync(IsolationLevel, CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.BeginTransactionAsync(IsolationLevel, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(System.Data.IsolationLevel, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: RelationalDatabaseFacadeExtensions.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: RelationalDatabaseFacadeExtensions.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(System.Data.Common.DbTransaction)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)
  name: UseTransaction(DbTransaction)
  nameWithType: RelationalDatabaseFacadeExtensions.UseTransaction(DbTransaction)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(System.Data.Common.DbTransaction)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: RelationalDatabaseFacadeExtensions.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: RelationalDatabaseFacadeExtensions.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(System.Nullable{System.Int32})
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Nullable{System.Int32})
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Nullable{System.Int32})
  name: SetCommandTimeout(Nullable<Int32>)
  nameWithType: RelationalDatabaseFacadeExtensions.SetCommandTimeout(Nullable<Int32>)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(System.Nullable<System.Int32>)
  nameWithType.vb: RelationalDatabaseFacadeExtensions.SetCommandTimeout(Nullable(Of Int32))
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(System.Nullable(Of System.Int32))
  name.vb: SetCommandTimeout(Nullable(Of Int32))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(System.Nullable{System.Int32})
    name: SetCommandTimeout
    nameWithType: RelationalDatabaseFacadeExtensions.SetCommandTimeout
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(System.Nullable{System.Int32})
    name: SetCommandTimeout
    nameWithType: RelationalDatabaseFacadeExtensions.SetCommandTimeout
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: GetCommandTimeout()
  nameWithType: RelationalDatabaseFacadeExtensions.GetCommandTimeout()
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout
    name: GetCommandTimeout
    nameWithType: RelationalDatabaseFacadeExtensions.GetCommandTimeout
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout
    name: GetCommandTimeout
    nameWithType: RelationalDatabaseFacadeExtensions.GetCommandTimeout
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
  name: GetService<TService>()
  nameWithType: AccessorExtensions.GetService<TService>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService<TService>()
  nameWithType.vb: AccessorExtensions.GetService(Of TService)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService(Of TService)()
  name.vb: GetService(Of TService)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1
    name: GetService<TService>
    nameWithType: AccessorExtensions.GetService<TService>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1
    name: GetService(Of TService)
    nameWithType: AccessorExtensions.GetService(Of TService)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  parent: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  definition: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  name: GetInfrastructure<IServiceProvider>()
  nameWithType: AccessorExtensions.GetInfrastructure<IServiceProvider>()
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<System.IServiceProvider>()
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of IServiceProvider)()
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of System.IServiceProvider)()
  name.vb: GetInfrastructure(Of IServiceProvider)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure<IServiceProvider>
    nameWithType: AccessorExtensions.GetInfrastructure<IServiceProvider>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<System.IServiceProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1
    name: GetInfrastructure(Of IServiceProvider)
    nameWithType: AccessorExtensions.GetInfrastructure(Of IServiceProvider)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of System.IServiceProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions
  definition: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  name: EnsureClean()
  nameWithType: SqliteDatabaseFacadeExtensions.EnsureClean()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean
    name: EnsureClean
    nameWithType: SqliteDatabaseFacadeExtensions.EnsureClean
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean
    name: EnsureClean
    nameWithType: SqliteDatabaseFacadeExtensions.EnsureClean
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: EnsureClean(DatabaseFacade)
  nameWithType: SqlServerDatabaseFacadeExtensions.EnsureClean(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: EnsureClean
    nameWithType: SqlServerDatabaseFacadeExtensions.EnsureClean
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: EnsureClean
    nameWithType: SqlServerDatabaseFacadeExtensions.EnsureClean
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions.EnsureClean
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: SqlServerDatabaseFacadeExtensions
  nameWithType: SqlServerDatabaseFacadeExtensions
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseFacadeExtensions
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: Migrate(DatabaseFacade)
  nameWithType: RelationalDatabaseFacadeExtensions.Migrate(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: Migrate
    nameWithType: RelationalDatabaseFacadeExtensions.Migrate
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: Migrate
    nameWithType: RelationalDatabaseFacadeExtensions.Migrate
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  commentId: T:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: RelationalDatabaseFacadeExtensions
  nameWithType: RelationalDatabaseFacadeExtensions
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: GetMigrations(DatabaseFacade)
  nameWithType: RelationalDatabaseFacadeExtensions.GetMigrations(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: GetAppliedMigrations(DatabaseFacade)
  nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrations(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetAppliedMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetAppliedMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  isExternal: true
  name: GetAppliedMigrationsAsync(DatabaseFacade, CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(DatabaseFacade, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
    name: GetAppliedMigrationsAsync
    nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
    name: GetAppliedMigrationsAsync
    nameWithType: RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: GetPendingMigrations(DatabaseFacade)
  nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrations(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetPendingMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetPendingMigrations
    nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrations
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  isExternal: true
  name: GetPendingMigrationsAsync(DatabaseFacade, CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(DatabaseFacade, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
    name: GetPendingMigrationsAsync
    nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
    name: GetPendingMigrationsAsync
    nameWithType: RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  isExternal: true
  name: MigrateAsync(DatabaseFacade, CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.MigrateAsync(DatabaseFacade, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
    name: MigrateAsync
    nameWithType: RelationalDatabaseFacadeExtensions.MigrateAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
    name: MigrateAsync
    nameWithType: RelationalDatabaseFacadeExtensions.MigrateAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Object[])
  isExternal: true
  name: ExecuteSqlCommand(DatabaseFacade, String, Object[])
  nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(DatabaseFacade, String, Object[])
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.String, System.Object[])
  nameWithType.vb: RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(DatabaseFacade, String, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.String, System.Object())
  name.vb: ExecuteSqlCommand(DatabaseFacade, String, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Object[])
    name: ExecuteSqlCommand
    nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommand
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Object[])
    name: ExecuteSqlCommand
    nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommand
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Threading.CancellationToken,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Threading.CancellationToken,System.Object[])
  isExternal: true
  name: ExecuteSqlCommandAsync(DatabaseFacade, String, CancellationToken, Object[])
  nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(DatabaseFacade, String, CancellationToken, Object[])
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.String, System.Threading.CancellationToken, System.Object[])
  nameWithType.vb: RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(DatabaseFacade, String, CancellationToken, Object())
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.String, System.Threading.CancellationToken, System.Object())
  name.vb: ExecuteSqlCommandAsync(DatabaseFacade, String, CancellationToken, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Threading.CancellationToken,System.Object[])
    name: ExecuteSqlCommandAsync
    nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Threading.CancellationToken,System.Object[])
    name: ExecuteSqlCommandAsync
    nameWithType: RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: GetDbConnection(DatabaseFacade)
  nameWithType: RelationalDatabaseFacadeExtensions.GetDbConnection(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetDbConnection
    nameWithType: RelationalDatabaseFacadeExtensions.GetDbConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetDbConnection
    nameWithType: RelationalDatabaseFacadeExtensions.GetDbConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: OpenConnection(DatabaseFacade)
  nameWithType: RelationalDatabaseFacadeExtensions.OpenConnection(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: OpenConnection
    nameWithType: RelationalDatabaseFacadeExtensions.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: OpenConnection
    nameWithType: RelationalDatabaseFacadeExtensions.OpenConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
  isExternal: true
  name: OpenConnectionAsync(DatabaseFacade, CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.OpenConnectionAsync(DatabaseFacade, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
    name: OpenConnectionAsync
    nameWithType: RelationalDatabaseFacadeExtensions.OpenConnectionAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)
    name: OpenConnectionAsync
    nameWithType: RelationalDatabaseFacadeExtensions.OpenConnectionAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: CloseConnection(DatabaseFacade)
  nameWithType: RelationalDatabaseFacadeExtensions.CloseConnection(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: CloseConnection
    nameWithType: RelationalDatabaseFacadeExtensions.CloseConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: CloseConnection
    nameWithType: RelationalDatabaseFacadeExtensions.CloseConnection
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)
  isExternal: true
  name: BeginTransaction(DatabaseFacade, IsolationLevel)
  nameWithType: RelationalDatabaseFacadeExtensions.BeginTransaction(DatabaseFacade, IsolationLevel)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.Data.IsolationLevel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: RelationalDatabaseFacadeExtensions.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: RelationalDatabaseFacadeExtensions.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel,System.Threading.CancellationToken)
  isExternal: true
  name: BeginTransactionAsync(DatabaseFacade, IsolationLevel, CancellationToken)
  nameWithType: RelationalDatabaseFacadeExtensions.BeginTransactionAsync(DatabaseFacade, IsolationLevel, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.Data.IsolationLevel, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: RelationalDatabaseFacadeExtensions.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: RelationalDatabaseFacadeExtensions.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)
  isExternal: true
  name: UseTransaction(DatabaseFacade, DbTransaction)
  nameWithType: RelationalDatabaseFacadeExtensions.UseTransaction(DatabaseFacade, DbTransaction)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.Data.Common.DbTransaction)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: RelationalDatabaseFacadeExtensions.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: RelationalDatabaseFacadeExtensions.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Nullable{System.Int32})
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Nullable{System.Int32})
  isExternal: true
  name: SetCommandTimeout(DatabaseFacade, Nullable<Int32>)
  nameWithType: RelationalDatabaseFacadeExtensions.SetCommandTimeout(DatabaseFacade, Nullable<Int32>)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.Nullable<System.Int32>)
  nameWithType.vb: RelationalDatabaseFacadeExtensions.SetCommandTimeout(DatabaseFacade, Nullable(Of Int32))
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, System.Nullable(Of System.Int32))
  name.vb: SetCommandTimeout(DatabaseFacade, Nullable(Of Int32))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Nullable{System.Int32})
    name: SetCommandTimeout
    nameWithType: RelationalDatabaseFacadeExtensions.SetCommandTimeout
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Nullable{System.Int32})
    name: SetCommandTimeout
    nameWithType: RelationalDatabaseFacadeExtensions.SetCommandTimeout
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: GetCommandTimeout(DatabaseFacade)
  nameWithType: RelationalDatabaseFacadeExtensions.GetCommandTimeout(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetCommandTimeout
    nameWithType: RelationalDatabaseFacadeExtensions.GetCommandTimeout
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: GetCommandTimeout
    nameWithType: RelationalDatabaseFacadeExtensions.GetCommandTimeout
    fullName: Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
  isExternal: true
  name: GetService<TService>(IInfrastructure<IServiceProvider>)
  nameWithType: AccessorExtensions.GetService<TService>(IInfrastructure<IServiceProvider>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService<TService>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>)
  nameWithType.vb: AccessorExtensions.GetService(Of TService)(IInfrastructure(Of IServiceProvider))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService(Of TService)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider))
  name.vb: GetService(Of TService)(IInfrastructure(Of IServiceProvider))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
    name: GetService<TService>
    nameWithType: AccessorExtensions.GetService<TService>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService<TService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})
    name: GetService(Of TService)
    nameWithType: AccessorExtensions.GetService(Of TService)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: AccessorExtensions
  nameWithType: AccessorExtensions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions
- uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
  isExternal: false
  name: GetInfrastructure<T>(IInfrastructure<T>)
  nameWithType: AccessorExtensions.GetInfrastructure<T>(IInfrastructure<T>)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>)
  nameWithType.vb: AccessorExtensions.GetInfrastructure(Of T)(IInfrastructure(Of T))
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T))
  name.vb: GetInfrastructure(Of T)(IInfrastructure(Of T))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure<T>
    nameWithType: AccessorExtensions.GetInfrastructure<T>
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})
    name: GetInfrastructure(Of T)
    nameWithType: AccessorExtensions.GetInfrastructure(Of T)
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  isExternal: false
  name: EnsureClean(DatabaseFacade)
  nameWithType: SqliteDatabaseFacadeExtensions.EnsureClean(DatabaseFacade)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: EnsureClean
    nameWithType: SqliteDatabaseFacadeExtensions.EnsureClean
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)
    name: EnsureClean
    nameWithType: SqliteDatabaseFacadeExtensions.EnsureClean
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions.EnsureClean
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
    name: DatabaseFacade
    nameWithType: DatabaseFacade
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: SqliteDatabaseFacadeExtensions
  nameWithType: SqliteDatabaseFacadeExtensions
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteDatabaseFacadeExtensions
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: DatabaseFacade
  nameWithType: DatabaseFacade
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IDbContextTransaction>
  nameWithType: Task<IDbContextTransaction>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction>
  nameWithType.vb: Task(Of IDbContextTransaction)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Task(Of IDbContextTransaction)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IExecutionStrategy
  nameWithType: IExecutionStrategy
  fullName: Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<IServiceProvider>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  nameWithType.vb: IInfrastructure(Of IServiceProvider).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider).Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
