### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  id: IRelationalParameterBuilder
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
  langs:
  - csharp
  - vb
  name: IRelationalParameterBuilder
  nameWithType: IRelationalParameterBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IRelationalParameterBuilder
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    Builds a collection of <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: public interface IRelationalParameterBuilder
    content.vb: Public Interface IRelationalParameterBuilder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
  id: Parameters
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: IRelationalParameterBuilder.Parameters
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Parameters
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nThe collection of parameters.\n"
  example: []
  syntax:
    content: IReadOnlyList<IRelationalParameter> Parameters { get; }
    content.vb: ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  overload: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)
  id: AddParameter(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddParameter(String, String)
  nameWithType: IRelationalParameterBuilder.AddParameter(String, String)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter.\n"
  example: []
  syntax:
    content: void AddParameter(string invariantName, string name)
    content.vb: Sub AddParameter(invariantName As String, name As String)
    parameters:
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: name
      type: System.String
      description: "\nThe name to be used for the parameter when the command is executed against the database.\n"
  overload: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter*
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  id: AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddParameter(String, String, RelationalTypeMapping, Boolean)
  nameWithType: IRelationalParameterBuilder.AddParameter(String, String, RelationalTypeMapping, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String, System.String, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter.\n"
  example: []
  syntax:
    content: void AddParameter(string invariantName, string name, RelationalTypeMapping typeMapping, bool nullable)
    content.vb: Sub AddParameter(invariantName As String, name As String, typeMapping As RelationalTypeMapping, nullable As Boolean)
    parameters:
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: name
      type: System.String
      description: "\nThe name to be used for the parameter when the command is executed against the database.\n"
    - id: typeMapping
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
      description: "\nThe type mapping for the property that values for this parameter will come from.\n"
    - id: nullable
      type: System.Boolean
      description: "\nA value indicating whether the parameter can contain null values.\n"
  overload: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter*
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddParameter(String, String, IProperty)
  nameWithType: IRelationalParameterBuilder.AddParameter(String, String, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
    startLine: 77
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter.\n"
  example: []
  syntax:
    content: void AddParameter(string invariantName, string name, IProperty property)
    content.vb: Sub AddParameter(invariantName As String, name As String, property As IProperty)
    parameters:
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: name
      type: System.String
      description: "\nThe name to be used for the parameter when the command is executed against the database.\n"
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: ''
  overload: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter*
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  id: AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddCompositeParameter(String, Action<IRelationalParameterBuilder>)
  nameWithType: IRelationalParameterBuilder.AddCompositeParameter(String, Action<IRelationalParameterBuilder>)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String, System.Action<Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddCompositeParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
    startLine: 94
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter that is ultimately represented as multiple <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref>s in the\nfinal command.\n"
  example: []
  syntax:
    content: void AddCompositeParameter(string invariantName, Action<IRelationalParameterBuilder> buildAction)
    content.vb: Sub AddCompositeParameter(invariantName As String, buildAction As Action(Of IRelationalParameterBuilder))
    parameters:
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: buildAction
      type: System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder}
      description: "\nThe action to add the multiple parameters that this placeholder represents.\n"
  overload: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter*
  nameWithType.vb: IRelationalParameterBuilder.AddCompositeParameter(String, Action(Of IRelationalParameterBuilder))
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String, System.Action(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder))
  name.vb: AddCompositeParameter(String, Action(Of IRelationalParameterBuilder))
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddPropertyParameter(String, String, IProperty)
  nameWithType: IRelationalParameterBuilder.AddPropertyParameter(String, String, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddPropertyParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalParameterBuilder.cs
    startLine: 112
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAdds a parameter.\n"
  example: []
  syntax:
    content: void AddPropertyParameter(string invariantName, string name, IProperty property)
    content.vb: Sub AddPropertyParameter(invariantName As String, name As String, property As IProperty)
    parameters:
    - id: invariantName
      type: System.String
      description: "\nThe key that identifies this parameter. Note that <xref href=\"Microsoft.EntityFrameworkCore.Storage.IRelationalParameter\" data-throw-if-not-resolved=\"false\"></xref> just represents a\nplaceholder for a parameter and not the actual value. This is because the same command can be\nreused multiple times with different parameter values.\n"
    - id: name
      type: System.String
      description: "\nThe name to be used for the parameter when the command is executed against the database.\n"
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
      description: "\nThe property that values for this parameter will come from.\n"
  overload: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter*
references:
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalParameter
  nameWithType: IRelationalParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
  isExternal: false
  name: Parameters
  nameWithType: IRelationalParameterBuilder.Parameters
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IRelationalParameter>
  nameWithType: IReadOnlyList<IRelationalParameter>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Storage.IRelationalParameter>
  nameWithType.vb: IReadOnlyList(Of IRelationalParameter)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameter)
  name.vb: IReadOnlyList(Of IRelationalParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
    name: IRelationalParameter
    nameWithType: IRelationalParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
    name: IRelationalParameter
    nameWithType: IRelationalParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter
  isExternal: false
  name: AddParameter
  nameWithType: IRelationalParameterBuilder.AddParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapping
  nameWithType: RelationalTypeMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: System.Data.Common.DbParameter
  commentId: T:System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: true
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter
  isExternal: false
  name: AddCompositeParameter
  nameWithType: IRelationalParameterBuilder.AddCompositeParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter
- uid: System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IRelationalParameterBuilder>
  nameWithType: Action<IRelationalParameterBuilder>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder>
  nameWithType.vb: Action(Of IRelationalParameterBuilder)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder)
  name.vb: Action(Of IRelationalParameterBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
    name: IRelationalParameterBuilder
    nameWithType: IRelationalParameterBuilder
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
    name: IRelationalParameterBuilder
    nameWithType: IRelationalParameterBuilder
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter
  isExternal: false
  name: AddPropertyParameter
  nameWithType: IRelationalParameterBuilder.AddPropertyParameter
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter
