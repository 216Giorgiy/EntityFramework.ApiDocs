### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
  commentId: T:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
  id: ReferenceEqualityComparer
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.Instance
  - Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)
  langs:
  - csharp
  - vb
  name: ReferenceEqualityComparer
  nameWithType: ReferenceEqualityComparer
  fullName: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/ReferenceEqualityComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ReferenceEqualityComparer
    path: src/Microsoft.EntityFrameworkCore/Internal/ReferenceEqualityComparer.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public sealed class ReferenceEqualityComparer : IEqualityComparer<object>'
    content.vb: >-
      Public NotInheritable Class ReferenceEqualityComparer
          Implements IEqualityComparer(Of Object)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Object}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.Instance
  id: Instance
  parent: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ReferenceEqualityComparer.Instance
  fullName: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/ReferenceEqualityComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Instance
    path: src/Microsoft.EntityFrameworkCore/Internal/ReferenceEqualityComparer.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static ReferenceEqualityComparer Instance { get; }
    content.vb: Public Shared ReadOnly Property Instance As ReferenceEqualityComparer
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)
  id: System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
  langs:
  - csharp
  - vb
  name: IEqualityComparer<Object>.Equals(Object, Object)
  nameWithType: ReferenceEqualityComparer.IEqualityComparer<Object>.Equals(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System.Collections.Generic.IEqualityComparer<System.Object>.Equals(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/ReferenceEqualityComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: System.Collections.Generic.IEqualityComparer<System.Object>.Equals
    path: src/Microsoft.EntityFrameworkCore/Internal/ReferenceEqualityComparer.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  syntax:
    content: bool IEqualityComparer<object>.Equals(object x, object y)
    content.vb: Function System.Collections.Generic.IEqualityComparer<System.Object>.Equals(x As Object, y As Object) As Boolean Implements IEqualityComparer(Of Object).Equals
    parameters:
    - id: x
      type: System.Object
    - id: y
      type: System.Object
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Object}.Equals(System.Object,System.Object)
  nameWithType.vb: ReferenceEqualityComparer.System.Collections.Generic.IEqualityComparer<System.Object>.Equals(Object, Object)
  name.vb: System.Collections.Generic.IEqualityComparer<System.Object>.Equals(Object, Object)
- uid: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)
  id: System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
  langs:
  - csharp
  - vb
  name: IEqualityComparer<Object>.GetHashCode(Object)
  nameWithType: ReferenceEqualityComparer.IEqualityComparer<Object>.GetHashCode(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/ReferenceEqualityComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode
    path: src/Microsoft.EntityFrameworkCore/Internal/ReferenceEqualityComparer.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  syntax:
    content: int IEqualityComparer<object>.GetHashCode(object obj)
    content.vb: Function System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(obj As Object) As Integer Implements IEqualityComparer(Of Object).GetHashCode
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Object}.GetHashCode(System.Object)
  nameWithType.vb: ReferenceEqualityComparer.System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(Object)
  name.vb: System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(Object)
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEqualityComparer{System.Object}
  commentId: T:System.Collections.Generic.IEqualityComparer{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<Object>
  nameWithType: IEqualityComparer<Object>
  fullName: System.Collections.Generic.IEqualityComparer<System.Object>
  nameWithType.vb: IEqualityComparer(Of Object)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Object)
  name.vb: IEqualityComparer(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
  commentId: T:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: ReferenceEqualityComparer
  nameWithType: ReferenceEqualityComparer
  fullName: Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer
- uid: System.Collections.Generic.IEqualityComparer{System.Object}.Equals(System.Object,System.Object)
  commentId: M:System.Collections.Generic.IEqualityComparer{System.Object}.Equals(System.Object,System.Object)
  parent: System.Collections.Generic.IEqualityComparer{System.Object}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(Object, Object)
  nameWithType: IEqualityComparer<Object>.Equals(Object, Object)
  fullName: System.Collections.Generic.IEqualityComparer<System.Object>.Equals(System.Object, System.Object)
  nameWithType.vb: IEqualityComparer(Of Object).Equals(Object, Object)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Object).Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<Object>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<System.Object>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of Object).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of System.Object).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{System.Object}.GetHashCode(System.Object)
  commentId: M:System.Collections.Generic.IEqualityComparer{System.Object}.GetHashCode(System.Object)
  parent: System.Collections.Generic.IEqualityComparer{System.Object}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(Object)
  nameWithType: IEqualityComparer<Object>.GetHashCode(Object)
  fullName: System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(System.Object)
  nameWithType.vb: IEqualityComparer(Of Object).GetHashCode(Object)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Object).GetHashCode(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<Object>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of Object).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of System.Object).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
