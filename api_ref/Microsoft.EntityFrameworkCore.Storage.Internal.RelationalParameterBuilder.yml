### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  id: RelationalParameterBuilder
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Parameters
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMapper
  langs:
  - csharp
  - vb
  name: RelationalParameterBuilder
  nameWithType: RelationalParameterBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: RelationalParameterBuilder
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class RelationalParameterBuilder : IRelationalParameterBuilder'
    content.vb: >-
      Public Class RelationalParameterBuilder
          Implements IRelationalParameterBuilder
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: RelationalParameterBuilder(IRelationalTypeMapper)
  nameWithType: RelationalParameterBuilder.RelationalParameterBuilder(IRelationalTypeMapper)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.RelationalParameterBuilder(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public RelationalParameterBuilder(IRelationalTypeMapper typeMapper)
    content.vb: Public Sub New(typeMapper As IRelationalTypeMapper)
    parameters:
    - id: typeMapper
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Parameters
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Parameters
  id: Parameters
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: RelationalParameterBuilder.Parameters
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Parameters
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Parameters
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<IRelationalParameter> Parameters { get; }
    content.vb: Public Overridable ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMapper
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMapper
  id: TypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: TypeMapper
  nameWithType: RelationalParameterBuilder.TypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMapper
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TypeMapper
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IRelationalTypeMapper TypeMapper { get; }
    content.vb: Protected Overridable ReadOnly Property TypeMapper As IRelationalTypeMapper
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String)
  id: AddParameter(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddParameter(String, String)
  nameWithType: RelationalParameterBuilder.AddParameter(String, String)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddParameter(string invariantName, string name)
    content.vb: Public Overridable Sub AddParameter(invariantName As String, name As String)
    parameters:
    - id: invariantName
      type: System.String
    - id: name
      type: System.String
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  id: AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddParameter(String, String, RelationalTypeMapping, Boolean)
  nameWithType: RelationalParameterBuilder.AddParameter(String, String, RelationalTypeMapping, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String, System.String, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddParameter(string invariantName, string name, RelationalTypeMapping typeMapping, bool nullable)
    content.vb: Public Overridable Sub AddParameter(invariantName As String, name As String, typeMapping As RelationalTypeMapping, nullable As Boolean)
    parameters:
    - id: invariantName
      type: System.String
    - id: name
      type: System.String
    - id: typeMapping
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    - id: nullable
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddParameter(String, String, IProperty)
  nameWithType: RelationalParameterBuilder.AddParameter(String, String, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
    startLine: 75
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddParameter(string invariantName, string name, IProperty property)
    content.vb: Public Overridable Sub AddParameter(invariantName As String, name As String, property As IProperty)
    parameters:
    - id: invariantName
      type: System.String
    - id: name
      type: System.String
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  id: AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddCompositeParameter(String, Action<IRelationalParameterBuilder>)
  nameWithType: RelationalParameterBuilder.AddCompositeParameter(String, Action<IRelationalParameterBuilder>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddCompositeParameter(System.String, System.Action<Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddCompositeParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
    startLine: 93
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddCompositeParameter(string invariantName, Action<IRelationalParameterBuilder> buildAction)
    content.vb: Public Overridable Sub AddCompositeParameter(invariantName As String, buildAction As Action(Of IRelationalParameterBuilder))
    parameters:
    - id: invariantName
      type: System.String
    - id: buildAction
      type: System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder}
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  nameWithType.vb: RelationalParameterBuilder.AddCompositeParameter(String, Action(Of IRelationalParameterBuilder))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddCompositeParameter(System.String, System.Action(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder))
  name.vb: AddCompositeParameter(String, Action(Of IRelationalParameterBuilder))
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder
  langs:
  - csharp
  - vb
  name: AddPropertyParameter(String, String, IProperty)
  nameWithType: RelationalParameterBuilder.AddPropertyParameter(String, String, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddPropertyParameter(System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddPropertyParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/Internal/RelationalParameterBuilder.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddPropertyParameter(string invariantName, string name, IProperty property)
    content.vb: Public Overridable Sub AddPropertyParameter(invariantName As String, name As String, property As IProperty)
    parameters:
    - id: invariantName
      type: System.String
    - id: name
      type: System.String
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalParameterBuilder
  nameWithType: IRelationalParameterBuilder
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<RelationalParameterBuilder, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<RelationalParameterBuilder, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of RelationalParameterBuilder, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of RelationalParameterBuilder, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<RelationalParameterBuilder, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<RelationalParameterBuilder, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of RelationalParameterBuilder, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of RelationalParameterBuilder, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  isExternal: false
  name: Parameters
  nameWithType: IRelationalParameterBuilder.Parameters
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IRelationalParameter>
  nameWithType: IReadOnlyList<IRelationalParameter>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Storage.IRelationalParameter>
  nameWithType.vb: IReadOnlyList(Of IRelationalParameter)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameter)
  name.vb: IReadOnlyList(Of IRelationalParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
    name: IRelationalParameter
    nameWithType: IRelationalParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
    name: IRelationalParameter
    nameWithType: IRelationalParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  isExternal: true
  name: AddParameter(String, String)
  nameWithType: IRelationalParameterBuilder.AddParameter(String, String)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)
    name: AddParameter
    nameWithType: IRelationalParameterBuilder.AddParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)
    name: AddParameter
    nameWithType: IRelationalParameterBuilder.AddParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  isExternal: true
  name: AddParameter(String, String, RelationalTypeMapping, Boolean)
  nameWithType: IRelationalParameterBuilder.AddParameter(String, String, RelationalTypeMapping, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String, System.String, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping, System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
    name: AddParameter
    nameWithType: IRelationalParameterBuilder.AddParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)
    name: AddParameter
    nameWithType: IRelationalParameterBuilder.AddParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
    name: RelationalTypeMapping
    nameWithType: RelationalTypeMapping
    fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapping
  nameWithType: RelationalTypeMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  isExternal: true
  name: AddParameter(String, String, IProperty)
  nameWithType: IRelationalParameterBuilder.AddParameter(String, String, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: AddParameter
    nameWithType: IRelationalParameterBuilder.AddParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: AddParameter
    nameWithType: IRelationalParameterBuilder.AddParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  isExternal: true
  name: AddCompositeParameter(String, Action<IRelationalParameterBuilder>)
  nameWithType: IRelationalParameterBuilder.AddCompositeParameter(String, Action<IRelationalParameterBuilder>)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String, System.Action<Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder>)
  nameWithType.vb: IRelationalParameterBuilder.AddCompositeParameter(String, Action(Of IRelationalParameterBuilder))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String, System.Action(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder))
  name.vb: AddCompositeParameter(String, Action(Of IRelationalParameterBuilder))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
    name: AddCompositeParameter
    nameWithType: IRelationalParameterBuilder.AddCompositeParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
    name: IRelationalParameterBuilder
    nameWithType: IRelationalParameterBuilder
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})
    name: AddCompositeParameter
    nameWithType: IRelationalParameterBuilder.AddCompositeParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
    name: IRelationalParameterBuilder
    nameWithType: IRelationalParameterBuilder
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IRelationalParameterBuilder>
  nameWithType: Action<IRelationalParameterBuilder>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder>
  nameWithType.vb: Action(Of IRelationalParameterBuilder)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder)
  name.vb: Action(Of IRelationalParameterBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
    name: IRelationalParameterBuilder
    nameWithType: IRelationalParameterBuilder
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
    name: IRelationalParameterBuilder
    nameWithType: IRelationalParameterBuilder
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder
  isExternal: true
  name: AddPropertyParameter(String, String, IProperty)
  nameWithType: IRelationalParameterBuilder.AddPropertyParameter(String, String, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String, System.String, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: AddPropertyParameter
    nameWithType: IRelationalParameterBuilder.AddPropertyParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)
    name: AddPropertyParameter
    nameWithType: IRelationalParameterBuilder.AddPropertyParameter
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
