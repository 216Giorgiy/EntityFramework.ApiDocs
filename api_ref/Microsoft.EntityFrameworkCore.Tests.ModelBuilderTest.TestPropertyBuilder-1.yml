### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  id: ModelBuilderTest.TestPropertyBuilder`1
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasAnnotation(System.String,System.Object)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasField(System.String)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasMaxLength(System.Int32)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator(System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator(System.Type)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator``1
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsConcurrencyToken(System.Boolean)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRequired(System.Boolean)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRowVersion
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsUnicode(System.Boolean)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.Metadata
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedNever
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAdd
  - Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAddOrUpdate
  langs:
  - csharp
  - vb
  name: ModelBuilderTest.TestPropertyBuilder<TProperty>
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TestPropertyBuilder
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 216
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract class TestPropertyBuilder<TProperty>
    content.vb: Public MustInherit Class TestPropertyBuilder(Of TProperty)
    typeParameters:
    - id: TProperty
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty)
  name.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.Metadata
  id: Metadata
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.Metadata
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.Metadata
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Metadata
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 218
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract IMutableProperty Metadata { get; }
    content.vb: Public MustOverride ReadOnly Property Metadata As IMutableProperty
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableProperty
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.Metadata*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).Metadata
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).Metadata
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasAnnotation(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasAnnotation(System.String,System.Object)
  id: HasAnnotation(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: HasAnnotation(String, Object)
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasAnnotation(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasAnnotation(System.String, System.Object)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasAnnotation
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 219
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> HasAnnotation(string annotation, object value)
    content.vb: Public MustOverride Function HasAnnotation(annotation As String, value As Object) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    parameters:
    - id: annotation
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasAnnotation*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasAnnotation(String, Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasAnnotation(System.String, System.Object)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRequired(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRequired(System.Boolean)
  id: IsRequired(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: IsRequired(Boolean)
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.IsRequired(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.IsRequired(System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsRequired
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 220
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> IsRequired(bool isRequired = true)
    content.vb: Public MustOverride Function IsRequired(isRequired As Boolean = True) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    parameters:
    - id: isRequired
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRequired*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsRequired(Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsRequired(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasMaxLength(System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasMaxLength(System.Int32)
  id: HasMaxLength(System.Int32)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: HasMaxLength(Int32)
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasMaxLength(Int32)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasMaxLength(System.Int32)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasMaxLength
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 221
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> HasMaxLength(int maxLength)
    content.vb: Public MustOverride Function HasMaxLength(maxLength As Integer) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    parameters:
    - id: maxLength
      type: System.Int32
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasMaxLength*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasMaxLength(Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasMaxLength(System.Int32)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsUnicode(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsUnicode(System.Boolean)
  id: IsUnicode(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: IsUnicode(Boolean)
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.IsUnicode(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.IsUnicode(System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsUnicode
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 222
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> IsUnicode(bool unicode = true)
    content.vb: Public MustOverride Function IsUnicode(unicode As Boolean = True) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    parameters:
    - id: unicode
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsUnicode*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsUnicode(Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsUnicode(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRowVersion
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRowVersion
  id: IsRowVersion
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: IsRowVersion()
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.IsRowVersion()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.IsRowVersion()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsRowVersion
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 223
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> IsRowVersion()
    content.vb: Public MustOverride Function IsRowVersion As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRowVersion*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsRowVersion()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsRowVersion()
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsConcurrencyToken(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsConcurrencyToken(System.Boolean)
  id: IsConcurrencyToken(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: IsConcurrencyToken(Boolean)
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.IsConcurrencyToken(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.IsConcurrencyToken(System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsConcurrencyToken
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 224
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> IsConcurrencyToken(bool isConcurrencyToken = true)
    content.vb: Public MustOverride Function IsConcurrencyToken(isConcurrencyToken As Boolean = True) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    parameters:
    - id: isConcurrencyToken
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsConcurrencyToken*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsConcurrencyToken(Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsConcurrencyToken(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedNever
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedNever
  id: ValueGeneratedNever
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: ValueGeneratedNever()
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedNever()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedNever()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ValueGeneratedNever
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 226
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> ValueGeneratedNever()
    content.vb: Public MustOverride Function ValueGeneratedNever As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedNever*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedNever()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedNever()
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAdd
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAdd
  id: ValueGeneratedOnAdd
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: ValueGeneratedOnAdd()
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedOnAdd()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedOnAdd()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ValueGeneratedOnAdd
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 227
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> ValueGeneratedOnAdd()
    content.vb: Public MustOverride Function ValueGeneratedOnAdd As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAdd*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedOnAdd()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedOnAdd()
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAddOrUpdate
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAddOrUpdate
  id: ValueGeneratedOnAddOrUpdate
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: ValueGeneratedOnAddOrUpdate()
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedOnAddOrUpdate()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedOnAddOrUpdate()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ValueGeneratedOnAddOrUpdate
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 228
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> ValueGeneratedOnAddOrUpdate()
    content.vb: Public MustOverride Function ValueGeneratedOnAddOrUpdate As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAddOrUpdate*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedOnAddOrUpdate()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedOnAddOrUpdate()
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator``1
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator``1
  id: HasValueGenerator``1
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: HasValueGenerator<TGenerator>()
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasValueGenerator<TGenerator>()
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasValueGenerator<TGenerator>()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasValueGenerator
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 230
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> HasValueGenerator<TGenerator>()where TGenerator : ValueGenerator'
    content.vb: Public MustOverride Function HasValueGenerator(Of TGenerator As ValueGenerator) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    typeParameters:
    - id: TGenerator
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasValueGenerator(Of TGenerator)()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasValueGenerator(Of TGenerator)()
  name.vb: HasValueGenerator(Of TGenerator)()
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator(System.Type)
  id: HasValueGenerator(System.Type)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: HasValueGenerator(Type)
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasValueGenerator(Type)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasValueGenerator(System.Type)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasValueGenerator
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 231
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> HasValueGenerator(Type valueGeneratorType)
    content.vb: Public MustOverride Function HasValueGenerator(valueGeneratorType As Type) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    parameters:
    - id: valueGeneratorType
      type: System.Type
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasValueGenerator(Type)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasValueGenerator(System.Type)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator(System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator(System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})
  id: HasValueGenerator(System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: HasValueGenerator(Func<IProperty, IEntityType, ValueGenerator>)
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasValueGenerator(Func<IProperty, IEntityType, ValueGenerator>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasValueGenerator(System.Func<Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasValueGenerator
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 232
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> HasValueGenerator(Func<IProperty, IEntityType, ValueGenerator> factory)
    content.vb: Public MustOverride Function HasValueGenerator(factory As Func(Of IProperty, IEntityType, ValueGenerator)) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    parameters:
    - id: factory
      type: System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator}
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasValueGenerator(Func(Of IProperty, IEntityType, ValueGenerator))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasValueGenerator(System.Func(Of Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator))
  name.vb: HasValueGenerator(Func(Of IProperty, IEntityType, ValueGenerator))
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasField(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasField(System.String)
  id: HasField(System.String)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: HasField(String)
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasField(String)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasField(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasField
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 234
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> HasField(string fieldName)
    content.vb: Public MustOverride Function HasField(fieldName As String) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    parameters:
    - id: fieldName
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasField*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasField(String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasField(System.String)
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  id: UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  parent: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  langs:
  - csharp
  - vb
  name: UsePropertyAccessMode(PropertyAccessMode)
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.UsePropertyAccessMode(PropertyAccessMode)
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UsePropertyAccessMode
    path: test/Microsoft.EntityFrameworkCore.Tests/ModelBuilderTest/ModelBuilderTestBase.cs
    startLine: 235
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract ModelBuilderTest.TestPropertyBuilder<TProperty> UsePropertyAccessMode(PropertyAccessMode propertyAccessMode)
    content.vb: Public MustOverride Function UsePropertyAccessMode(propertyAccessMode As PropertyAccessMode) As ModelBuilderTest.TestPropertyBuilder(Of TProperty)
    parameters:
    - id: propertyAccessMode
      type: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
    return:
      type: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  overload: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.UsePropertyAccessMode*
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).UsePropertyAccessMode(PropertyAccessMode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.Metadata*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.Metadata
  isExternal: false
  name: Metadata
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.Metadata
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.Metadata
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).Metadata
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableProperty
  nameWithType: IMutableProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableProperty
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasAnnotation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasAnnotation
  isExternal: false
  name: HasAnnotation
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasAnnotation
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasAnnotation
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasAnnotation
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasAnnotation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: ModelBuilderTest.TestPropertyBuilder<TProperty>
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty)
  name.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
    name: ModelBuilderTest.TestPropertyBuilder
    nameWithType: ModelBuilderTest.TestPropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1
    name: ModelBuilderTest.TestPropertyBuilder
    nameWithType: ModelBuilderTest.TestPropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRequired*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRequired
  isExternal: false
  name: IsRequired
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.IsRequired
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.IsRequired
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsRequired
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsRequired
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasMaxLength*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasMaxLength
  isExternal: false
  name: HasMaxLength
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasMaxLength
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasMaxLength
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasMaxLength
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasMaxLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsUnicode*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsUnicode
  isExternal: false
  name: IsUnicode
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.IsUnicode
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.IsUnicode
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsUnicode
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsUnicode
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRowVersion*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsRowVersion
  isExternal: false
  name: IsRowVersion
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.IsRowVersion
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.IsRowVersion
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsRowVersion
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsRowVersion
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsConcurrencyToken*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.IsConcurrencyToken
  isExternal: false
  name: IsConcurrencyToken
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.IsConcurrencyToken
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.IsConcurrencyToken
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsConcurrencyToken
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).IsConcurrencyToken
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedNever*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedNever
  isExternal: false
  name: ValueGeneratedNever
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedNever
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedNever
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedNever
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedNever
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAdd*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAdd
  isExternal: false
  name: ValueGeneratedOnAdd
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedOnAdd
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedOnAdd
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedOnAdd
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedOnAdd
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAddOrUpdate*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.ValueGeneratedOnAddOrUpdate
  isExternal: false
  name: ValueGeneratedOnAddOrUpdate
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedOnAddOrUpdate
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.ValueGeneratedOnAddOrUpdate
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedOnAddOrUpdate
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).ValueGeneratedOnAddOrUpdate
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasValueGenerator
  isExternal: false
  name: HasValueGenerator<TGenerator>
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasValueGenerator<TGenerator>
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasValueGenerator<TGenerator>
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasValueGenerator(Of TGenerator)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasValueGenerator(Of TGenerator)
  name.vb: HasValueGenerator(Of TGenerator)
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator}
  parent: System
  definition: System.Func`3
  name: Func<IProperty, IEntityType, ValueGenerator>
  nameWithType: Func<IProperty, IEntityType, ValueGenerator>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator>
  nameWithType.vb: Func(Of IProperty, IEntityType, ValueGenerator)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator)
  name.vb: Func(Of IProperty, IEntityType, ValueGenerator)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
    name: ValueGenerator
    nameWithType: ValueGenerator
    fullName: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    name: IEntityType
    nameWithType: IEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
    name: ValueGenerator
    nameWithType: ValueGenerator
    fullName: Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasField*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.HasField
  isExternal: false
  name: HasField
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.HasField
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.HasField
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasField
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).HasField
- uid: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.UsePropertyAccessMode*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder`1.UsePropertyAccessMode
  isExternal: false
  name: UsePropertyAccessMode
  nameWithType: ModelBuilderTest.TestPropertyBuilder<TProperty>.UsePropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder<TProperty>.UsePropertyAccessMode
  nameWithType.vb: ModelBuilderTest.TestPropertyBuilder(Of TProperty).UsePropertyAccessMode
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.ModelBuilderTest.TestPropertyBuilder(Of TProperty).UsePropertyAccessMode
- uid: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: PropertyAccessMode
  nameWithType: PropertyAccessMode
  fullName: Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode
