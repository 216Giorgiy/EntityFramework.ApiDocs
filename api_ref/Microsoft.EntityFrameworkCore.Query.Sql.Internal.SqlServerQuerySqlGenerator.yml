### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  id: SqlServerQuerySqlGenerator
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
  langs:
  - csharp
  - vb
  name: SqlServerQuerySqlGenerator
  nameWithType: SqlServerQuerySqlGenerator
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerQuerySqlGenerator
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class SqlServerQuerySqlGenerator : DefaultQuerySqlGenerator, ISqlExpressionVisitor, IQuerySqlGenerator, ISqlServerExpressionVisitor'
    content.vb: >-
      Public Class SqlServerQuerySqlGenerator
          Inherits DefaultQuerySqlGenerator
          Implements ISqlExpressionVisitor, IQuerySqlGenerator, ISqlServerExpressionVisitor
  inheritance:
  - System.Object
  - System.Linq.Expressions.ExpressionVisitor
  - Remotion.Linq.Parsing.RelinqExpressionVisitor
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  implements:
  - Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor
  - Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.IsCacheable
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SelectExpression
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SqlGenerator
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ParameterValues
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.Sql
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ConcatOperator
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedTrueLiteral
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedFalseLiteral
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList{Remotion.Linq.Clauses.Ordering})
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String,System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSum(Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMin(Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMax(Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary(System.Linq.Expressions.UnaryExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant(System.Linq.Expressions.ConstantExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter(System.Linq.Expressions.ParameterExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator(System.Linq.Expressions.ExpressionType,System.String@)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator(System.Linq.Expressions.ExpressionType)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1({T},System.String)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression(System.Linq.Expressions.Expression,System.String,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2({TItem},System.String,System.Func{{TItem},{TResult}})
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitExtension(System.Linq.Expressions.Expression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitUnary(System.Linq.Expressions.UnaryExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBinary(System.Linq.Expressions.BinaryExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConstant(System.Linq.Expressions.ConstantExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConditional(System.Linq.Expressions.ConditionalExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitParameter(System.Linq.Expressions.ParameterExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{{T}})
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{{T}})
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitInvocation(System.Linq.Expressions.InvocationExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMember(System.Linq.Expressions.MemberExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNew(System.Linq.Expressions.NewExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNewArray(System.Linq.Expressions.NewArrayExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitListInit(System.Linq.Expressions.ListInitExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBlock(System.Linq.Expressions.BlockExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDefault(System.Linq.Expressions.DefaultExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitGoto(System.Linq.Expressions.GotoExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitIndex(System.Linq.Expressions.IndexExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabel(System.Linq.Expressions.LabelExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLoop(System.Linq.Expressions.LoopExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitch(System.Linq.Expressions.SwitchExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTry(System.Linq.Expressions.TryExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberBinding(System.Linq.Expressions.MemberBinding)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitElementInit(System.Linq.Expressions.ElementInit)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitCatchBlock(System.Linq.Expressions.CatchBlock)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabelTarget(System.Linq.Expressions.LabelTarget)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitchCase(System.Linq.Expressions.SwitchCase)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
  - Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
  - Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression(System.Collections.Generic.IList{System.Linq.Expressions.Expression},System.Collections.Generic.IList{System.Reflection.MemberInfo})
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)'
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: SqlServerQuerySqlGenerator(IRelationalCommandBuilderFactory, ISqlGenerationHelper, IParameterNameGeneratorFactory, IRelationalTypeMapper, SelectExpression)
  nameWithType: SqlServerQuerySqlGenerator.SqlServerQuerySqlGenerator(IRelationalCommandBuilderFactory, ISqlGenerationHelper, IParameterNameGeneratorFactory, IRelationalTypeMapper, SelectExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.SqlServerQuerySqlGenerator(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public SqlServerQuerySqlGenerator(IRelationalCommandBuilderFactory relationalCommandBuilderFactory, ISqlGenerationHelper sqlGenerationHelper, IParameterNameGeneratorFactory parameterNameGeneratorFactory, IRelationalTypeMapper relationalTypeMapper, SelectExpression selectExpression)
    content.vb: Public Sub New(relationalCommandBuilderFactory As IRelationalCommandBuilderFactory, sqlGenerationHelper As ISqlGenerationHelper, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, relationalTypeMapper As IRelationalTypeMapper, selectExpression As SelectExpression)
    parameters:
    - id: relationalCommandBuilderFactory
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory
    - id: sqlGenerationHelper
      type: Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper
    - id: parameterNameGeneratorFactory
      type: Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory
    - id: relationalTypeMapper
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    - id: selectExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
  id: VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: VisitLateralJoin(LateralJoinExpression)
  nameWithType: SqlServerQuerySqlGenerator.VisitLateralJoin(LateralJoinExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitLateralJoin
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Expression VisitLateralJoin(LateralJoinExpression lateralJoinExpression)
    content.vb: Public Overrides Function VisitLateralJoin(lateralJoinExpression As LateralJoinExpression) As Expression
    parameters:
    - id: lateralJoinExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression
    return:
      type: System.Linq.Expressions.Expression
  overridden: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
  id: VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: VisitCount(CountExpression)
  nameWithType: SqlServerQuerySqlGenerator.VisitCount(CountExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitCount
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Expression VisitCount(CountExpression countExpression)
    content.vb: Public Overrides Function VisitCount(countExpression As CountExpression) As Expression
    parameters:
    - id: countExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression
    return:
      type: System.Linq.Expressions.Expression
  overridden: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  id: GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: GenerateLimitOffset(SelectExpression)
  nameWithType: SqlServerQuerySqlGenerator.GenerateLimitOffset(SelectExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenerateLimitOffset
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
    startLine: 78
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override void GenerateLimitOffset(SelectExpression selectExpression)
    content.vb: Protected Overrides Sub GenerateLimitOffset(selectExpression As SelectExpression)
    parameters:
    - id: selectExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  overridden: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
  id: VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: VisitRowNumber(RowNumberExpression)
  nameWithType: SqlServerQuerySqlGenerator.VisitRowNumber(RowNumberExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitRowNumber
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
    startLine: 98
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Expression VisitRowNumber(RowNumberExpression rowNumberExpression)
    content.vb: Public Overridable Function VisitRowNumber(rowNumberExpression As RowNumberExpression) As Expression
    parameters:
    - id: rowNumberExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression
    return:
      type: System.Linq.Expressions.Expression
  implements:
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
  id: VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: VisitDatePartExpression(DatePartExpression)
  nameWithType: SqlServerQuerySqlGenerator.VisitDatePartExpression(DatePartExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitDatePartExpression
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
    startLine: 113
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Expression VisitDatePartExpression(DatePartExpression datePartExpression)
    content.vb: Public Overridable Function VisitDatePartExpression(datePartExpression As DatePartExpression) As Expression
    parameters:
    - id: datePartExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression
    return:
      type: System.Linq.Expressions.Expression
  implements:
  - Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
  id: VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator
  langs:
  - csharp
  - vb
  name: VisitSqlFunction(SqlFunctionExpression)
  nameWithType: SqlServerQuerySqlGenerator.VisitSqlFunction(SqlFunctionExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqlServerQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitSqlFunction
    path: src/Microsoft.EntityFrameworkCore.SqlServer/Query/Sql/Internal/SqlServerQuerySqlGenerator.cs
    startLine: 129
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer
  namespace: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Expression VisitSqlFunction(SqlFunctionExpression sqlFunctionExpression)
    content.vb: Public Overrides Function VisitSqlFunction(sqlFunctionExpression As SqlFunctionExpression) As Expression
    parameters:
    - id: sqlFunctionExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression
    return:
      type: System.Linq.Expressions.Expression
  overridden: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Sql.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.Expressions.ExpressionVisitor
  commentId: T:System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: true
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: Remotion.Linq.Parsing.RelinqExpressionVisitor
  commentId: T:Remotion.Linq.Parsing.RelinqExpressionVisitor
  parent: Remotion.Linq.Parsing
  isExternal: true
  name: RelinqExpressionVisitor
  nameWithType: RelinqExpressionVisitor
  fullName: Remotion.Linq.Parsing.RelinqExpressionVisitor
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  commentId: T:Remotion.Linq.Parsing.ThrowingExpressionVisitor
  parent: Remotion.Linq.Parsing
  isExternal: true
  name: ThrowingExpressionVisitor
  nameWithType: ThrowingExpressionVisitor
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  parent: Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: DefaultQuerySqlGenerator
  nameWithType: DefaultQuerySqlGenerator
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
- uid: Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor
  parent: Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: ISqlExpressionVisitor
  nameWithType: ISqlExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  parent: Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: IQuerySqlGenerator
  nameWithType: IQuerySqlGenerator
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal
  isExternal: false
  name: ISqlServerExpressionVisitor
  nameWithType: ISqlServerExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.IsCacheable
  commentId: P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.IsCacheable
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: IsCacheable
  nameWithType: DefaultQuerySqlGenerator.IsCacheable
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.IsCacheable
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SelectExpression
  commentId: P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SelectExpression
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: SelectExpression
  nameWithType: DefaultQuerySqlGenerator.SelectExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SelectExpression
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SqlGenerator
  commentId: P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SqlGenerator
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: SqlGenerator
  nameWithType: DefaultQuerySqlGenerator.SqlGenerator
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SqlGenerator
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ParameterValues
  commentId: P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ParameterValues
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: ParameterValues
  nameWithType: DefaultQuerySqlGenerator.ParameterValues
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ParameterValues
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: GenerateSql(IReadOnlyDictionary<String, Object>)
  nameWithType: DefaultQuerySqlGenerator.GenerateSql(IReadOnlyDictionary<String, Object>)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>)
  nameWithType.vb: DefaultQuerySqlGenerator.GenerateSql(IReadOnlyDictionary(Of String, Object))
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object))
  name.vb: GenerateSql(IReadOnlyDictionary(Of String, Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
    name: GenerateSql
    nameWithType: DefaultQuerySqlGenerator.GenerateSql
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
    name: GenerateSql
    nameWithType: DefaultQuerySqlGenerator.GenerateSql
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: CreateValueBufferFactory(IRelationalValueBufferFactoryFactory, DbDataReader)
  nameWithType: DefaultQuerySqlGenerator.CreateValueBufferFactory(IRelationalValueBufferFactoryFactory, DbDataReader)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory, System.Data.Common.DbDataReader)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)
    name: CreateValueBufferFactory
    nameWithType: DefaultQuerySqlGenerator.CreateValueBufferFactory
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
    name: IRelationalValueBufferFactoryFactory
    nameWithType: IRelationalValueBufferFactoryFactory
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)
    name: CreateValueBufferFactory
    nameWithType: DefaultQuerySqlGenerator.CreateValueBufferFactory
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
    name: IRelationalValueBufferFactoryFactory
    nameWithType: IRelationalValueBufferFactoryFactory
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.Sql
  commentId: P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.Sql
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: Sql
  nameWithType: DefaultQuerySqlGenerator.Sql
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.Sql
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ConcatOperator
  commentId: P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ConcatOperator
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: ConcatOperator
  nameWithType: DefaultQuerySqlGenerator.ConcatOperator
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ConcatOperator
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedTrueLiteral
  commentId: P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedTrueLiteral
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: TypedTrueLiteral
  nameWithType: DefaultQuerySqlGenerator.TypedTrueLiteral
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedTrueLiteral
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedFalseLiteral
  commentId: P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedFalseLiteral
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: TypedFalseLiteral
  nameWithType: DefaultQuerySqlGenerator.TypedFalseLiteral
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedFalseLiteral
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitSelect(SelectExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitSelect(SelectExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
    name: VisitSelect
    nameWithType: DefaultQuerySqlGenerator.VisitSelect
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
    name: SelectExpression
    nameWithType: SelectExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
    name: VisitSelect
    nameWithType: DefaultQuerySqlGenerator.VisitSelect
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
    name: SelectExpression
    nameWithType: SelectExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: VisitProjection(IReadOnlyList<Expression>)
  nameWithType: DefaultQuerySqlGenerator.VisitProjection(IReadOnlyList<Expression>)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection(System.Collections.Generic.IReadOnlyList<System.Linq.Expressions.Expression>)
  nameWithType.vb: DefaultQuerySqlGenerator.VisitProjection(IReadOnlyList(Of Expression))
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection(System.Collections.Generic.IReadOnlyList(Of System.Linq.Expressions.Expression))
  name.vb: VisitProjection(IReadOnlyList(Of Expression))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
    name: VisitProjection
    nameWithType: DefaultQuerySqlGenerator.VisitProjection
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
    name: VisitProjection
    nameWithType: DefaultQuerySqlGenerator.VisitProjection
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList{Remotion.Linq.Clauses.Ordering})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList{Remotion.Linq.Clauses.Ordering})
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: GenerateOrderBy(IReadOnlyList<Ordering>)
  nameWithType: DefaultQuerySqlGenerator.GenerateOrderBy(IReadOnlyList<Ordering>)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList<Remotion.Linq.Clauses.Ordering>)
  nameWithType.vb: DefaultQuerySqlGenerator.GenerateOrderBy(IReadOnlyList(Of Ordering))
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList(Of Remotion.Linq.Clauses.Ordering))
  name.vb: GenerateOrderBy(IReadOnlyList(Of Ordering))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList{Remotion.Linq.Clauses.Ordering})
    name: GenerateOrderBy
    nameWithType: DefaultQuerySqlGenerator.GenerateOrderBy
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList{Remotion.Linq.Clauses.Ordering})
    name: GenerateOrderBy
    nameWithType: DefaultQuerySqlGenerator.GenerateOrderBy
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitFromSql(FromSqlExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitFromSql(FromSqlExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)
    name: VisitFromSql
    nameWithType: DefaultQuerySqlGenerator.VisitFromSql
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression
    name: FromSqlExpression
    nameWithType: FromSqlExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)
    name: VisitFromSql
    nameWithType: DefaultQuerySqlGenerator.VisitFromSql
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression
    name: FromSqlExpression
    nameWithType: FromSqlExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String,System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String,System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: GenerateFromSql(String, Expression, IReadOnlyDictionary<String, Object>)
  nameWithType: DefaultQuerySqlGenerator.GenerateFromSql(String, Expression, IReadOnlyDictionary<String, Object>)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String, System.Linq.Expressions.Expression, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>)
  nameWithType.vb: DefaultQuerySqlGenerator.GenerateFromSql(String, Expression, IReadOnlyDictionary(Of String, Object))
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String, System.Linq.Expressions.Expression, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object))
  name.vb: GenerateFromSql(String, Expression, IReadOnlyDictionary(Of String, Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String,System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
    name: GenerateFromSql
    nameWithType: DefaultQuerySqlGenerator.GenerateFromSql
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String,System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})
    name: GenerateFromSql
    nameWithType: DefaultQuerySqlGenerator.GenerateFromSql
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitTable(TableExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitTable(TableExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)
    name: VisitTable
    nameWithType: DefaultQuerySqlGenerator.VisitTable
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression
    name: TableExpression
    nameWithType: TableExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)
    name: VisitTable
    nameWithType: DefaultQuerySqlGenerator.VisitTable
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression
    name: TableExpression
    nameWithType: TableExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitCrossJoin(CrossJoinExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitCrossJoin(CrossJoinExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)
    name: VisitCrossJoin
    nameWithType: DefaultQuerySqlGenerator.VisitCrossJoin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression
    name: CrossJoinExpression
    nameWithType: CrossJoinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)
    name: VisitCrossJoin
    nameWithType: DefaultQuerySqlGenerator.VisitCrossJoin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression
    name: CrossJoinExpression
    nameWithType: CrossJoinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSum(Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSum(Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitSum(SumExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitSum(SumExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSum(Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSum(Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression)
    name: VisitSum
    nameWithType: DefaultQuerySqlGenerator.VisitSum
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSum
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression
    name: SumExpression
    nameWithType: SumExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSum(Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression)
    name: VisitSum
    nameWithType: DefaultQuerySqlGenerator.VisitSum
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSum
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression
    name: SumExpression
    nameWithType: SumExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMin(Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMin(Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitMin(MinExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitMin(MinExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMin(Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMin(Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression)
    name: VisitMin
    nameWithType: DefaultQuerySqlGenerator.VisitMin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression
    name: MinExpression
    nameWithType: MinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMin(Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression)
    name: VisitMin
    nameWithType: DefaultQuerySqlGenerator.VisitMin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression
    name: MinExpression
    nameWithType: MinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMax(Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMax(Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitMax(MaxExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitMax(MaxExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMax(Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMax(Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression)
    name: VisitMax
    nameWithType: DefaultQuerySqlGenerator.VisitMax
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMax
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression
    name: MaxExpression
    nameWithType: MaxExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMax(Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression)
    name: VisitMax
    nameWithType: DefaultQuerySqlGenerator.VisitMax
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMax
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression
    name: MaxExpression
    nameWithType: MaxExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitStringCompare(StringCompareExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitStringCompare(StringCompareExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)
    name: VisitStringCompare
    nameWithType: DefaultQuerySqlGenerator.VisitStringCompare
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression
    name: StringCompareExpression
    nameWithType: StringCompareExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)
    name: VisitStringCompare
    nameWithType: DefaultQuerySqlGenerator.VisitStringCompare
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression
    name: StringCompareExpression
    nameWithType: StringCompareExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitIn(InExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitIn(InExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
    name: VisitIn
    nameWithType: DefaultQuerySqlGenerator.VisitIn
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.InExpression
    name: InExpression
    nameWithType: InExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.InExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
    name: VisitIn
    nameWithType: DefaultQuerySqlGenerator.VisitIn
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.InExpression
    name: InExpression
    nameWithType: InExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.InExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitNotIn(InExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitNotIn(InExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
    name: VisitNotIn
    nameWithType: DefaultQuerySqlGenerator.VisitNotIn
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.InExpression
    name: InExpression
    nameWithType: InExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.InExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)
    name: VisitNotIn
    nameWithType: DefaultQuerySqlGenerator.VisitNotIn
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.InExpression
    name: InExpression
    nameWithType: InExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.InExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: ProcessInExpressionValues(IEnumerable<Expression>)
  nameWithType: DefaultQuerySqlGenerator.ProcessInExpressionValues(IEnumerable<Expression>)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  nameWithType.vb: DefaultQuerySqlGenerator.ProcessInExpressionValues(IEnumerable(Of Expression))
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ProcessInExpressionValues(IEnumerable(Of Expression))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ProcessInExpressionValues
    nameWithType: DefaultQuerySqlGenerator.ProcessInExpressionValues
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ProcessInExpressionValues
    nameWithType: DefaultQuerySqlGenerator.ProcessInExpressionValues
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: ExtractNonNullExpressionValues(IReadOnlyList<Expression>)
  nameWithType: DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(IReadOnlyList<Expression>)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList<System.Linq.Expressions.Expression>)
  nameWithType.vb: DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(IReadOnlyList(Of Expression))
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList(Of System.Linq.Expressions.Expression))
  name.vb: ExtractNonNullExpressionValues(IReadOnlyList(Of Expression))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
    name: ExtractNonNullExpressionValues
    nameWithType: DefaultQuerySqlGenerator.ExtractNonNullExpressionValues
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})
    name: ExtractNonNullExpressionValues
    nameWithType: DefaultQuerySqlGenerator.ExtractNonNullExpressionValues
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitInnerJoin(InnerJoinExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitInnerJoin(InnerJoinExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)
    name: VisitInnerJoin
    nameWithType: DefaultQuerySqlGenerator.VisitInnerJoin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression
    name: InnerJoinExpression
    nameWithType: InnerJoinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)
    name: VisitInnerJoin
    nameWithType: DefaultQuerySqlGenerator.VisitInnerJoin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression
    name: InnerJoinExpression
    nameWithType: InnerJoinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitLeftOuterJoin(LeftOuterJoinExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitLeftOuterJoin(LeftOuterJoinExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)
    name: VisitLeftOuterJoin
    nameWithType: DefaultQuerySqlGenerator.VisitLeftOuterJoin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression
    name: LeftOuterJoinExpression
    nameWithType: LeftOuterJoinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)
    name: VisitLeftOuterJoin
    nameWithType: DefaultQuerySqlGenerator.VisitLeftOuterJoin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression
    name: LeftOuterJoinExpression
    nameWithType: LeftOuterJoinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: GenerateTop(SelectExpression)
  nameWithType: DefaultQuerySqlGenerator.GenerateTop(SelectExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
    name: GenerateTop
    nameWithType: DefaultQuerySqlGenerator.GenerateTop
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
    name: SelectExpression
    nameWithType: SelectExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
    name: GenerateTop
    nameWithType: DefaultQuerySqlGenerator.GenerateTop
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
    name: SelectExpression
    nameWithType: SelectExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: VisitConditional(ConditionalExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitConditional(ConditionalExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional(System.Linq.Expressions.ConditionalExpression)
    name: VisitConditional
    nameWithType: DefaultQuerySqlGenerator.VisitConditional
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConditionalExpression
    name: ConditionalExpression
    nameWithType: ConditionalExpression
    fullName: System.Linq.Expressions.ConditionalExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional(System.Linq.Expressions.ConditionalExpression)
    name: VisitConditional
    nameWithType: DefaultQuerySqlGenerator.VisitConditional
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConditionalExpression
    name: ConditionalExpression
    nameWithType: ConditionalExpression
    fullName: System.Linq.Expressions.ConditionalExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitExists(ExistsExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitExists(ExistsExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)
    name: VisitExists
    nameWithType: DefaultQuerySqlGenerator.VisitExists
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression
    name: ExistsExpression
    nameWithType: ExistsExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)
    name: VisitExists
    nameWithType: DefaultQuerySqlGenerator.VisitExists
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression
    name: ExistsExpression
    nameWithType: ExistsExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: VisitBinary(BinaryExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitBinary(BinaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary(System.Linq.Expressions.BinaryExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary(System.Linq.Expressions.BinaryExpression)
    name: VisitBinary
    nameWithType: DefaultQuerySqlGenerator.VisitBinary
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BinaryExpression
    name: BinaryExpression
    nameWithType: BinaryExpression
    fullName: System.Linq.Expressions.BinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary(System.Linq.Expressions.BinaryExpression)
    name: VisitBinary
    nameWithType: DefaultQuerySqlGenerator.VisitBinary
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BinaryExpression
    name: BinaryExpression
    nameWithType: BinaryExpression
    fullName: System.Linq.Expressions.BinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitColumn(ColumnExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitColumn(ColumnExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)
    name: VisitColumn
    nameWithType: DefaultQuerySqlGenerator.VisitColumn
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression
    name: ColumnExpression
    nameWithType: ColumnExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)
    name: VisitColumn
    nameWithType: DefaultQuerySqlGenerator.VisitColumn
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression
    name: ColumnExpression
    nameWithType: ColumnExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitAlias(AliasExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitAlias(AliasExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)
    name: VisitAlias
    nameWithType: DefaultQuerySqlGenerator.VisitAlias
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression
    name: AliasExpression
    nameWithType: AliasExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)
    name: VisitAlias
    nameWithType: DefaultQuerySqlGenerator.VisitAlias
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression
    name: AliasExpression
    nameWithType: AliasExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitIsNull(IsNullExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitIsNull(IsNullExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
    name: VisitIsNull
    nameWithType: DefaultQuerySqlGenerator.VisitIsNull
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression
    name: IsNullExpression
    nameWithType: IsNullExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
    name: VisitIsNull
    nameWithType: DefaultQuerySqlGenerator.VisitIsNull
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression
    name: IsNullExpression
    nameWithType: IsNullExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitIsNotNull(IsNullExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitIsNotNull(IsNullExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
    name: VisitIsNotNull
    nameWithType: DefaultQuerySqlGenerator.VisitIsNotNull
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression
    name: IsNullExpression
    nameWithType: IsNullExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)
    name: VisitIsNotNull
    nameWithType: DefaultQuerySqlGenerator.VisitIsNotNull
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression
    name: IsNullExpression
    nameWithType: IsNullExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitLike(LikeExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitLike(LikeExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)
    name: VisitLike
    nameWithType: DefaultQuerySqlGenerator.VisitLike
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression
    name: LikeExpression
    nameWithType: LikeExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)
    name: VisitLike
    nameWithType: DefaultQuerySqlGenerator.VisitLike
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression
    name: LikeExpression
    nameWithType: LikeExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitExplicitCast(ExplicitCastExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitExplicitCast(ExplicitCastExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)
    name: VisitExplicitCast
    nameWithType: DefaultQuerySqlGenerator.VisitExplicitCast
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression
    name: ExplicitCastExpression
    nameWithType: ExplicitCastExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)
    name: VisitExplicitCast
    nameWithType: DefaultQuerySqlGenerator.VisitExplicitCast
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression
    name: ExplicitCastExpression
    nameWithType: ExplicitCastExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary(System.Linq.Expressions.UnaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary(System.Linq.Expressions.UnaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: VisitUnary(UnaryExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitUnary(UnaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary(System.Linq.Expressions.UnaryExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary(System.Linq.Expressions.UnaryExpression)
    name: VisitUnary
    nameWithType: DefaultQuerySqlGenerator.VisitUnary
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.UnaryExpression
    name: UnaryExpression
    nameWithType: UnaryExpression
    fullName: System.Linq.Expressions.UnaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary(System.Linq.Expressions.UnaryExpression)
    name: VisitUnary
    nameWithType: DefaultQuerySqlGenerator.VisitUnary
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.UnaryExpression
    name: UnaryExpression
    nameWithType: UnaryExpression
    fullName: System.Linq.Expressions.UnaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant(System.Linq.Expressions.ConstantExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: VisitConstant(ConstantExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitConstant(ConstantExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant(System.Linq.Expressions.ConstantExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant(System.Linq.Expressions.ConstantExpression)
    name: VisitConstant
    nameWithType: DefaultQuerySqlGenerator.VisitConstant
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConstantExpression
    name: ConstantExpression
    nameWithType: ConstantExpression
    fullName: System.Linq.Expressions.ConstantExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant(System.Linq.Expressions.ConstantExpression)
    name: VisitConstant
    nameWithType: DefaultQuerySqlGenerator.VisitConstant
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConstantExpression
    name: ConstantExpression
    nameWithType: ConstantExpression
    fullName: System.Linq.Expressions.ConstantExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter(System.Linq.Expressions.ParameterExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter(System.Linq.Expressions.ParameterExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: VisitParameter(ParameterExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitParameter(ParameterExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter(System.Linq.Expressions.ParameterExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter(System.Linq.Expressions.ParameterExpression)
    name: VisitParameter
    nameWithType: DefaultQuerySqlGenerator.VisitParameter
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter(System.Linq.Expressions.ParameterExpression)
    name: VisitParameter
    nameWithType: DefaultQuerySqlGenerator.VisitParameter
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitPropertyParameter(PropertyParameterExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitPropertyParameter(PropertyParameterExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)
    name: VisitPropertyParameter
    nameWithType: DefaultQuerySqlGenerator.VisitPropertyParameter
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression
    name: PropertyParameterExpression
    nameWithType: PropertyParameterExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)
    name: VisitPropertyParameter
    nameWithType: DefaultQuerySqlGenerator.VisitPropertyParameter
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression
    name: PropertyParameterExpression
    nameWithType: PropertyParameterExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: InferTypeMappingFromColumn(Expression)
  nameWithType: DefaultQuerySqlGenerator.InferTypeMappingFromColumn(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn(System.Linq.Expressions.Expression)
    name: InferTypeMappingFromColumn
    nameWithType: DefaultQuerySqlGenerator.InferTypeMappingFromColumn
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn(System.Linq.Expressions.Expression)
    name: InferTypeMappingFromColumn
    nameWithType: DefaultQuerySqlGenerator.InferTypeMappingFromColumn
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator(System.Linq.Expressions.ExpressionType,System.String@)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator(System.Linq.Expressions.ExpressionType,System.String@)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: TryGenerateBinaryOperator(ExpressionType, String)
  nameWithType: DefaultQuerySqlGenerator.TryGenerateBinaryOperator(ExpressionType, String)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator(System.Linq.Expressions.ExpressionType, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator(System.Linq.Expressions.ExpressionType,System.String@)
    name: TryGenerateBinaryOperator
    nameWithType: DefaultQuerySqlGenerator.TryGenerateBinaryOperator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    nameWithType: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator(System.Linq.Expressions.ExpressionType,System.String@)
    name: TryGenerateBinaryOperator
    nameWithType: DefaultQuerySqlGenerator.TryGenerateBinaryOperator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    nameWithType: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator(System.Linq.Expressions.ExpressionType)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator(System.Linq.Expressions.ExpressionType)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: GenerateBinaryOperator(ExpressionType)
  nameWithType: DefaultQuerySqlGenerator.GenerateBinaryOperator(ExpressionType)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator(System.Linq.Expressions.ExpressionType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator(System.Linq.Expressions.ExpressionType)
    name: GenerateBinaryOperator
    nameWithType: DefaultQuerySqlGenerator.GenerateBinaryOperator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    nameWithType: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator(System.Linq.Expressions.ExpressionType)
    name: GenerateBinaryOperator
    nameWithType: DefaultQuerySqlGenerator.GenerateBinaryOperator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    nameWithType: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: true
  name: GenerateOperator(Expression)
  nameWithType: DefaultQuerySqlGenerator.GenerateOperator(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator(System.Linq.Expressions.Expression)
    name: GenerateOperator
    nameWithType: DefaultQuerySqlGenerator.GenerateOperator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator(System.Linq.Expressions.Expression)
    name: GenerateOperator
    nameWithType: DefaultQuerySqlGenerator.GenerateOperator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1({T},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  definition: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)
  name: CreateUnhandledItemException<T>(T, String)
  nameWithType: DefaultQuerySqlGenerator.CreateUnhandledItemException<T>(T, String)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException<T>(T, System.String)
  nameWithType.vb: DefaultQuerySqlGenerator.CreateUnhandledItemException(Of T)(T, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException(Of T)(T, System.String)
  name.vb: CreateUnhandledItemException(Of T)(T, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)
    name: CreateUnhandledItemException<T>
    nameWithType: DefaultQuerySqlGenerator.CreateUnhandledItemException<T>
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)
    name: CreateUnhandledItemException(Of T)
    nameWithType: DefaultQuerySqlGenerator.CreateUnhandledItemException(Of T)
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: Visit(Expression)
  nameWithType: ThrowingExpressionVisitor.Visit(Expression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ThrowingExpressionVisitor.Visit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ThrowingExpressionVisitor.Visit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression(System.Linq.Expressions.Expression,System.String,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression(System.Linq.Expressions.Expression,System.String,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitUnknownStandardExpression(Expression, String, Func<Expression, Expression>)
  nameWithType: ThrowingExpressionVisitor.VisitUnknownStandardExpression(Expression, String, Func<Expression, Expression>)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression(System.Linq.Expressions.Expression, System.String, System.Func<System.Linq.Expressions.Expression, System.Linq.Expressions.Expression>)
  nameWithType.vb: ThrowingExpressionVisitor.VisitUnknownStandardExpression(Expression, String, Func(Of Expression, Expression))
  fullname.vb: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression(System.Linq.Expressions.Expression, System.String, System.Func(Of System.Linq.Expressions.Expression, System.Linq.Expressions.Expression))
  name.vb: VisitUnknownStandardExpression(Expression, String, Func(Of Expression, Expression))
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression(System.Linq.Expressions.Expression,System.String,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
    name: VisitUnknownStandardExpression
    nameWithType: ThrowingExpressionVisitor.VisitUnknownStandardExpression
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression(System.Linq.Expressions.Expression,System.String,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})
    name: VisitUnknownStandardExpression
    nameWithType: ThrowingExpressionVisitor.VisitUnknownStandardExpression
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnknownStandardExpression
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2({TItem},System.String,System.Func{{TItem},{TResult}})
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  definition: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
  name: VisitUnhandledItem<TItem, TResult>(TItem, String, Func<TItem, TResult>)
  nameWithType: ThrowingExpressionVisitor.VisitUnhandledItem<TItem, TResult>(TItem, String, Func<TItem, TResult>)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem<TItem, TResult>(TItem, System.String, System.Func<TItem, TResult>)
  nameWithType.vb: ThrowingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)(TItem, String, Func(Of TItem, TResult))
  fullname.vb: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)(TItem, System.String, System.Func(Of TItem, TResult))
  name.vb: VisitUnhandledItem(Of TItem, TResult)(TItem, String, Func(Of TItem, TResult))
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
    name: VisitUnhandledItem<TItem, TResult>
    nameWithType: ThrowingExpressionVisitor.VisitUnhandledItem<TItem, TResult>
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem<TItem, TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
    name: VisitUnhandledItem(Of TItem, TResult)
    nameWithType: ThrowingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitExtension(Expression)
  nameWithType: ThrowingExpressionVisitor.VisitExtension(Expression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ThrowingExpressionVisitor.VisitExtension
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ThrowingExpressionVisitor.VisitExtension
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitExtension(System.Linq.Expressions.Expression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitExtension(Expression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitExtension(Expression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitExtension(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitExtension(System.Linq.Expressions.Expression)
    name: BaseVisitExtension
    nameWithType: ThrowingExpressionVisitor.BaseVisitExtension
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitExtension(System.Linq.Expressions.Expression)
    name: BaseVisitExtension
    nameWithType: ThrowingExpressionVisitor.BaseVisitExtension
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitUnary(System.Linq.Expressions.UnaryExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitUnary(System.Linq.Expressions.UnaryExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitUnary(UnaryExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitUnary(UnaryExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitUnary(System.Linq.Expressions.UnaryExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitUnary(System.Linq.Expressions.UnaryExpression)
    name: BaseVisitUnary
    nameWithType: ThrowingExpressionVisitor.BaseVisitUnary
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitUnary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.UnaryExpression
    name: UnaryExpression
    nameWithType: UnaryExpression
    fullName: System.Linq.Expressions.UnaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitUnary(System.Linq.Expressions.UnaryExpression)
    name: BaseVisitUnary
    nameWithType: ThrowingExpressionVisitor.BaseVisitUnary
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitUnary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.UnaryExpression
    name: UnaryExpression
    nameWithType: UnaryExpression
    fullName: System.Linq.Expressions.UnaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitBinary(BinaryExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitBinary(BinaryExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBinary(System.Linq.Expressions.BinaryExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBinary(System.Linq.Expressions.BinaryExpression)
    name: BaseVisitBinary
    nameWithType: ThrowingExpressionVisitor.BaseVisitBinary
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BinaryExpression
    name: BinaryExpression
    nameWithType: BinaryExpression
    fullName: System.Linq.Expressions.BinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBinary(System.Linq.Expressions.BinaryExpression)
    name: BaseVisitBinary
    nameWithType: ThrowingExpressionVisitor.BaseVisitBinary
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BinaryExpression
    name: BinaryExpression
    nameWithType: BinaryExpression
    fullName: System.Linq.Expressions.BinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitTypeBinary(TypeBinaryExpression)
  nameWithType: ThrowingExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
    name: VisitTypeBinary
    nameWithType: ThrowingExpressionVisitor.VisitTypeBinary
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTypeBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TypeBinaryExpression
    name: TypeBinaryExpression
    nameWithType: TypeBinaryExpression
    fullName: System.Linq.Expressions.TypeBinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
    name: VisitTypeBinary
    nameWithType: ThrowingExpressionVisitor.VisitTypeBinary
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTypeBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TypeBinaryExpression
    name: TypeBinaryExpression
    nameWithType: TypeBinaryExpression
    fullName: System.Linq.Expressions.TypeBinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitTypeBinary(TypeBinaryExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitTypeBinary(TypeBinaryExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
    name: BaseVisitTypeBinary
    nameWithType: ThrowingExpressionVisitor.BaseVisitTypeBinary
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTypeBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TypeBinaryExpression
    name: TypeBinaryExpression
    nameWithType: TypeBinaryExpression
    fullName: System.Linq.Expressions.TypeBinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
    name: BaseVisitTypeBinary
    nameWithType: ThrowingExpressionVisitor.BaseVisitTypeBinary
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTypeBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TypeBinaryExpression
    name: TypeBinaryExpression
    nameWithType: TypeBinaryExpression
    fullName: System.Linq.Expressions.TypeBinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConstant(System.Linq.Expressions.ConstantExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitConstant(ConstantExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitConstant(ConstantExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConstant(System.Linq.Expressions.ConstantExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConstant(System.Linq.Expressions.ConstantExpression)
    name: BaseVisitConstant
    nameWithType: ThrowingExpressionVisitor.BaseVisitConstant
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConstant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConstantExpression
    name: ConstantExpression
    nameWithType: ConstantExpression
    fullName: System.Linq.Expressions.ConstantExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConstant(System.Linq.Expressions.ConstantExpression)
    name: BaseVisitConstant
    nameWithType: ThrowingExpressionVisitor.BaseVisitConstant
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConstant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConstantExpression
    name: ConstantExpression
    nameWithType: ConstantExpression
    fullName: System.Linq.Expressions.ConstantExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConditional(System.Linq.Expressions.ConditionalExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitConditional(ConditionalExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitConditional(ConditionalExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConditional(System.Linq.Expressions.ConditionalExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConditional(System.Linq.Expressions.ConditionalExpression)
    name: BaseVisitConditional
    nameWithType: ThrowingExpressionVisitor.BaseVisitConditional
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConditional
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConditionalExpression
    name: ConditionalExpression
    nameWithType: ConditionalExpression
    fullName: System.Linq.Expressions.ConditionalExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConditional(System.Linq.Expressions.ConditionalExpression)
    name: BaseVisitConditional
    nameWithType: ThrowingExpressionVisitor.BaseVisitConditional
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitConditional
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConditionalExpression
    name: ConditionalExpression
    nameWithType: ConditionalExpression
    fullName: System.Linq.Expressions.ConditionalExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitParameter(System.Linq.Expressions.ParameterExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitParameter(System.Linq.Expressions.ParameterExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitParameter(ParameterExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitParameter(ParameterExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitParameter(System.Linq.Expressions.ParameterExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitParameter(System.Linq.Expressions.ParameterExpression)
    name: BaseVisitParameter
    nameWithType: ThrowingExpressionVisitor.BaseVisitParameter
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitParameter(System.Linq.Expressions.ParameterExpression)
    name: BaseVisitParameter
    nameWithType: ThrowingExpressionVisitor.BaseVisitParameter
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{{T}})
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  definition: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  name: VisitLambda<T>(Expression<T>)
  nameWithType: ThrowingExpressionVisitor.VisitLambda<T>(Expression<T>)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  nameWithType.vb: ThrowingExpressionVisitor.VisitLambda(Of T)(Expression(Of T))
  fullname.vb: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: VisitLambda(Of T)(Expression(Of T))
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda<T>
    nameWithType: ThrowingExpressionVisitor.VisitLambda<T>
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda(Of T)
    nameWithType: ThrowingExpressionVisitor.VisitLambda(Of T)
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{{T}})
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{``0})
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  definition: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{``0})
  name: BaseVisitLambda<T>(Expression<T>)
  nameWithType: ThrowingExpressionVisitor.BaseVisitLambda<T>(Expression<T>)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda<T>(System.Linq.Expressions.Expression<T>)
  nameWithType.vb: ThrowingExpressionVisitor.BaseVisitLambda(Of T)(Expression(Of T))
  fullname.vb: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: BaseVisitLambda(Of T)(Expression(Of T))
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: BaseVisitLambda<T>
    nameWithType: ThrowingExpressionVisitor.BaseVisitLambda<T>
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: BaseVisitLambda(Of T)
    nameWithType: ThrowingExpressionVisitor.BaseVisitLambda(Of T)
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: ThrowingExpressionVisitor.VisitMethodCall(MethodCallExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
    name: VisitMethodCall
    nameWithType: ThrowingExpressionVisitor.VisitMethodCall
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMethodCall
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
    name: VisitMethodCall
    nameWithType: ThrowingExpressionVisitor.VisitMethodCall
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMethodCall
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitMethodCall(MethodCallExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitMethodCall(MethodCallExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMethodCall(System.Linq.Expressions.MethodCallExpression)
    name: BaseVisitMethodCall
    nameWithType: ThrowingExpressionVisitor.BaseVisitMethodCall
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMethodCall
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMethodCall(System.Linq.Expressions.MethodCallExpression)
    name: BaseVisitMethodCall
    nameWithType: ThrowingExpressionVisitor.BaseVisitMethodCall
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMethodCall
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitInvocation(InvocationExpression)
  nameWithType: ThrowingExpressionVisitor.VisitInvocation(InvocationExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
    name: VisitInvocation
    nameWithType: ThrowingExpressionVisitor.VisitInvocation
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitInvocation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.InvocationExpression
    name: InvocationExpression
    nameWithType: InvocationExpression
    fullName: System.Linq.Expressions.InvocationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
    name: VisitInvocation
    nameWithType: ThrowingExpressionVisitor.VisitInvocation
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitInvocation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.InvocationExpression
    name: InvocationExpression
    nameWithType: InvocationExpression
    fullName: System.Linq.Expressions.InvocationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitInvocation(System.Linq.Expressions.InvocationExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitInvocation(System.Linq.Expressions.InvocationExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitInvocation(InvocationExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitInvocation(InvocationExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitInvocation(System.Linq.Expressions.InvocationExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitInvocation(System.Linq.Expressions.InvocationExpression)
    name: BaseVisitInvocation
    nameWithType: ThrowingExpressionVisitor.BaseVisitInvocation
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitInvocation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.InvocationExpression
    name: InvocationExpression
    nameWithType: InvocationExpression
    fullName: System.Linq.Expressions.InvocationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitInvocation(System.Linq.Expressions.InvocationExpression)
    name: BaseVisitInvocation
    nameWithType: ThrowingExpressionVisitor.BaseVisitInvocation
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitInvocation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.InvocationExpression
    name: InvocationExpression
    nameWithType: InvocationExpression
    fullName: System.Linq.Expressions.InvocationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitMember(MemberExpression)
  nameWithType: ThrowingExpressionVisitor.VisitMember(MemberExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
    name: VisitMember
    nameWithType: ThrowingExpressionVisitor.VisitMember
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberExpression
    name: MemberExpression
    nameWithType: MemberExpression
    fullName: System.Linq.Expressions.MemberExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
    name: VisitMember
    nameWithType: ThrowingExpressionVisitor.VisitMember
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberExpression
    name: MemberExpression
    nameWithType: MemberExpression
    fullName: System.Linq.Expressions.MemberExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMember(System.Linq.Expressions.MemberExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMember(System.Linq.Expressions.MemberExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitMember(MemberExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitMember(MemberExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMember(System.Linq.Expressions.MemberExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMember(System.Linq.Expressions.MemberExpression)
    name: BaseVisitMember
    nameWithType: ThrowingExpressionVisitor.BaseVisitMember
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberExpression
    name: MemberExpression
    nameWithType: MemberExpression
    fullName: System.Linq.Expressions.MemberExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMember(System.Linq.Expressions.MemberExpression)
    name: BaseVisitMember
    nameWithType: ThrowingExpressionVisitor.BaseVisitMember
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberExpression
    name: MemberExpression
    nameWithType: MemberExpression
    fullName: System.Linq.Expressions.MemberExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitNew(NewExpression)
  nameWithType: ThrowingExpressionVisitor.VisitNew(NewExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
    name: VisitNew
    nameWithType: ThrowingExpressionVisitor.VisitNew
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    nameWithType: NewExpression
    fullName: System.Linq.Expressions.NewExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
    name: VisitNew
    nameWithType: ThrowingExpressionVisitor.VisitNew
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    nameWithType: NewExpression
    fullName: System.Linq.Expressions.NewExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNew(System.Linq.Expressions.NewExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNew(System.Linq.Expressions.NewExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitNew(NewExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitNew(NewExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNew(System.Linq.Expressions.NewExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNew(System.Linq.Expressions.NewExpression)
    name: BaseVisitNew
    nameWithType: ThrowingExpressionVisitor.BaseVisitNew
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    nameWithType: NewExpression
    fullName: System.Linq.Expressions.NewExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNew(System.Linq.Expressions.NewExpression)
    name: BaseVisitNew
    nameWithType: ThrowingExpressionVisitor.BaseVisitNew
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    nameWithType: NewExpression
    fullName: System.Linq.Expressions.NewExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitNewArray(NewArrayExpression)
  nameWithType: ThrowingExpressionVisitor.VisitNewArray(NewArrayExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
    name: VisitNewArray
    nameWithType: ThrowingExpressionVisitor.VisitNewArray
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNewArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewArrayExpression
    name: NewArrayExpression
    nameWithType: NewArrayExpression
    fullName: System.Linq.Expressions.NewArrayExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
    name: VisitNewArray
    nameWithType: ThrowingExpressionVisitor.VisitNewArray
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitNewArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewArrayExpression
    name: NewArrayExpression
    nameWithType: NewArrayExpression
    fullName: System.Linq.Expressions.NewArrayExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNewArray(System.Linq.Expressions.NewArrayExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNewArray(System.Linq.Expressions.NewArrayExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitNewArray(NewArrayExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitNewArray(NewArrayExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNewArray(System.Linq.Expressions.NewArrayExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNewArray(System.Linq.Expressions.NewArrayExpression)
    name: BaseVisitNewArray
    nameWithType: ThrowingExpressionVisitor.BaseVisitNewArray
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNewArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewArrayExpression
    name: NewArrayExpression
    nameWithType: NewArrayExpression
    fullName: System.Linq.Expressions.NewArrayExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNewArray(System.Linq.Expressions.NewArrayExpression)
    name: BaseVisitNewArray
    nameWithType: ThrowingExpressionVisitor.BaseVisitNewArray
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitNewArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewArrayExpression
    name: NewArrayExpression
    nameWithType: NewArrayExpression
    fullName: System.Linq.Expressions.NewArrayExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitMemberInit(MemberInitExpression)
  nameWithType: ThrowingExpressionVisitor.VisitMemberInit(MemberInitExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
    name: VisitMemberInit
    nameWithType: ThrowingExpressionVisitor.VisitMemberInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberInitExpression
    name: MemberInitExpression
    nameWithType: MemberInitExpression
    fullName: System.Linq.Expressions.MemberInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
    name: VisitMemberInit
    nameWithType: ThrowingExpressionVisitor.VisitMemberInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberInitExpression
    name: MemberInitExpression
    nameWithType: MemberInitExpression
    fullName: System.Linq.Expressions.MemberInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitMemberInit(MemberInitExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitMemberInit(MemberInitExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberInit(System.Linq.Expressions.MemberInitExpression)
    name: BaseVisitMemberInit
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberInitExpression
    name: MemberInitExpression
    nameWithType: MemberInitExpression
    fullName: System.Linq.Expressions.MemberInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberInit(System.Linq.Expressions.MemberInitExpression)
    name: BaseVisitMemberInit
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberInitExpression
    name: MemberInitExpression
    nameWithType: MemberInitExpression
    fullName: System.Linq.Expressions.MemberInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitListInit(ListInitExpression)
  nameWithType: ThrowingExpressionVisitor.VisitListInit(ListInitExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
    name: VisitListInit
    nameWithType: ThrowingExpressionVisitor.VisitListInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitListInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ListInitExpression
    name: ListInitExpression
    nameWithType: ListInitExpression
    fullName: System.Linq.Expressions.ListInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
    name: VisitListInit
    nameWithType: ThrowingExpressionVisitor.VisitListInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitListInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ListInitExpression
    name: ListInitExpression
    nameWithType: ListInitExpression
    fullName: System.Linq.Expressions.ListInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitListInit(System.Linq.Expressions.ListInitExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitListInit(System.Linq.Expressions.ListInitExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitListInit(ListInitExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitListInit(ListInitExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitListInit(System.Linq.Expressions.ListInitExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitListInit(System.Linq.Expressions.ListInitExpression)
    name: BaseVisitListInit
    nameWithType: ThrowingExpressionVisitor.BaseVisitListInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitListInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ListInitExpression
    name: ListInitExpression
    nameWithType: ListInitExpression
    fullName: System.Linq.Expressions.ListInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitListInit(System.Linq.Expressions.ListInitExpression)
    name: BaseVisitListInit
    nameWithType: ThrowingExpressionVisitor.BaseVisitListInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitListInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ListInitExpression
    name: ListInitExpression
    nameWithType: ListInitExpression
    fullName: System.Linq.Expressions.ListInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitBlock(BlockExpression)
  nameWithType: ThrowingExpressionVisitor.VisitBlock(BlockExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
    name: VisitBlock
    nameWithType: ThrowingExpressionVisitor.VisitBlock
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BlockExpression
    name: BlockExpression
    nameWithType: BlockExpression
    fullName: System.Linq.Expressions.BlockExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
    name: VisitBlock
    nameWithType: ThrowingExpressionVisitor.VisitBlock
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BlockExpression
    name: BlockExpression
    nameWithType: BlockExpression
    fullName: System.Linq.Expressions.BlockExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBlock(System.Linq.Expressions.BlockExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBlock(System.Linq.Expressions.BlockExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitBlock(BlockExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitBlock(BlockExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBlock(System.Linq.Expressions.BlockExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBlock(System.Linq.Expressions.BlockExpression)
    name: BaseVisitBlock
    nameWithType: ThrowingExpressionVisitor.BaseVisitBlock
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BlockExpression
    name: BlockExpression
    nameWithType: BlockExpression
    fullName: System.Linq.Expressions.BlockExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBlock(System.Linq.Expressions.BlockExpression)
    name: BaseVisitBlock
    nameWithType: ThrowingExpressionVisitor.BaseVisitBlock
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BlockExpression
    name: BlockExpression
    nameWithType: BlockExpression
    fullName: System.Linq.Expressions.BlockExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitDebugInfo(DebugInfoExpression)
  nameWithType: ThrowingExpressionVisitor.VisitDebugInfo(DebugInfoExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
    name: VisitDebugInfo
    nameWithType: ThrowingExpressionVisitor.VisitDebugInfo
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDebugInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DebugInfoExpression
    name: DebugInfoExpression
    nameWithType: DebugInfoExpression
    fullName: System.Linq.Expressions.DebugInfoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
    name: VisitDebugInfo
    nameWithType: ThrowingExpressionVisitor.VisitDebugInfo
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDebugInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DebugInfoExpression
    name: DebugInfoExpression
    nameWithType: DebugInfoExpression
    fullName: System.Linq.Expressions.DebugInfoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitDebugInfo(DebugInfoExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitDebugInfo(DebugInfoExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
    name: BaseVisitDebugInfo
    nameWithType: ThrowingExpressionVisitor.BaseVisitDebugInfo
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDebugInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DebugInfoExpression
    name: DebugInfoExpression
    nameWithType: DebugInfoExpression
    fullName: System.Linq.Expressions.DebugInfoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
    name: BaseVisitDebugInfo
    nameWithType: ThrowingExpressionVisitor.BaseVisitDebugInfo
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDebugInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DebugInfoExpression
    name: DebugInfoExpression
    nameWithType: DebugInfoExpression
    fullName: System.Linq.Expressions.DebugInfoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitDefault(DefaultExpression)
  nameWithType: ThrowingExpressionVisitor.VisitDefault(DefaultExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
    name: VisitDefault
    nameWithType: ThrowingExpressionVisitor.VisitDefault
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DefaultExpression
    name: DefaultExpression
    nameWithType: DefaultExpression
    fullName: System.Linq.Expressions.DefaultExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
    name: VisitDefault
    nameWithType: ThrowingExpressionVisitor.VisitDefault
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DefaultExpression
    name: DefaultExpression
    nameWithType: DefaultExpression
    fullName: System.Linq.Expressions.DefaultExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDefault(System.Linq.Expressions.DefaultExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDefault(System.Linq.Expressions.DefaultExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitDefault(DefaultExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitDefault(DefaultExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDefault(System.Linq.Expressions.DefaultExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDefault(System.Linq.Expressions.DefaultExpression)
    name: BaseVisitDefault
    nameWithType: ThrowingExpressionVisitor.BaseVisitDefault
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DefaultExpression
    name: DefaultExpression
    nameWithType: DefaultExpression
    fullName: System.Linq.Expressions.DefaultExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDefault(System.Linq.Expressions.DefaultExpression)
    name: BaseVisitDefault
    nameWithType: ThrowingExpressionVisitor.BaseVisitDefault
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DefaultExpression
    name: DefaultExpression
    nameWithType: DefaultExpression
    fullName: System.Linq.Expressions.DefaultExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitGoto(GotoExpression)
  nameWithType: ThrowingExpressionVisitor.VisitGoto(GotoExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
    name: VisitGoto
    nameWithType: ThrowingExpressionVisitor.VisitGoto
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitGoto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpression
    name: GotoExpression
    nameWithType: GotoExpression
    fullName: System.Linq.Expressions.GotoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
    name: VisitGoto
    nameWithType: ThrowingExpressionVisitor.VisitGoto
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitGoto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpression
    name: GotoExpression
    nameWithType: GotoExpression
    fullName: System.Linq.Expressions.GotoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitGoto(System.Linq.Expressions.GotoExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitGoto(System.Linq.Expressions.GotoExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitGoto(GotoExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitGoto(GotoExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitGoto(System.Linq.Expressions.GotoExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitGoto(System.Linq.Expressions.GotoExpression)
    name: BaseVisitGoto
    nameWithType: ThrowingExpressionVisitor.BaseVisitGoto
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitGoto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpression
    name: GotoExpression
    nameWithType: GotoExpression
    fullName: System.Linq.Expressions.GotoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitGoto(System.Linq.Expressions.GotoExpression)
    name: BaseVisitGoto
    nameWithType: ThrowingExpressionVisitor.BaseVisitGoto
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitGoto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpression
    name: GotoExpression
    nameWithType: GotoExpression
    fullName: System.Linq.Expressions.GotoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitIndex(IndexExpression)
  nameWithType: ThrowingExpressionVisitor.VisitIndex(IndexExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
    name: VisitIndex
    nameWithType: ThrowingExpressionVisitor.VisitIndex
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.IndexExpression
    name: IndexExpression
    nameWithType: IndexExpression
    fullName: System.Linq.Expressions.IndexExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
    name: VisitIndex
    nameWithType: ThrowingExpressionVisitor.VisitIndex
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.IndexExpression
    name: IndexExpression
    nameWithType: IndexExpression
    fullName: System.Linq.Expressions.IndexExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitIndex(System.Linq.Expressions.IndexExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitIndex(System.Linq.Expressions.IndexExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitIndex(IndexExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitIndex(IndexExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitIndex(System.Linq.Expressions.IndexExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitIndex(System.Linq.Expressions.IndexExpression)
    name: BaseVisitIndex
    nameWithType: ThrowingExpressionVisitor.BaseVisitIndex
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.IndexExpression
    name: IndexExpression
    nameWithType: IndexExpression
    fullName: System.Linq.Expressions.IndexExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitIndex(System.Linq.Expressions.IndexExpression)
    name: BaseVisitIndex
    nameWithType: ThrowingExpressionVisitor.BaseVisitIndex
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.IndexExpression
    name: IndexExpression
    nameWithType: IndexExpression
    fullName: System.Linq.Expressions.IndexExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitLabel(LabelExpression)
  nameWithType: ThrowingExpressionVisitor.VisitLabel(LabelExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
    name: VisitLabel
    nameWithType: ThrowingExpressionVisitor.VisitLabel
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelExpression
    name: LabelExpression
    nameWithType: LabelExpression
    fullName: System.Linq.Expressions.LabelExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
    name: VisitLabel
    nameWithType: ThrowingExpressionVisitor.VisitLabel
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelExpression
    name: LabelExpression
    nameWithType: LabelExpression
    fullName: System.Linq.Expressions.LabelExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabel(System.Linq.Expressions.LabelExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabel(System.Linq.Expressions.LabelExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitLabel(LabelExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitLabel(LabelExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabel(System.Linq.Expressions.LabelExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabel(System.Linq.Expressions.LabelExpression)
    name: BaseVisitLabel
    nameWithType: ThrowingExpressionVisitor.BaseVisitLabel
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelExpression
    name: LabelExpression
    nameWithType: LabelExpression
    fullName: System.Linq.Expressions.LabelExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabel(System.Linq.Expressions.LabelExpression)
    name: BaseVisitLabel
    nameWithType: ThrowingExpressionVisitor.BaseVisitLabel
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelExpression
    name: LabelExpression
    nameWithType: LabelExpression
    fullName: System.Linq.Expressions.LabelExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitLoop(LoopExpression)
  nameWithType: ThrowingExpressionVisitor.VisitLoop(LoopExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
    name: VisitLoop
    nameWithType: ThrowingExpressionVisitor.VisitLoop
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLoop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LoopExpression
    name: LoopExpression
    nameWithType: LoopExpression
    fullName: System.Linq.Expressions.LoopExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
    name: VisitLoop
    nameWithType: ThrowingExpressionVisitor.VisitLoop
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLoop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LoopExpression
    name: LoopExpression
    nameWithType: LoopExpression
    fullName: System.Linq.Expressions.LoopExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLoop(System.Linq.Expressions.LoopExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLoop(System.Linq.Expressions.LoopExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitLoop(LoopExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitLoop(LoopExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLoop(System.Linq.Expressions.LoopExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLoop(System.Linq.Expressions.LoopExpression)
    name: BaseVisitLoop
    nameWithType: ThrowingExpressionVisitor.BaseVisitLoop
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLoop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LoopExpression
    name: LoopExpression
    nameWithType: LoopExpression
    fullName: System.Linq.Expressions.LoopExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLoop(System.Linq.Expressions.LoopExpression)
    name: BaseVisitLoop
    nameWithType: ThrowingExpressionVisitor.BaseVisitLoop
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLoop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LoopExpression
    name: LoopExpression
    nameWithType: LoopExpression
    fullName: System.Linq.Expressions.LoopExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitRuntimeVariables(RuntimeVariablesExpression)
  nameWithType: ThrowingExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
    name: VisitRuntimeVariables
    nameWithType: ThrowingExpressionVisitor.VisitRuntimeVariables
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitRuntimeVariables
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.RuntimeVariablesExpression
    name: RuntimeVariablesExpression
    nameWithType: RuntimeVariablesExpression
    fullName: System.Linq.Expressions.RuntimeVariablesExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
    name: VisitRuntimeVariables
    nameWithType: ThrowingExpressionVisitor.VisitRuntimeVariables
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitRuntimeVariables
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.RuntimeVariablesExpression
    name: RuntimeVariablesExpression
    nameWithType: RuntimeVariablesExpression
    fullName: System.Linq.Expressions.RuntimeVariablesExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitRuntimeVariables(RuntimeVariablesExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitRuntimeVariables(RuntimeVariablesExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
    name: BaseVisitRuntimeVariables
    nameWithType: ThrowingExpressionVisitor.BaseVisitRuntimeVariables
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitRuntimeVariables
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.RuntimeVariablesExpression
    name: RuntimeVariablesExpression
    nameWithType: RuntimeVariablesExpression
    fullName: System.Linq.Expressions.RuntimeVariablesExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
    name: BaseVisitRuntimeVariables
    nameWithType: ThrowingExpressionVisitor.BaseVisitRuntimeVariables
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitRuntimeVariables
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.RuntimeVariablesExpression
    name: RuntimeVariablesExpression
    nameWithType: RuntimeVariablesExpression
    fullName: System.Linq.Expressions.RuntimeVariablesExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitSwitch(SwitchExpression)
  nameWithType: ThrowingExpressionVisitor.VisitSwitch(SwitchExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
    name: VisitSwitch
    nameWithType: ThrowingExpressionVisitor.VisitSwitch
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchExpression
    name: SwitchExpression
    nameWithType: SwitchExpression
    fullName: System.Linq.Expressions.SwitchExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
    name: VisitSwitch
    nameWithType: ThrowingExpressionVisitor.VisitSwitch
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchExpression
    name: SwitchExpression
    nameWithType: SwitchExpression
    fullName: System.Linq.Expressions.SwitchExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitch(System.Linq.Expressions.SwitchExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitch(System.Linq.Expressions.SwitchExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitSwitch(SwitchExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitSwitch(SwitchExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitch(System.Linq.Expressions.SwitchExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitch(System.Linq.Expressions.SwitchExpression)
    name: BaseVisitSwitch
    nameWithType: ThrowingExpressionVisitor.BaseVisitSwitch
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchExpression
    name: SwitchExpression
    nameWithType: SwitchExpression
    fullName: System.Linq.Expressions.SwitchExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitch(System.Linq.Expressions.SwitchExpression)
    name: BaseVisitSwitch
    nameWithType: ThrowingExpressionVisitor.BaseVisitSwitch
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchExpression
    name: SwitchExpression
    nameWithType: SwitchExpression
    fullName: System.Linq.Expressions.SwitchExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitTry(TryExpression)
  nameWithType: ThrowingExpressionVisitor.VisitTry(TryExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
    name: VisitTry
    nameWithType: ThrowingExpressionVisitor.VisitTry
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TryExpression
    name: TryExpression
    nameWithType: TryExpression
    fullName: System.Linq.Expressions.TryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
    name: VisitTry
    nameWithType: ThrowingExpressionVisitor.VisitTry
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitTry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TryExpression
    name: TryExpression
    nameWithType: TryExpression
    fullName: System.Linq.Expressions.TryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTry(System.Linq.Expressions.TryExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTry(System.Linq.Expressions.TryExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitTry(TryExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitTry(TryExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTry(System.Linq.Expressions.TryExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTry(System.Linq.Expressions.TryExpression)
    name: BaseVisitTry
    nameWithType: ThrowingExpressionVisitor.BaseVisitTry
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TryExpression
    name: TryExpression
    nameWithType: TryExpression
    fullName: System.Linq.Expressions.TryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTry(System.Linq.Expressions.TryExpression)
    name: BaseVisitTry
    nameWithType: ThrowingExpressionVisitor.BaseVisitTry
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitTry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TryExpression
    name: TryExpression
    nameWithType: TryExpression
    fullName: System.Linq.Expressions.TryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitMemberBinding(MemberBinding)
  nameWithType: ThrowingExpressionVisitor.VisitMemberBinding(MemberBinding)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
    name: VisitMemberBinding
    nameWithType: ThrowingExpressionVisitor.VisitMemberBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    nameWithType: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
    name: VisitMemberBinding
    nameWithType: ThrowingExpressionVisitor.VisitMemberBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    nameWithType: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberBinding(System.Linq.Expressions.MemberBinding)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberBinding(System.Linq.Expressions.MemberBinding)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitMemberBinding(MemberBinding)
  nameWithType: ThrowingExpressionVisitor.BaseVisitMemberBinding(MemberBinding)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberBinding(System.Linq.Expressions.MemberBinding)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberBinding(System.Linq.Expressions.MemberBinding)
    name: BaseVisitMemberBinding
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    nameWithType: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberBinding(System.Linq.Expressions.MemberBinding)
    name: BaseVisitMemberBinding
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    nameWithType: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitElementInit(ElementInit)
  nameWithType: ThrowingExpressionVisitor.VisitElementInit(ElementInit)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
    name: VisitElementInit
    nameWithType: ThrowingExpressionVisitor.VisitElementInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitElementInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    nameWithType: ElementInit
    fullName: System.Linq.Expressions.ElementInit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
    name: VisitElementInit
    nameWithType: ThrowingExpressionVisitor.VisitElementInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitElementInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    nameWithType: ElementInit
    fullName: System.Linq.Expressions.ElementInit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitElementInit(System.Linq.Expressions.ElementInit)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitElementInit(System.Linq.Expressions.ElementInit)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitElementInit(ElementInit)
  nameWithType: ThrowingExpressionVisitor.BaseVisitElementInit(ElementInit)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitElementInit(System.Linq.Expressions.ElementInit)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitElementInit(System.Linq.Expressions.ElementInit)
    name: BaseVisitElementInit
    nameWithType: ThrowingExpressionVisitor.BaseVisitElementInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitElementInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    nameWithType: ElementInit
    fullName: System.Linq.Expressions.ElementInit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitElementInit(System.Linq.Expressions.ElementInit)
    name: BaseVisitElementInit
    nameWithType: ThrowingExpressionVisitor.BaseVisitElementInit
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitElementInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    nameWithType: ElementInit
    fullName: System.Linq.Expressions.ElementInit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitMemberAssignment(MemberAssignment)
  nameWithType: ThrowingExpressionVisitor.VisitMemberAssignment(MemberAssignment)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
    name: VisitMemberAssignment
    nameWithType: ThrowingExpressionVisitor.VisitMemberAssignment
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberAssignment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberAssignment
    name: MemberAssignment
    nameWithType: MemberAssignment
    fullName: System.Linq.Expressions.MemberAssignment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
    name: VisitMemberAssignment
    nameWithType: ThrowingExpressionVisitor.VisitMemberAssignment
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberAssignment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberAssignment
    name: MemberAssignment
    nameWithType: MemberAssignment
    fullName: System.Linq.Expressions.MemberAssignment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitMemberAssignment(MemberAssignment)
  nameWithType: ThrowingExpressionVisitor.BaseVisitMemberAssignment(MemberAssignment)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
    name: BaseVisitMemberAssignment
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberAssignment
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberAssignment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberAssignment
    name: MemberAssignment
    nameWithType: MemberAssignment
    fullName: System.Linq.Expressions.MemberAssignment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
    name: BaseVisitMemberAssignment
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberAssignment
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberAssignment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberAssignment
    name: MemberAssignment
    nameWithType: MemberAssignment
    fullName: System.Linq.Expressions.MemberAssignment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitMemberMemberBinding(MemberMemberBinding)
  nameWithType: ThrowingExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
    name: VisitMemberMemberBinding
    nameWithType: ThrowingExpressionVisitor.VisitMemberMemberBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberMemberBinding
    name: MemberMemberBinding
    nameWithType: MemberMemberBinding
    fullName: System.Linq.Expressions.MemberMemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
    name: VisitMemberMemberBinding
    nameWithType: ThrowingExpressionVisitor.VisitMemberMemberBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberMemberBinding
    name: MemberMemberBinding
    nameWithType: MemberMemberBinding
    fullName: System.Linq.Expressions.MemberMemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitMemberMemberBinding(MemberMemberBinding)
  nameWithType: ThrowingExpressionVisitor.BaseVisitMemberMemberBinding(MemberMemberBinding)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
    name: BaseVisitMemberMemberBinding
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberMemberBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberMemberBinding
    name: MemberMemberBinding
    nameWithType: MemberMemberBinding
    fullName: System.Linq.Expressions.MemberMemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
    name: BaseVisitMemberMemberBinding
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberMemberBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberMemberBinding
    name: MemberMemberBinding
    nameWithType: MemberMemberBinding
    fullName: System.Linq.Expressions.MemberMemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitMemberListBinding(MemberListBinding)
  nameWithType: ThrowingExpressionVisitor.VisitMemberListBinding(MemberListBinding)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
    name: VisitMemberListBinding
    nameWithType: ThrowingExpressionVisitor.VisitMemberListBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberListBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberListBinding
    name: MemberListBinding
    nameWithType: MemberListBinding
    fullName: System.Linq.Expressions.MemberListBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
    name: VisitMemberListBinding
    nameWithType: ThrowingExpressionVisitor.VisitMemberListBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitMemberListBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberListBinding
    name: MemberListBinding
    nameWithType: MemberListBinding
    fullName: System.Linq.Expressions.MemberListBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitMemberListBinding(MemberListBinding)
  nameWithType: ThrowingExpressionVisitor.BaseVisitMemberListBinding(MemberListBinding)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
    name: BaseVisitMemberListBinding
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberListBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberListBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberListBinding
    name: MemberListBinding
    nameWithType: MemberListBinding
    fullName: System.Linq.Expressions.MemberListBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
    name: BaseVisitMemberListBinding
    nameWithType: ThrowingExpressionVisitor.BaseVisitMemberListBinding
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitMemberListBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberListBinding
    name: MemberListBinding
    nameWithType: MemberListBinding
    fullName: System.Linq.Expressions.MemberListBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitCatchBlock(CatchBlock)
  nameWithType: ThrowingExpressionVisitor.VisitCatchBlock(CatchBlock)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
    name: VisitCatchBlock
    nameWithType: ThrowingExpressionVisitor.VisitCatchBlock
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitCatchBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    nameWithType: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
    name: VisitCatchBlock
    nameWithType: ThrowingExpressionVisitor.VisitCatchBlock
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitCatchBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    nameWithType: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitCatchBlock(System.Linq.Expressions.CatchBlock)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitCatchBlock(System.Linq.Expressions.CatchBlock)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitCatchBlock(CatchBlock)
  nameWithType: ThrowingExpressionVisitor.BaseVisitCatchBlock(CatchBlock)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitCatchBlock(System.Linq.Expressions.CatchBlock)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitCatchBlock(System.Linq.Expressions.CatchBlock)
    name: BaseVisitCatchBlock
    nameWithType: ThrowingExpressionVisitor.BaseVisitCatchBlock
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitCatchBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    nameWithType: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitCatchBlock(System.Linq.Expressions.CatchBlock)
    name: BaseVisitCatchBlock
    nameWithType: ThrowingExpressionVisitor.BaseVisitCatchBlock
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitCatchBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    nameWithType: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitLabelTarget(LabelTarget)
  nameWithType: ThrowingExpressionVisitor.VisitLabelTarget(LabelTarget)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
    name: VisitLabelTarget
    nameWithType: ThrowingExpressionVisitor.VisitLabelTarget
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabelTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    nameWithType: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
    name: VisitLabelTarget
    nameWithType: ThrowingExpressionVisitor.VisitLabelTarget
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLabelTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    nameWithType: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabelTarget(System.Linq.Expressions.LabelTarget)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabelTarget(System.Linq.Expressions.LabelTarget)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitLabelTarget(LabelTarget)
  nameWithType: ThrowingExpressionVisitor.BaseVisitLabelTarget(LabelTarget)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabelTarget(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabelTarget(System.Linq.Expressions.LabelTarget)
    name: BaseVisitLabelTarget
    nameWithType: ThrowingExpressionVisitor.BaseVisitLabelTarget
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabelTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    nameWithType: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabelTarget(System.Linq.Expressions.LabelTarget)
    name: BaseVisitLabelTarget
    nameWithType: ThrowingExpressionVisitor.BaseVisitLabelTarget
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLabelTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    nameWithType: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitSwitchCase(SwitchCase)
  nameWithType: ThrowingExpressionVisitor.VisitSwitchCase(SwitchCase)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
    name: VisitSwitchCase
    nameWithType: ThrowingExpressionVisitor.VisitSwitchCase
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitchCase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    nameWithType: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
    name: VisitSwitchCase
    nameWithType: ThrowingExpressionVisitor.VisitSwitchCase
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSwitchCase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    nameWithType: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitchCase(System.Linq.Expressions.SwitchCase)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitchCase(System.Linq.Expressions.SwitchCase)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitSwitchCase(SwitchCase)
  nameWithType: ThrowingExpressionVisitor.BaseVisitSwitchCase(SwitchCase)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitchCase(System.Linq.Expressions.SwitchCase)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitchCase(System.Linq.Expressions.SwitchCase)
    name: BaseVisitSwitchCase
    nameWithType: ThrowingExpressionVisitor.BaseVisitSwitchCase
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitchCase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    nameWithType: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitchCase(System.Linq.Expressions.SwitchCase)
    name: BaseVisitSwitchCase
    nameWithType: ThrowingExpressionVisitor.BaseVisitSwitchCase
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSwitchCase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    nameWithType: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitSubQuery(SubQueryExpression)
  nameWithType: ThrowingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
    name: VisitSubQuery
    nameWithType: ThrowingExpressionVisitor.VisitSubQuery
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSubQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    name: SubQueryExpression
    nameWithType: SubQueryExpression
    fullName: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
    name: VisitSubQuery
    nameWithType: ThrowingExpressionVisitor.VisitSubQuery
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitSubQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    name: SubQueryExpression
    nameWithType: SubQueryExpression
    fullName: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitSubQuery(SubQueryExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitSubQuery(SubQueryExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
    name: BaseVisitSubQuery
    nameWithType: ThrowingExpressionVisitor.BaseVisitSubQuery
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSubQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    name: SubQueryExpression
    nameWithType: SubQueryExpression
    fullName: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)
    name: BaseVisitSubQuery
    nameWithType: ThrowingExpressionVisitor.BaseVisitSubQuery
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitSubQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    name: SubQueryExpression
    nameWithType: SubQueryExpression
    fullName: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: VisitQuerySourceReference(QuerySourceReferenceExpression)
  nameWithType: ThrowingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
    name: VisitQuerySourceReference
    nameWithType: ThrowingExpressionVisitor.VisitQuerySourceReference
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitQuerySourceReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression
    name: QuerySourceReferenceExpression
    nameWithType: QuerySourceReferenceExpression
    fullName: Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
    name: VisitQuerySourceReference
    nameWithType: ThrowingExpressionVisitor.VisitQuerySourceReference
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitQuerySourceReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression
    name: QuerySourceReferenceExpression
    nameWithType: QuerySourceReferenceExpression
    fullName: Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
  parent: Remotion.Linq.Parsing.ThrowingExpressionVisitor
  isExternal: true
  name: BaseVisitQuerySourceReference(QuerySourceReferenceExpression)
  nameWithType: ThrowingExpressionVisitor.BaseVisitQuerySourceReference(QuerySourceReferenceExpression)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
    name: BaseVisitQuerySourceReference
    nameWithType: ThrowingExpressionVisitor.BaseVisitQuerySourceReference
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitQuerySourceReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression
    name: QuerySourceReferenceExpression
    nameWithType: QuerySourceReferenceExpression
    fullName: Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)
    name: BaseVisitQuerySourceReference
    nameWithType: ThrowingExpressionVisitor.BaseVisitQuerySourceReference
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitQuerySourceReference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression
    name: QuerySourceReferenceExpression
    nameWithType: QuerySourceReferenceExpression
    fullName: Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression(System.Collections.Generic.IList{System.Linq.Expressions.Expression},System.Collections.Generic.IList{System.Reflection.MemberInfo})
  commentId: M:Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression(System.Collections.Generic.IList{System.Linq.Expressions.Expression},System.Collections.Generic.IList{System.Reflection.MemberInfo})
  parent: Remotion.Linq.Parsing.RelinqExpressionVisitor
  isExternal: true
  name: AdjustArgumentsForNewExpression(IList<Expression>, IList<MemberInfo>)
  nameWithType: RelinqExpressionVisitor.AdjustArgumentsForNewExpression(IList<Expression>, IList<MemberInfo>)
  fullName: Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression(System.Collections.Generic.IList<System.Linq.Expressions.Expression>, System.Collections.Generic.IList<System.Reflection.MemberInfo>)
  nameWithType.vb: RelinqExpressionVisitor.AdjustArgumentsForNewExpression(IList(Of Expression), IList(Of MemberInfo))
  fullname.vb: Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression(System.Collections.Generic.IList(Of System.Linq.Expressions.Expression), System.Collections.Generic.IList(Of System.Reflection.MemberInfo))
  name.vb: AdjustArgumentsForNewExpression(IList(Of Expression), IList(Of MemberInfo))
  spec.csharp:
  - uid: Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression(System.Collections.Generic.IList{System.Linq.Expressions.Expression},System.Collections.Generic.IList{System.Reflection.MemberInfo})
    name: AdjustArgumentsForNewExpression
    nameWithType: RelinqExpressionVisitor.AdjustArgumentsForNewExpression
    fullName: Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression(System.Collections.Generic.IList{System.Linq.Expressions.Expression},System.Collections.Generic.IList{System.Reflection.MemberInfo})
    name: AdjustArgumentsForNewExpression
    nameWithType: RelinqExpressionVisitor.AdjustArgumentsForNewExpression
    fullName: Remotion.Linq.Parsing.RelinqExpressionVisitor.AdjustArgumentsForNewExpression
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: Visit(ReadOnlyCollection<Expression>)
  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>)
  nameWithType.vb: ExpressionVisitor.Visit(ReadOnlyCollection(Of Expression))
  fullname.vb: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression))
  name.vb: Visit(ReadOnlyCollection(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  name: Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  nameWithType: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>)
  nameWithType.vb: ExpressionVisitor.Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  fullname.vb: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.Func(Of T, T))
  name.vb: Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit<T>
    nameWithType: ExpressionVisitor.Visit<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit(Of T)
    nameWithType: ExpressionVisitor.Visit(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  name: VisitAndConvert<T>(T, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(T, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(T, String)
  fullname.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(T, System.String)
  name.vb: VisitAndConvert(Of T)(T, String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  fullname.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.String)
  name.vb: VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitDynamic(DynamicExpression)
  nameWithType: ExpressionVisitor.VisitDynamic(DynamicExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
    name: VisitDynamic
    nameWithType: ExpressionVisitor.VisitDynamic
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DynamicExpression
    name: DynamicExpression
    nameWithType: DynamicExpression
    fullName: System.Linq.Expressions.DynamicExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
    name: VisitDynamic
    nameWithType: ExpressionVisitor.VisitDynamic
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DynamicExpression
    name: DynamicExpression
    nameWithType: DynamicExpression
    fullName: System.Linq.Expressions.DynamicExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Remotion.Linq.Parsing
  commentId: N:Remotion.Linq.Parsing
  isExternal: false
  name: Remotion.Linq.Parsing
  nameWithType: Remotion.Linq.Parsing
  fullName: Remotion.Linq.Parsing
- uid: Microsoft.EntityFrameworkCore.Query.Sql
  commentId: N:Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Sql
  nameWithType: Microsoft.EntityFrameworkCore.Query.Sql
  fullName: Microsoft.EntityFrameworkCore.Query.Sql
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)
  isExternal: true
  name: CreateUnhandledItemException<T>(T, String)
  nameWithType: DefaultQuerySqlGenerator.CreateUnhandledItemException<T>(T, String)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException<T>(T, System.String)
  nameWithType.vb: DefaultQuerySqlGenerator.CreateUnhandledItemException(Of T)(T, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException(Of T)(T, System.String)
  name.vb: CreateUnhandledItemException(Of T)(T, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)
    name: CreateUnhandledItemException<T>
    nameWithType: DefaultQuerySqlGenerator.CreateUnhandledItemException<T>
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)
    name: CreateUnhandledItemException(Of T)
    nameWithType: DefaultQuerySqlGenerator.CreateUnhandledItemException(Of T)
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
  isExternal: true
  name: VisitUnhandledItem<TItem, TResult>(TItem, String, Func<TItem, TResult>)
  nameWithType: ThrowingExpressionVisitor.VisitUnhandledItem<TItem, TResult>(TItem, String, Func<TItem, TResult>)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem<TItem, TResult>(TItem, System.String, System.Func<TItem, TResult>)
  nameWithType.vb: ThrowingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)(TItem, String, Func(Of TItem, TResult))
  fullname.vb: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)(TItem, System.String, System.Func(Of TItem, TResult))
  name.vb: VisitUnhandledItem(Of TItem, TResult)(TItem, String, Func(Of TItem, TResult))
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
    name: VisitUnhandledItem<TItem, TResult>
    nameWithType: ThrowingExpressionVisitor.VisitUnhandledItem<TItem, TResult>
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem<TItem, TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
    name: VisitUnhandledItem(Of TItem, TResult)
    nameWithType: ThrowingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  isExternal: true
  name: VisitLambda<T>(Expression<T>)
  nameWithType: ThrowingExpressionVisitor.VisitLambda<T>(Expression<T>)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  nameWithType.vb: ThrowingExpressionVisitor.VisitLambda(Of T)(Expression(Of T))
  fullname.vb: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: VisitLambda(Of T)(Expression(Of T))
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda<T>
    nameWithType: ThrowingExpressionVisitor.VisitLambda<T>
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda(Of T)
    nameWithType: ThrowingExpressionVisitor.VisitLambda(Of T)
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.VisitLambda(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{``0})
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{``0})
  isExternal: true
  name: BaseVisitLambda<T>(Expression<T>)
  nameWithType: ThrowingExpressionVisitor.BaseVisitLambda<T>(Expression<T>)
  fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda<T>(System.Linq.Expressions.Expression<T>)
  nameWithType.vb: ThrowingExpressionVisitor.BaseVisitLambda(Of T)(Expression(Of T))
  fullname.vb: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: BaseVisitLambda(Of T)(Expression(Of T))
  spec.csharp:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: BaseVisitLambda<T>
    nameWithType: ThrowingExpressionVisitor.BaseVisitLambda<T>
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: BaseVisitLambda(Of T)
    nameWithType: ThrowingExpressionVisitor.BaseVisitLambda(Of T)
    fullName: Remotion.Linq.Parsing.ThrowingExpressionVisitor.BaseVisitLambda(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  isExternal: true
  name: Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  nameWithType: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>)
  nameWithType.vb: ExpressionVisitor.Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  fullname.vb: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.Func(Of T, T))
  name.vb: Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit<T>
    nameWithType: ExpressionVisitor.Visit<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit(Of T)
    nameWithType: ExpressionVisitor.Visit(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  isExternal: true
  name: VisitAndConvert<T>(T, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(T, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(T, String)
  fullname.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(T, System.String)
  name.vb: VisitAndConvert(Of T)(T, String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  isExternal: true
  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  fullname.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.String)
  name.vb: VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalCommandBuilderFactory
  nameWithType: IRelationalCommandBuilderFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory
- uid: Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: ISqlGenerationHelper
  nameWithType: ISqlGenerationHelper
  fullName: Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper
- uid: Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IParameterNameGeneratorFactory
  nameWithType: IParameterNameGeneratorFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: SelectExpression
  nameWithType: SelectExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Query.Expressions
  commentId: N:Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Expressions
  nameWithType: Microsoft.EntityFrameworkCore.Query.Expressions
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitLateralJoin(LateralJoinExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitLateralJoin(LateralJoinExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
    name: VisitLateralJoin
    nameWithType: DefaultQuerySqlGenerator.VisitLateralJoin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression
    name: LateralJoinExpression
    nameWithType: LateralJoinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)
    name: VisitLateralJoin
    nameWithType: DefaultQuerySqlGenerator.VisitLateralJoin
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression
    name: LateralJoinExpression
    nameWithType: LateralJoinExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: LateralJoinExpression
  nameWithType: LateralJoinExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitCount(CountExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitCount(CountExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
    name: VisitCount
    nameWithType: DefaultQuerySqlGenerator.VisitCount
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression
    name: CountExpression
    nameWithType: CountExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)
    name: VisitCount
    nameWithType: DefaultQuerySqlGenerator.VisitCount
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression
    name: CountExpression
    nameWithType: CountExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: CountExpression
  nameWithType: CountExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: GenerateLimitOffset(SelectExpression)
  nameWithType: DefaultQuerySqlGenerator.GenerateLimitOffset(SelectExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
    name: GenerateLimitOffset
    nameWithType: DefaultQuerySqlGenerator.GenerateLimitOffset
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
    name: SelectExpression
    nameWithType: SelectExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
    name: GenerateLimitOffset
    nameWithType: DefaultQuerySqlGenerator.GenerateLimitOffset
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
    name: SelectExpression
    nameWithType: SelectExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor
  isExternal: false
  name: VisitRowNumber(RowNumberExpression)
  nameWithType: ISqlServerExpressionVisitor.VisitRowNumber(RowNumberExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
    name: VisitRowNumber
    nameWithType: ISqlServerExpressionVisitor.VisitRowNumber
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitRowNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression
    name: RowNumberExpression
    nameWithType: RowNumberExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression)
    name: VisitRowNumber
    nameWithType: ISqlServerExpressionVisitor.VisitRowNumber
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitRowNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression
    name: RowNumberExpression
    nameWithType: RowNumberExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression
  parent: Microsoft.EntityFrameworkCore.Query.Expressions.Internal
  isExternal: false
  name: RowNumberExpression
  nameWithType: RowNumberExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.RowNumberExpression
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Expressions.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Expressions.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Expressions.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor
  isExternal: false
  name: VisitDatePartExpression(DatePartExpression)
  nameWithType: ISqlServerExpressionVisitor.VisitDatePartExpression(DatePartExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
    name: VisitDatePartExpression
    nameWithType: ISqlServerExpressionVisitor.VisitDatePartExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitDatePartExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression
    name: DatePartExpression
    nameWithType: DatePartExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitDatePartExpression(Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression)
    name: VisitDatePartExpression
    nameWithType: ISqlServerExpressionVisitor.VisitDatePartExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.Internal.ISqlServerExpressionVisitor.VisitDatePartExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression
    name: DatePartExpression
    nameWithType: DatePartExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression
  parent: Microsoft.EntityFrameworkCore.Query.Expressions.Internal
  isExternal: false
  name: DatePartExpression
  nameWithType: DatePartExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.Internal.DatePartExpression
- uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator
  isExternal: false
  name: VisitSqlFunction(SqlFunctionExpression)
  nameWithType: DefaultQuerySqlGenerator.VisitSqlFunction(SqlFunctionExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
    name: VisitSqlFunction
    nameWithType: DefaultQuerySqlGenerator.VisitSqlFunction
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression
    name: SqlFunctionExpression
    nameWithType: SqlFunctionExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)
    name: VisitSqlFunction
    nameWithType: DefaultQuerySqlGenerator.VisitSqlFunction
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression
    name: SqlFunctionExpression
    nameWithType: SqlFunctionExpression
    fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: SqlFunctionExpression
  nameWithType: SqlFunctionExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression
