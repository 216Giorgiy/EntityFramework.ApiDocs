### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator
  id: RelationalCompositeMethodCallTranslator
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.#ctor(Microsoft.Extensions.Logging.ILogger)
  - Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator})
  - Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  langs:
  - csharp
  - vb
  name: RelationalCompositeMethodCallTranslator
  nameWithType: RelationalCompositeMethodCallTranslator
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/RelationalCompositeMethodCallTranslator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalCompositeMethodCallTranslator
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/RelationalCompositeMethodCallTranslator.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  summary: "\n    A base composite method call translator that dispatches to multiple specialized\n    method call translators.\n"
  example: []
  syntax:
    content: 'public abstract class RelationalCompositeMethodCallTranslator : IMethodCallTranslator'
    content.vb: >-
      Public MustInherit Class RelationalCompositeMethodCallTranslator
          Implements IMethodCallTranslator
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator
  langs:
  - csharp
  - vb
  name: RelationalCompositeMethodCallTranslator(ILogger)
  nameWithType: RelationalCompositeMethodCallTranslator.RelationalCompositeMethodCallTranslator(ILogger)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.RelationalCompositeMethodCallTranslator(Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/RelationalCompositeMethodCallTranslator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/RelationalCompositeMethodCallTranslator.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  summary: "\n    Specialised constructor for use only by derived class.\n"
  example: []
  syntax:
    content: protected RelationalCompositeMethodCallTranslator(ILogger logger)
    content.vb: Protected Sub New(logger As ILogger)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: 'A logger. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  id: Translate(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator
  langs:
  - csharp
  - vb
  name: Translate(MethodCallExpression)
  nameWithType: RelationalCompositeMethodCallTranslator.Translate(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/RelationalCompositeMethodCallTranslator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Translate
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/RelationalCompositeMethodCallTranslator.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  summary: "\n    Translates the given method call expression.\n"
  example: []
  syntax:
    content: public virtual Expression Translate(MethodCallExpression methodCallExpression)
    content.vb: Public Overridable Function Translate(methodCallExpression As MethodCallExpression) As Expression
    parameters:
    - id: methodCallExpression
      type: System.Linq.Expressions.MethodCallExpression
      description: 'The method call expression. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    A SQL expression representing the translated MethodCallExpression.\n"
  implements:
  - Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator})
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator})
  id: AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator})
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator
  langs:
  - csharp
  - vb
  name: AddTranslators(IEnumerable<IMethodCallTranslator>)
  nameWithType: RelationalCompositeMethodCallTranslator.AddTranslators(IEnumerable<IMethodCallTranslator>)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.AddTranslators(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/RelationalCompositeMethodCallTranslator.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddTranslators
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionTranslators/RelationalCompositeMethodCallTranslator.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  summary: "\n    Adds additional translators to the dispatch list.\n"
  example: []
  syntax:
    content: protected virtual void AddTranslators(IEnumerable<IMethodCallTranslator> translators)
    content.vb: Protected Overridable Sub AddTranslators(translators As IEnumerable(Of IMethodCallTranslator))
    parameters:
    - id: translators
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator}
      description: 'The translators. '
  nameWithType.vb: RelationalCompositeMethodCallTranslator.AddTranslators(IEnumerable(Of IMethodCallTranslator))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.AddTranslators(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator))
  name.vb: AddTranslators(IEnumerable(Of IMethodCallTranslator))
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  isExternal: false
  name: IMethodCallTranslator
  nameWithType: IMethodCallTranslator
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  isExternal: true
  name: Translate(MethodCallExpression)
  nameWithType: IMethodCallTranslator.Translate(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
    name: Translate
    nameWithType: IMethodCallTranslator.Translate
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)
    name: Translate
    nameWithType: IMethodCallTranslator.Translate
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IMethodCallTranslator>
  nameWithType: IEnumerable<IMethodCallTranslator>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator>
  nameWithType.vb: IEnumerable(Of IMethodCallTranslator)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator)
  name.vb: IEnumerable(Of IMethodCallTranslator)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
    name: IMethodCallTranslator
    nameWithType: IMethodCallTranslator
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
    name: IMethodCallTranslator
    nameWithType: IMethodCallTranslator
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
