### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  id: IFluentApiConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.FluentApiLines
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.HasAttributeEquivalent
  langs:
  - csharp
  - vb
  name: IFluentApiConfiguration
  nameWithType: IFluentApiConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/IFluentApiConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IFluentApiConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/IFluentApiConfiguration.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IFluentApiConfiguration
    content.vb: Public Interface IFluentApiConfiguration
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.HasAttributeEquivalent
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.HasAttributeEquivalent
  id: HasAttributeEquivalent
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  langs:
  - csharp
  - vb
  name: HasAttributeEquivalent
  nameWithType: IFluentApiConfiguration.HasAttributeEquivalent
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.HasAttributeEquivalent
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/IFluentApiConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasAttributeEquivalent
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/IFluentApiConfiguration.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: bool HasAttributeEquivalent { get; }
    content.vb: ReadOnly Property HasAttributeEquivalent As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.FluentApiLines
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.FluentApiLines
  id: FluentApiLines
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  langs:
  - csharp
  - vb
  name: FluentApiLines
  nameWithType: IFluentApiConfiguration.FluentApiLines
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.FluentApiLines
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/IFluentApiConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FluentApiLines
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/IFluentApiConfiguration.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: ICollection<string> FluentApiLines { get; }
    content.vb: ReadOnly Property FluentApiLines As ICollection(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullname.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
