### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  id: RelationalReferenceReferenceBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  children:
  - Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  - Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  langs:
  - csharp
  - vb
  name: RelationalReferenceReferenceBuilderExtensions
  nameWithType: RelationalReferenceReferenceBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalReferenceReferenceBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: RelationalReferenceReferenceBuilderExtensions
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalReferenceReferenceBuilderExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Relational database specific extension methods for <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class RelationalReferenceReferenceBuilderExtensions
    content.vb: Public Module RelationalReferenceReferenceBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  id: HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasConstraintName(ReferenceReferenceBuilder, String)
  nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(ReferenceReferenceBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalReferenceReferenceBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasConstraintName
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalReferenceReferenceBuilderExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Configures the foreign key constraint name for this relationship when targeting a relational database.\n"
  example: []
  syntax:
    content: public static ReferenceReferenceBuilder HasConstraintName(this ReferenceReferenceBuilder referenceReferenceBuilder, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasConstraintName(referenceReferenceBuilder As ReferenceReferenceBuilder, name As String) As ReferenceReferenceBuilder
    parameters:
    - id: referenceReferenceBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The builder being used to configure the relationship. '
    - id: name
      type: System.String
      description: 'The name of the foreign key constraint. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  id: HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasConstraintName<TEntity, TRelatedEntity>(ReferenceReferenceBuilder<TEntity, TRelatedEntity>, String)
  nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>(ReferenceReferenceBuilder<TEntity, TRelatedEntity>, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalReferenceReferenceBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasConstraintName
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalReferenceReferenceBuilderExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\n    Configures the foreign key constraint name for this relationship when targeting a relational database.\n"
  example: []
  syntax:
    content: 'public static ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasConstraintName<TEntity, TRelatedEntity>(this ReferenceReferenceBuilder<TEntity, TRelatedEntity> referenceReferenceBuilder, string name)where TEntity : class where TRelatedEntity : class'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasConstraintName(Of TEntity As Class, TRelatedEntity As Class)(referenceReferenceBuilder As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), name As String) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: referenceReferenceBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{{TEntity},{TRelatedEntity}}
      description: 'The builder being used to configure the relationship. '
    - id: name
      type: System.String
      description: 'The name of the foreign key constraint. '
    typeParameters:
    - id: TEntity
      description: 'The entity type on one end of the relationship. '
    - id: TRelatedEntity
      description: 'The entity type on the other end of the relationship. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{{TEntity},{TRelatedEntity}}
      description: 'The same builder instance so that multiple calls can be chained. '
  nameWithType.vb: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)(ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), System.String)
  name.vb: HasConstraintName(Of TEntity, TRelatedEntity)(ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), String)
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: ReferenceReferenceBuilder
  nameWithType: ReferenceReferenceBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{{TEntity},{TRelatedEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{`0,`1}
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  definition: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  name: ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  name.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  name.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
