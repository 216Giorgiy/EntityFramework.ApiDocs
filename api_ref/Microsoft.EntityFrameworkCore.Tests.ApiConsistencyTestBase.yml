### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  commentId: T:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  id: ApiConsistencyTestBase
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.AnyInstance
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAllTypes(System.Collections.Generic.IEnumerable{System.Type})
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAsyncSuffixExceptions
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetCancellationTokenExceptions
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.PublicInstance
  - Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.TargetAssembly
  langs:
  - csharp
  - vb
  name: ApiConsistencyTestBase
  nameWithType: ApiConsistencyTestBase
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ApiConsistencyTestBase
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public abstract class ApiConsistencyTestBase
    content.vb: Public MustInherit Class ApiConsistencyTestBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.PublicInstance
  commentId: F:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.PublicInstance
  id: PublicInstance
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: PublicInstance
  nameWithType: ApiConsistencyTestBase.PublicInstance
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.PublicInstance
  type: Field
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PublicInstance
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected const BindingFlags PublicInstance = BindingFlags.Instance | BindingFlags.Public
    content.vb: Protected Const PublicInstance As BindingFlags = BindingFlags.Instance Or BindingFlags.Public
    return:
      type: System.Reflection.BindingFlags
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.AnyInstance
  commentId: F:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.AnyInstance
  id: AnyInstance
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: AnyInstance
  nameWithType: ApiConsistencyTestBase.AnyInstance
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.AnyInstance
  type: Field
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AnyInstance
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected const BindingFlags AnyInstance = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic
    content.vb: Protected Const AnyInstance As BindingFlags = BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic
    return:
      type: System.Reflection.BindingFlags
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual
  id: Public_inheritable_apis_should_be_virtual
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: Public_inheritable_apis_should_be_virtual()
  nameWithType: ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual()
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Public_inheritable_apis_should_be_virtual
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public void Public_inheritable_apis_should_be_virtual()
    content.vb: Public Sub Public_inheritable_apis_should_be_virtual
  overload: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation
  id: Public_api_arguments_should_have_not_null_annotation
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: Public_api_arguments_should_have_not_null_annotation()
  nameWithType: ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation()
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Public_api_arguments_should_have_not_null_annotation
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public void Public_api_arguments_should_have_not_null_annotation()
    content.vb: Public Sub Public_api_arguments_should_have_not_null_annotation
  overload: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
  id: Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix()
  nameWithType: ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix()
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 84
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public void Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix()
    content.vb: Public Sub Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
  overload: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed
  id: Public_api_bool_parameters_should_not_be_prefixed
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: Public_api_bool_parameters_should_not_be_prefixed()
  nameWithType: ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed()
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Public_api_bool_parameters_should_not_be_prefixed
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 132
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public void Public_api_bool_parameters_should_not_be_prefixed()
    content.vb: Public Sub Public_api_bool_parameters_should_not_be_prefixed
  overload: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetCancellationTokenExceptions
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetCancellationTokenExceptions
  id: GetCancellationTokenExceptions
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: GetCancellationTokenExceptions()
  nameWithType: ApiConsistencyTestBase.GetCancellationTokenExceptions()
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetCancellationTokenExceptions()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetCancellationTokenExceptions
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 158
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected virtual IEnumerable<string> GetCancellationTokenExceptions()
    content.vb: Protected Overridable Function GetCancellationTokenExceptions As IEnumerable(Of String)
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  overload: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetCancellationTokenExceptions*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAsyncSuffixExceptions
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAsyncSuffixExceptions
  id: GetAsyncSuffixExceptions
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: GetAsyncSuffixExceptions()
  nameWithType: ApiConsistencyTestBase.GetAsyncSuffixExceptions()
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAsyncSuffixExceptions()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetAsyncSuffixExceptions
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 160
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected virtual IEnumerable<string> GetAsyncSuffixExceptions()
    content.vb: Protected Overridable Function GetAsyncSuffixExceptions As IEnumerable(Of String)
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  overload: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAsyncSuffixExceptions*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.TargetAssembly
  commentId: P:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.TargetAssembly
  id: TargetAssembly
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: TargetAssembly
  nameWithType: ApiConsistencyTestBase.TargetAssembly
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.TargetAssembly
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TargetAssembly
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 162
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected abstract Assembly TargetAssembly { get; }
    content.vb: Protected MustOverride ReadOnly Property TargetAssembly As Assembly
    parameters: []
    return:
      type: System.Reflection.Assembly
  overload: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.TargetAssembly*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAllTypes(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAllTypes(System.Collections.Generic.IEnumerable{System.Type})
  id: GetAllTypes(System.Collections.Generic.IEnumerable{System.Type})
  parent: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase
  langs:
  - csharp
  - vb
  name: GetAllTypes(IEnumerable<Type>)
  nameWithType: ApiConsistencyTestBase.GetAllTypes(IEnumerable<Type>)
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAllTypes(System.Collections.Generic.IEnumerable<System.Type>)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetAllTypes
    path: test/Microsoft.EntityFrameworkCore.Tests/ApiConsistencyTestBase.cs
    startLine: 164
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected virtual IEnumerable<Type> GetAllTypes(IEnumerable<Type> types)
    content.vb: Protected Overridable Function GetAllTypes(types As IEnumerable(Of Type)) As IEnumerable(Of Type)
    parameters:
    - id: types
      type: System.Collections.Generic.IEnumerable{System.Type}
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
  overload: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAllTypes*
  nameWithType.vb: ApiConsistencyTestBase.GetAllTypes(IEnumerable(Of Type))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAllTypes(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: GetAllTypes(IEnumerable(Of Type))
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.BindingFlags
  commentId: T:System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: true
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual
  isExternal: false
  name: Public_inheritable_apis_should_be_virtual
  nameWithType: ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_inheritable_apis_should_be_virtual
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation
  isExternal: false
  name: Public_api_arguments_should_have_not_null_annotation
  nameWithType: ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_arguments_should_have_not_null_annotation
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
  isExternal: false
  name: Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
  nameWithType: ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Async_methods_should_have_overload_with_cancellation_token_and_end_with_async_suffix
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed
  isExternal: false
  name: Public_api_bool_parameters_should_not_be_prefixed
  nameWithType: ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.Public_api_bool_parameters_should_not_be_prefixed
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetCancellationTokenExceptions*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetCancellationTokenExceptions
  isExternal: false
  name: GetCancellationTokenExceptions
  nameWithType: ApiConsistencyTestBase.GetCancellationTokenExceptions
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetCancellationTokenExceptions
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAsyncSuffixExceptions*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAsyncSuffixExceptions
  isExternal: false
  name: GetAsyncSuffixExceptions
  nameWithType: ApiConsistencyTestBase.GetAsyncSuffixExceptions
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAsyncSuffixExceptions
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.TargetAssembly*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.TargetAssembly
  isExternal: false
  name: TargetAssembly
  nameWithType: ApiConsistencyTestBase.TargetAssembly
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.TargetAssembly
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAllTypes*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAllTypes
  isExternal: false
  name: GetAllTypes
  nameWithType: ApiConsistencyTestBase.GetAllTypes
  fullName: Microsoft.EntityFrameworkCore.Tests.ApiConsistencyTestBase.GetAllTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
