### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  id: RelationalScaffoldingModelFactory
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.#ctor(ILogger{Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory},Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.AddNavigationProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CandidateNamingService
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CheckSelectionsMatched(Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CreateFromDatabaseModel(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.ExistingIdentifiers(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetEntityTypeName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetPropertyName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetTypeMapping(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Logger
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.TypeMapper
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumns(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel})
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitDatabaseModel(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKey(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKeys(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel})
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndexes(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel})
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequence(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequences(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel})
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTable(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTables(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel})
  langs:
  - csharp
  - vb
  name: RelationalScaffoldingModelFactory
  nameWithType: RelationalScaffoldingModelFactory
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalScaffoldingModelFactory
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: 'public class RelationalScaffoldingModelFactory : IScaffoldingModelFactory'
    content.vb: >-
      Public Class RelationalScaffoldingModelFactory
          Implements IScaffoldingModelFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Logger
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Logger
  id: Logger
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: RelationalScaffoldingModelFactory.Logger
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Logger
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Logger
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual ILogger Logger { get; }
    content.vb: Protected Overridable ReadOnly Property Logger As ILogger
    parameters: []
    return:
      type: ILogger
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Logger*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.TypeMapper
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.TypeMapper
  id: TypeMapper
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: TypeMapper
  nameWithType: RelationalScaffoldingModelFactory.TypeMapper
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.TypeMapper
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TypeMapper
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual IRelationalTypeMapper TypeMapper { get; }
    content.vb: Protected Overridable ReadOnly Property TypeMapper As IRelationalTypeMapper
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.TypeMapper*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CandidateNamingService
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CandidateNamingService
  id: CandidateNamingService
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: CandidateNamingService
  nameWithType: RelationalScaffoldingModelFactory.CandidateNamingService
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CandidateNamingService
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CandidateNamingService
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual CandidateNamingService CandidateNamingService { get; }
    content.vb: Protected Overridable ReadOnly Property CandidateNamingService As CandidateNamingService
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CandidateNamingService*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.#ctor(ILogger{Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory},Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.#ctor(ILogger{Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory},Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService)
  id: '#ctor(ILogger{Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory},Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: RelationalScaffoldingModelFactory(ILogger<RelationalScaffoldingModelFactory>, IRelationalTypeMapper, IDatabaseModelFactory, CandidateNamingService)
  nameWithType: RelationalScaffoldingModelFactory.RelationalScaffoldingModelFactory(ILogger<RelationalScaffoldingModelFactory>, IRelationalTypeMapper, IDatabaseModelFactory, CandidateNamingService)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.RelationalScaffoldingModelFactory(ILogger<Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory>, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory, Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public RelationalScaffoldingModelFactory(ILogger<RelationalScaffoldingModelFactory> logger, IRelationalTypeMapper typeMapper, IDatabaseModelFactory databaseModelFactory, CandidateNamingService candidateNamingService)
    content.vb: Public Sub New(logger As ILogger(Of RelationalScaffoldingModelFactory), typeMapper As IRelationalTypeMapper, databaseModelFactory As IDatabaseModelFactory, candidateNamingService As CandidateNamingService)
    parameters:
    - id: logger
      type: ILogger{Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory}
    - id: typeMapper
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
    - id: databaseModelFactory
      type: Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory
    - id: candidateNamingService
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.#ctor*
  nameWithType.vb: RelationalScaffoldingModelFactory.RelationalScaffoldingModelFactory(ILogger(Of RelationalScaffoldingModelFactory), IRelationalTypeMapper, IDatabaseModelFactory, CandidateNamingService)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.RelationalScaffoldingModelFactory(ILogger(Of Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory), Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory, Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService)
  name.vb: RelationalScaffoldingModelFactory(ILogger(Of RelationalScaffoldingModelFactory), IRelationalTypeMapper, IDatabaseModelFactory, CandidateNamingService)
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  id: Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: Create(String, TableSelectionSet)
  nameWithType: RelationalScaffoldingModelFactory.Create(String, TableSelectionSet)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Create(System.String, Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public virtual IModel Create(string connectionString, TableSelectionSet tableSelectionSet)
    content.vb: Public Overridable Function Create(connectionString As String, tableSelectionSet As TableSelectionSet) As IModel
    parameters:
    - id: connectionString
      type: System.String
    - id: tableSelectionSet
      type: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Create*
  implements:
  - Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CheckSelectionsMatched(Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CheckSelectionsMatched(Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  id: CheckSelectionsMatched(Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: CheckSelectionsMatched(TableSelectionSet)
  nameWithType: RelationalScaffoldingModelFactory.CheckSelectionsMatched(TableSelectionSet)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CheckSelectionsMatched(Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CheckSelectionsMatched
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 68
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: public virtual void CheckSelectionsMatched(TableSelectionSet tableSelectionSet)
    content.vb: Public Overridable Sub CheckSelectionsMatched(tableSelectionSet As TableSelectionSet)
    parameters:
    - id: tableSelectionSet
      type: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CheckSelectionsMatched*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CreateFromDatabaseModel(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CreateFromDatabaseModel(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  id: CreateFromDatabaseModel(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: CreateFromDatabaseModel(DatabaseModel)
  nameWithType: RelationalScaffoldingModelFactory.CreateFromDatabaseModel(DatabaseModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CreateFromDatabaseModel(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateFromDatabaseModel
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual IModel CreateFromDatabaseModel(DatabaseModel databaseModel)
    content.vb: Protected Overridable Function CreateFromDatabaseModel(databaseModel As DatabaseModel) As IModel
    parameters:
    - id: databaseModel
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CreateFromDatabaseModel*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetEntityTypeName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetEntityTypeName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  id: GetEntityTypeName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: GetEntityTypeName(TableModel)
  nameWithType: RelationalScaffoldingModelFactory.GetEntityTypeName(TableModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetEntityTypeName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetEntityTypeName
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 99
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual string GetEntityTypeName(TableModel table)
    content.vb: Protected Overridable Function GetEntityTypeName(table As TableModel) As String
    parameters:
    - id: table
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetEntityTypeName*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetPropertyName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetPropertyName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  id: GetPropertyName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: GetPropertyName(ColumnModel)
  nameWithType: RelationalScaffoldingModelFactory.GetPropertyName(ColumnModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetPropertyName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetPropertyName
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual string GetPropertyName(ColumnModel column)
    content.vb: Protected Overridable Function GetPropertyName(column As ColumnModel) As String
    parameters:
    - id: column
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetPropertyName*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitDatabaseModel(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitDatabaseModel(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  id: VisitDatabaseModel(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitDatabaseModel(ModelBuilder, DatabaseModel)
  nameWithType: RelationalScaffoldingModelFactory.VisitDatabaseModel(ModelBuilder, DatabaseModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitDatabaseModel(Microsoft.EntityFrameworkCore.ModelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitDatabaseModel
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 124
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual ModelBuilder VisitDatabaseModel(ModelBuilder modelBuilder, DatabaseModel databaseModel)
    content.vb: Protected Overridable Function VisitDatabaseModel(modelBuilder As ModelBuilder, databaseModel As DatabaseModel) As ModelBuilder
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    - id: databaseModel
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
    return:
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitDatabaseModel*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequences(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequences(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel})
  id: VisitSequences(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitSequences(ModelBuilder, ICollection<SequenceModel>)
  nameWithType: RelationalScaffoldingModelFactory.VisitSequences(ModelBuilder, ICollection<SequenceModel>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequences(Microsoft.EntityFrameworkCore.ModelBuilder, System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitSequences
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 146
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual ModelBuilder VisitSequences(ModelBuilder modelBuilder, ICollection<SequenceModel> sequences)
    content.vb: Protected Overridable Function VisitSequences(modelBuilder As ModelBuilder, sequences As ICollection(Of SequenceModel)) As ModelBuilder
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    - id: sequences
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel}
    return:
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequences*
  nameWithType.vb: RelationalScaffoldingModelFactory.VisitSequences(ModelBuilder, ICollection(Of SequenceModel))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequences(Microsoft.EntityFrameworkCore.ModelBuilder, System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel))
  name.vb: VisitSequences(ModelBuilder, ICollection(Of SequenceModel))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequence(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequence(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  id: VisitSequence(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitSequence(ModelBuilder, SequenceModel)
  nameWithType: RelationalScaffoldingModelFactory.VisitSequence(ModelBuilder, SequenceModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequence(Microsoft.EntityFrameworkCore.ModelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitSequence
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 159
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual RelationalSequenceBuilder VisitSequence(ModelBuilder modelBuilder, SequenceModel sequence)
    content.vb: Protected Overridable Function VisitSequence(modelBuilder As ModelBuilder, sequence As SequenceModel) As RelationalSequenceBuilder
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    - id: sequence
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequence*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTables(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTables(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel})
  id: VisitTables(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitTables(ModelBuilder, ICollection<TableModel>)
  nameWithType: RelationalScaffoldingModelFactory.VisitTables(ModelBuilder, ICollection<TableModel>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTables(Microsoft.EntityFrameworkCore.ModelBuilder, System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitTables
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 219
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual ModelBuilder VisitTables(ModelBuilder modelBuilder, ICollection<TableModel> tables)
    content.vb: Protected Overridable Function VisitTables(modelBuilder As ModelBuilder, tables As ICollection(Of TableModel)) As ModelBuilder
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    - id: tables
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel}
    return:
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTables*
  nameWithType.vb: RelationalScaffoldingModelFactory.VisitTables(ModelBuilder, ICollection(Of TableModel))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTables(Microsoft.EntityFrameworkCore.ModelBuilder, System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel))
  name.vb: VisitTables(ModelBuilder, ICollection(Of TableModel))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTable(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTable(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  id: VisitTable(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitTable(ModelBuilder, TableModel)
  nameWithType: RelationalScaffoldingModelFactory.VisitTable(ModelBuilder, TableModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTable(Microsoft.EntityFrameworkCore.ModelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitTable
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 232
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual EntityTypeBuilder VisitTable(ModelBuilder modelBuilder, TableModel table)
    content.vb: Protected Overridable Function VisitTable(modelBuilder As ModelBuilder, table As TableModel) As EntityTypeBuilder
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    - id: table
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTable*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumns(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumns(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel})
  id: VisitColumns(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitColumns(EntityTypeBuilder, ICollection<ColumnModel>)
  nameWithType: RelationalScaffoldingModelFactory.VisitColumns(EntityTypeBuilder, ICollection<ColumnModel>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumns(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitColumns
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 264
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual EntityTypeBuilder VisitColumns(EntityTypeBuilder builder, ICollection<ColumnModel> columns)
    content.vb: Protected Overridable Function VisitColumns(builder As EntityTypeBuilder, columns As ICollection(Of ColumnModel)) As EntityTypeBuilder
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    - id: columns
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumns*
  nameWithType.vb: RelationalScaffoldingModelFactory.VisitColumns(EntityTypeBuilder, ICollection(Of ColumnModel))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumns(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel))
  name.vb: VisitColumns(EntityTypeBuilder, ICollection(Of ColumnModel))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  id: VisitColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitColumn(EntityTypeBuilder, ColumnModel)
  nameWithType: RelationalScaffoldingModelFactory.VisitColumn(EntityTypeBuilder, ColumnModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitColumn
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 277
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual PropertyBuilder VisitColumn(EntityTypeBuilder builder, ColumnModel column)
    content.vb: Protected Overridable Function VisitColumn(builder As EntityTypeBuilder, column As ColumnModel) As PropertyBuilder
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    - id: column
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumn*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetTypeMapping(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetTypeMapping(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  id: GetTypeMapping(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: GetTypeMapping(ColumnModel)
  nameWithType: RelationalScaffoldingModelFactory.GetTypeMapping(ColumnModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetTypeMapping(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetTypeMapping
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 343
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual RelationalTypeMapping GetTypeMapping(ColumnModel column)
    content.vb: Protected Overridable Function GetTypeMapping(column As ColumnModel) As RelationalTypeMapping
    parameters:
    - id: column
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
    return:
      type: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetTypeMapping*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  id: VisitPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitPrimaryKey(EntityTypeBuilder, TableModel)
  nameWithType: RelationalScaffoldingModelFactory.VisitPrimaryKey(EntityTypeBuilder, TableModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitPrimaryKey
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 350
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual KeyBuilder VisitPrimaryKey(EntityTypeBuilder builder, TableModel table)
    content.vb: Protected Overridable Function VisitPrimaryKey(builder As EntityTypeBuilder, table As TableModel) As KeyBuilder
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    - id: table
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitPrimaryKey*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndexes(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndexes(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel})
  id: VisitIndexes(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitIndexes(EntityTypeBuilder, ICollection<IndexModel>)
  nameWithType: RelationalScaffoldingModelFactory.VisitIndexes(EntityTypeBuilder, ICollection<IndexModel>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndexes(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitIndexes
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 384
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual EntityTypeBuilder VisitIndexes(EntityTypeBuilder builder, ICollection<IndexModel> indexes)
    content.vb: Protected Overridable Function VisitIndexes(builder As EntityTypeBuilder, indexes As ICollection(Of IndexModel)) As EntityTypeBuilder
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    - id: indexes
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndexes*
  nameWithType.vb: RelationalScaffoldingModelFactory.VisitIndexes(EntityTypeBuilder, ICollection(Of IndexModel))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndexes(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel))
  name.vb: VisitIndexes(EntityTypeBuilder, ICollection(Of IndexModel))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  id: VisitIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitIndex(EntityTypeBuilder, IndexModel)
  nameWithType: RelationalScaffoldingModelFactory.VisitIndex(EntityTypeBuilder, IndexModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitIndex
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 397
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual IndexBuilder VisitIndex(EntityTypeBuilder builder, IndexModel index)
    content.vb: Protected Overridable Function VisitIndex(builder As EntityTypeBuilder, index As IndexModel) As IndexBuilder
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
    - id: index
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndex*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKeys(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKeys(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel})
  id: VisitForeignKeys(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitForeignKeys(ModelBuilder, IList<ForeignKeyModel>)
  nameWithType: RelationalScaffoldingModelFactory.VisitForeignKeys(ModelBuilder, IList<ForeignKeyModel>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKeys(Microsoft.EntityFrameworkCore.ModelBuilder, System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitForeignKeys
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 464
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual ModelBuilder VisitForeignKeys(ModelBuilder modelBuilder, IList<ForeignKeyModel> foreignKeys)
    content.vb: Protected Overridable Function VisitForeignKeys(modelBuilder As ModelBuilder, foreignKeys As IList(Of ForeignKeyModel)) As ModelBuilder
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    - id: foreignKeys
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel}
    return:
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKeys*
  nameWithType.vb: RelationalScaffoldingModelFactory.VisitForeignKeys(ModelBuilder, IList(Of ForeignKeyModel))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKeys(Microsoft.EntityFrameworkCore.ModelBuilder, System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel))
  name.vb: VisitForeignKeys(ModelBuilder, IList(Of ForeignKeyModel))
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKey(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKey(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  id: VisitForeignKey(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: VisitForeignKey(ModelBuilder, ForeignKeyModel)
  nameWithType: RelationalScaffoldingModelFactory.VisitForeignKey(ModelBuilder, ForeignKeyModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKey(Microsoft.EntityFrameworkCore.ModelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitForeignKey
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 485
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual IMutableForeignKey VisitForeignKey(ModelBuilder modelBuilder, ForeignKeyModel foreignKey)
    content.vb: Protected Overridable Function VisitForeignKey(modelBuilder As ModelBuilder, foreignKey As ForeignKeyModel) As IMutableForeignKey
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKey*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.AddNavigationProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.AddNavigationProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)
  id: AddNavigationProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: AddNavigationProperties(IMutableForeignKey)
  nameWithType: RelationalScaffoldingModelFactory.AddNavigationProperties(IMutableForeignKey)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.AddNavigationProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AddNavigationProperties
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 598
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual void AddNavigationProperties(IMutableForeignKey foreignKey)
    content.vb: Protected Overridable Sub AddNavigationProperties(foreignKey As IMutableForeignKey)
    parameters:
    - id: foreignKey
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.AddNavigationProperties*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.ExistingIdentifiers(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.ExistingIdentifiers(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: ExistingIdentifiers(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  langs:
  - csharp
  - vb
  name: ExistingIdentifiers(IEntityType)
  nameWithType: RelationalScaffoldingModelFactory.ExistingIdentifiers(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.ExistingIdentifiers(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExistingIdentifiers
    path: src/Microsoft.EntityFrameworkCore.Relational.Design/RelationalScaffoldingModelFactory.cs
    startLine: 633
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding
  syntax:
    content: protected virtual List<string> ExistingIdentifiers(IEntityType entityType)
    content.vb: Protected Overridable Function ExistingIdentifiers(entityType As IEntityType) As List(Of String)
    parameters:
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Collections.Generic.List{System.String}
  overload: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.ExistingIdentifiers*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding
  fullName: Microsoft.EntityFrameworkCore.Scaffolding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: IScaffoldingModelFactory
  nameWithType: IScaffoldingModelFactory
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Logger*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Logger
  isExternal: false
  name: Logger
  nameWithType: RelationalScaffoldingModelFactory.Logger
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Logger
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.TypeMapper*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.TypeMapper
  isExternal: false
  name: TypeMapper
  nameWithType: RelationalScaffoldingModelFactory.TypeMapper
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.TypeMapper
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CandidateNamingService*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CandidateNamingService
  isExternal: false
  name: CandidateNamingService
  nameWithType: RelationalScaffoldingModelFactory.CandidateNamingService
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CandidateNamingService
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: CandidateNamingService
  nameWithType: CandidateNamingService
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.#ctor
  isExternal: false
  name: RelationalScaffoldingModelFactory
  nameWithType: RelationalScaffoldingModelFactory.RelationalScaffoldingModelFactory
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.RelationalScaffoldingModelFactory
- uid: ILogger{Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory}
  commentId: '!:ILogger{Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory}'
  definition: ILogger`1
  name: ILogger<RelationalScaffoldingModelFactory>
  nameWithType: ILogger<RelationalScaffoldingModelFactory>
  fullName: ILogger<Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory>
  nameWithType.vb: ILogger(Of RelationalScaffoldingModelFactory)
  fullname.vb: ILogger(Of Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory)
  name.vb: ILogger(Of RelationalScaffoldingModelFactory)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
    name: RelationalScaffoldingModelFactory
    nameWithType: RelationalScaffoldingModelFactory
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
    name: RelationalScaffoldingModelFactory
    nameWithType: RelationalScaffoldingModelFactory
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: IDatabaseModelFactory
  nameWithType: IDatabaseModelFactory
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullname.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Create
  isExternal: false
  name: Create
  nameWithType: RelationalScaffoldingModelFactory.Create
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.Create
- uid: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory
  isExternal: true
  name: Create(String, TableSelectionSet)
  nameWithType: IScaffoldingModelFactory.Create(String, TableSelectionSet)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create(System.String, Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
    name: Create
    nameWithType: IScaffoldingModelFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
    name: TableSelectionSet
    nameWithType: TableSelectionSet
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)
    name: Create
    nameWithType: IScaffoldingModelFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
    name: TableSelectionSet
    nameWithType: TableSelectionSet
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
  parent: Microsoft.EntityFrameworkCore.Scaffolding
  isExternal: false
  name: TableSelectionSet
  nameWithType: TableSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CheckSelectionsMatched*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CheckSelectionsMatched
  isExternal: false
  name: CheckSelectionsMatched
  nameWithType: RelationalScaffoldingModelFactory.CheckSelectionsMatched
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CheckSelectionsMatched
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CreateFromDatabaseModel*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CreateFromDatabaseModel
  isExternal: false
  name: CreateFromDatabaseModel
  nameWithType: RelationalScaffoldingModelFactory.CreateFromDatabaseModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.CreateFromDatabaseModel
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: DatabaseModel
  nameWithType: DatabaseModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetEntityTypeName*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetEntityTypeName
  isExternal: false
  name: GetEntityTypeName
  nameWithType: RelationalScaffoldingModelFactory.GetEntityTypeName
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetEntityTypeName
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: TableModel
  nameWithType: TableModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetPropertyName*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetPropertyName
  isExternal: false
  name: GetPropertyName
  nameWithType: RelationalScaffoldingModelFactory.GetPropertyName
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetPropertyName
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: ColumnModel
  nameWithType: ColumnModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitDatabaseModel*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitDatabaseModel
  isExternal: false
  name: VisitDatabaseModel
  nameWithType: RelationalScaffoldingModelFactory.VisitDatabaseModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitDatabaseModel
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequences*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequences
  isExternal: false
  name: VisitSequences
  nameWithType: RelationalScaffoldingModelFactory.VisitSequences
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequences
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<SequenceModel>
  nameWithType: ICollection<SequenceModel>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel>
  nameWithType.vb: ICollection(Of SequenceModel)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel)
  name.vb: ICollection(Of SequenceModel)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
    name: SequenceModel
    nameWithType: SequenceModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
    name: SequenceModel
    nameWithType: SequenceModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequence*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequence
  isExternal: false
  name: VisitSequence
  nameWithType: RelationalScaffoldingModelFactory.VisitSequence
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitSequence
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: SequenceModel
  nameWithType: SequenceModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.SequenceModel
- uid: Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: RelationalSequenceBuilder
  nameWithType: RelationalSequenceBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTables*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTables
  isExternal: false
  name: VisitTables
  nameWithType: RelationalScaffoldingModelFactory.VisitTables
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTables
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TableModel>
  nameWithType: ICollection<TableModel>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel>
  nameWithType.vb: ICollection(Of TableModel)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel)
  name.vb: ICollection(Of TableModel)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
    name: TableModel
    nameWithType: TableModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
    name: TableModel
    nameWithType: TableModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.TableModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTable*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTable
  isExternal: false
  name: VisitTable
  nameWithType: RelationalScaffoldingModelFactory.VisitTable
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitTable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: EntityTypeBuilder
  nameWithType: EntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumns*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumns
  isExternal: false
  name: VisitColumns
  nameWithType: RelationalScaffoldingModelFactory.VisitColumns
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumns
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ColumnModel>
  nameWithType: ICollection<ColumnModel>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel>
  nameWithType.vb: ICollection(Of ColumnModel)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  name.vb: ICollection(Of ColumnModel)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
    name: ColumnModel
    nameWithType: ColumnModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
    name: ColumnModel
    nameWithType: ColumnModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumn
  isExternal: false
  name: VisitColumn
  nameWithType: RelationalScaffoldingModelFactory.VisitColumn
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitColumn
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetTypeMapping*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetTypeMapping
  isExternal: false
  name: GetTypeMapping
  nameWithType: RelationalScaffoldingModelFactory.GetTypeMapping
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.GetTypeMapping
- uid: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  commentId: T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: RelationalTypeMapping
  nameWithType: RelationalTypeMapping
  fullName: Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitPrimaryKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitPrimaryKey
  isExternal: false
  name: VisitPrimaryKey
  nameWithType: RelationalScaffoldingModelFactory.VisitPrimaryKey
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitPrimaryKey
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: KeyBuilder
  nameWithType: KeyBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndexes*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndexes
  isExternal: false
  name: VisitIndexes
  nameWithType: RelationalScaffoldingModelFactory.VisitIndexes
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndexes
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IndexModel>
  nameWithType: ICollection<IndexModel>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel>
  nameWithType.vb: ICollection(Of IndexModel)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel)
  name.vb: ICollection(Of IndexModel)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
    name: IndexModel
    nameWithType: IndexModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
    name: IndexModel
    nameWithType: IndexModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndex
  isExternal: false
  name: VisitIndex
  nameWithType: RelationalScaffoldingModelFactory.VisitIndex
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitIndex
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: IndexModel
  nameWithType: IndexModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.IndexModel
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: IndexBuilder
  nameWithType: IndexBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKeys*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKeys
  isExternal: false
  name: VisitForeignKeys
  nameWithType: RelationalScaffoldingModelFactory.VisitForeignKeys
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKeys
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ForeignKeyModel>
  nameWithType: IList<ForeignKeyModel>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel>
  nameWithType.vb: IList(Of ForeignKeyModel)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel)
  name.vb: IList(Of ForeignKeyModel)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
    name: ForeignKeyModel
    nameWithType: ForeignKeyModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
    name: ForeignKeyModel
    nameWithType: ForeignKeyModel
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKey
  isExternal: false
  name: VisitForeignKey
  nameWithType: RelationalScaffoldingModelFactory.VisitForeignKey
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.VisitForeignKey
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: ForeignKeyModel
  nameWithType: ForeignKeyModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ForeignKeyModel
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableForeignKey
  nameWithType: IMutableForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.AddNavigationProperties*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.AddNavigationProperties
  isExternal: false
  name: AddNavigationProperties
  nameWithType: RelationalScaffoldingModelFactory.AddNavigationProperties
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.AddNavigationProperties
- uid: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.ExistingIdentifiers*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.ExistingIdentifiers
  isExternal: false
  name: ExistingIdentifiers
  nameWithType: RelationalScaffoldingModelFactory.ExistingIdentifiers
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.RelationalScaffoldingModelFactory.ExistingIdentifiers
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
