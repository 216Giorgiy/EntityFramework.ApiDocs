### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector
  commentId: T:Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector
  id: DatabaseProviderSelector
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.#ctor(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider})
  - Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.SelectServices
  langs:
  - csharp
  - vb
  name: DatabaseProviderSelector
  nameWithType: DatabaseProviderSelector
  fullName: Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/DatabaseProviderSelector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DatabaseProviderSelector
    path: src/Microsoft.EntityFrameworkCore/Internal/DatabaseProviderSelector.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class DatabaseProviderSelector : IDatabaseProviderSelector'
    content.vb: >-
      Public Class DatabaseProviderSelector
          Implements IDatabaseProviderSelector
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.#ctor(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.#ctor(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider})
  id: '#ctor(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider})'
  parent: Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector
  langs:
  - csharp
  - vb
  name: DatabaseProviderSelector(IServiceProvider, IDbContextOptions, IEnumerable<IDatabaseProvider>)
  nameWithType: DatabaseProviderSelector.DatabaseProviderSelector(IServiceProvider, IDbContextOptions, IEnumerable<IDatabaseProvider>)
  fullName: Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.DatabaseProviderSelector(System.IServiceProvider, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions, System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/DatabaseProviderSelector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Internal/DatabaseProviderSelector.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public DatabaseProviderSelector(IServiceProvider serviceProvider, IDbContextOptions contextOptions, IEnumerable<IDatabaseProvider> providers)
    content.vb: Public Sub New(serviceProvider As IServiceProvider, contextOptions As IDbContextOptions, providers As IEnumerable(Of IDatabaseProvider))
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    - id: contextOptions
      type: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
    - id: providers
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider}
  nameWithType.vb: DatabaseProviderSelector.DatabaseProviderSelector(IServiceProvider, IDbContextOptions, IEnumerable(Of IDatabaseProvider))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.DatabaseProviderSelector(System.IServiceProvider, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions, System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider))
  name.vb: DatabaseProviderSelector(IServiceProvider, IDbContextOptions, IEnumerable(Of IDatabaseProvider))
- uid: Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.SelectServices
  commentId: M:Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.SelectServices
  id: SelectServices
  parent: Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector
  langs:
  - csharp
  - vb
  name: SelectServices()
  nameWithType: DatabaseProviderSelector.SelectServices()
  fullName: Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.SelectServices()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/DatabaseProviderSelector.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SelectServices
    path: src/Microsoft.EntityFrameworkCore/Internal/DatabaseProviderSelector.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IDatabaseProviderServices SelectServices()
    content.vb: Public Overridable Function SelectServices As IDatabaseProviderServices
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector.SelectServices
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IDatabaseProviderSelector
  nameWithType: IDatabaseProviderSelector
  fullName: Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IDbContextOptions
  nameWithType: IDbContextOptions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDatabaseProvider>
  nameWithType: IEnumerable<IDatabaseProvider>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider>
  nameWithType.vb: IEnumerable(Of IDatabaseProvider)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider)
  name.vb: IEnumerable(Of IDatabaseProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider
    name: IDatabaseProvider
    nameWithType: IDatabaseProvider
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider
    name: IDatabaseProvider
    nameWithType: IDatabaseProvider
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector.SelectServices
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector.SelectServices
  parent: Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector
  isExternal: false
  name: SelectServices()
  nameWithType: IDatabaseProviderSelector.SelectServices()
  fullName: Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector.SelectServices()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector.SelectServices
    name: SelectServices
    nameWithType: IDatabaseProviderSelector.SelectServices
    fullName: Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector.SelectServices
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector.SelectServices
    name: SelectServices
    nameWithType: IDatabaseProviderSelector.SelectServices
    fullName: Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector.SelectServices
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabaseProviderServices
  nameWithType: IDatabaseProviderServices
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
