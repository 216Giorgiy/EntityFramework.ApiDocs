### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory
  commentId: T:Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory
  id: DbContextTest.FakeServiceProvider.FakeServiceScopeFactory
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.CreateScope
  - Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.Scope
  langs:
  - csharp
  - vb
  name: DbContextTest.FakeServiceProvider.FakeServiceScopeFactory
  nameWithType: DbContextTest.FakeServiceProvider.FakeServiceScopeFactory
  fullName: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/DbContextTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FakeServiceScopeFactory
    path: test/Microsoft.EntityFrameworkCore.Tests/DbContextTest.cs
    startLine: 5380
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public class FakeServiceScopeFactory : IServiceScopeFactory'
    content.vb: >-
      Public Class FakeServiceScopeFactory
          Implements IServiceScopeFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.Scope
  commentId: P:Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.Scope
  id: Scope
  parent: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.Scope
  fullName: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.Scope
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/DbContextTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Scope
    path: test/Microsoft.EntityFrameworkCore.Tests/DbContextTest.cs
    startLine: 5382
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public static DbContextTest.FakeServiceProvider.FakeServiceScope Scope { get; }
    content.vb: Public Shared ReadOnly Property Scope As DbContextTest.FakeServiceProvider.FakeServiceScope
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScope
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.CreateScope
  commentId: M:Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.CreateScope
  id: CreateScope
  parent: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory
  langs:
  - csharp
  - vb
  name: CreateScope()
  nameWithType: DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.CreateScope()
  fullName: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScopeFactory.CreateScope()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/DbContextTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateScope
    path: test/Microsoft.EntityFrameworkCore.Tests/DbContextTest.cs
    startLine: 5383
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public IServiceScope CreateScope()
    content.vb: Public Function CreateScope As IServiceScope
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceScope
  implements:
  - Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceScopeFactory
  nameWithType: IServiceScopeFactory
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScope
  commentId: T:Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScope
  parent: Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: DbContextTest.FakeServiceProvider.FakeServiceScope
  nameWithType: DbContextTest.FakeServiceProvider.FakeServiceScope
  fullName: Microsoft.EntityFrameworkCore.Tests.DbContextTest.FakeServiceProvider.FakeServiceScope
- uid: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
  commentId: M:Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
  parent: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  isExternal: true
  name: CreateScope()
  nameWithType: IServiceScopeFactory.CreateScope()
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope()
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
    name: CreateScope
    nameWithType: IServiceScopeFactory.CreateScope
    fullName: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
    name: CreateScope
    nameWithType: IServiceScopeFactory.CreateScope
    fullName: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory.CreateScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceScope
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceScope
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceScope
  nameWithType: IServiceScope
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScope
