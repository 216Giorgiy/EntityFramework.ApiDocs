### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  id: ICustomer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Auditing
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.ContactInfo
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.CustomerId
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Husband
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.HusbandId
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Info
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.InitializeCollections
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Logins
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Name
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Orders
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Wife
  langs:
  - csharp
  - vb
  name: ICustomer
  nameWithType: ICustomer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ICustomer
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 321
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: public interface ICustomer
    content.vb: Public Interface ICustomer
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.CustomerId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.CustomerId
  id: CustomerId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: CustomerId
  nameWithType: ICustomer.CustomerId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.CustomerId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CustomerId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 323
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: int CustomerId { get; set; }
    content.vb: Property CustomerId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.CustomerId*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.HusbandId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.HusbandId
  id: HusbandId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: HusbandId
  nameWithType: ICustomer.HusbandId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.HusbandId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HusbandId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 324
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: int ? HusbandId { get; set; }
    content.vb: Property HusbandId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.HusbandId*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Name
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ICustomer.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 325
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: string Name { get; set; }
    content.vb: Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Name*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.ContactInfo
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.ContactInfo
  id: ContactInfo
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: ContactInfo
  nameWithType: ICustomer.ContactInfo
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.ContactInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ContactInfo
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 326
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: ContactDetails ContactInfo { get; set; }
    content.vb: Property ContactInfo As ContactDetails
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ContactDetails
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.ContactInfo*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Auditing
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Auditing
  id: Auditing
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: Auditing
  nameWithType: ICustomer.Auditing
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Auditing
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Auditing
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 327
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: AuditInfo Auditing { get; set; }
    content.vb: Property Auditing As AuditInfo
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.AuditInfo
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Auditing*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Orders
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Orders
  id: Orders
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: Orders
  nameWithType: ICustomer.Orders
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Orders
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Orders
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 328
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: ICollection<IAnOrder> Orders { get; set; }
    content.vb: Property Orders As ICollection(Of IAnOrder)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Orders*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Logins
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Logins
  id: Logins
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: Logins
  nameWithType: ICustomer.Logins
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Logins
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Logins
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 329
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: ICollection<ILogin> Logins { get; set; }
    content.vb: Property Logins As ICollection(Of ILogin)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Logins*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Husband
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Husband
  id: Husband
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: Husband
  nameWithType: ICustomer.Husband
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Husband
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Husband
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 330
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: ICustomer Husband { get; set; }
    content.vb: Property Husband As ICustomer
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Husband*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Wife
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Wife
  id: Wife
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: Wife
  nameWithType: ICustomer.Wife
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Wife
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Wife
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 331
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: ICustomer Wife { get; set; }
    content.vb: Property Wife As ICustomer
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Wife*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Info
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Info
  id: Info
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: ICustomer.Info
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Info
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Info
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 332
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: ICustomerInfo Info { get; set; }
    content.vb: Property Info As ICustomerInfo
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Info*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.InitializeCollections
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.InitializeCollections
  id: InitializeCollections
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  langs:
  - csharp
  - vb
  name: InitializeCollections()
  nameWithType: ICustomer.InitializeCollections()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.InitializeCollections()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InitializeCollections
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/MonsterModel.cs
    startLine: 333
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  syntax:
    content: void InitializeCollections()
    content.vb: Sub InitializeCollections
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.InitializeCollections*
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.CustomerId*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.CustomerId
  isExternal: false
  name: CustomerId
  nameWithType: ICustomer.CustomerId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.CustomerId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.HusbandId*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.HusbandId
  isExternal: false
  name: HusbandId
  nameWithType: ICustomer.HusbandId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.HusbandId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Name*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Name
  isExternal: false
  name: Name
  nameWithType: ICustomer.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.ContactInfo*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.ContactInfo
  isExternal: false
  name: ContactInfo
  nameWithType: ICustomer.ContactInfo
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.ContactInfo
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ContactDetails
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ContactDetails
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: ContactDetails
  nameWithType: ContactDetails
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ContactDetails
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Auditing*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Auditing
  isExternal: false
  name: Auditing
  nameWithType: ICustomer.Auditing
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Auditing
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.AuditInfo
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.AuditInfo
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: AuditInfo
  nameWithType: AuditInfo
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.AuditInfo
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Orders*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Orders
  isExternal: false
  name: Orders
  nameWithType: ICustomer.Orders
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Orders
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IAnOrder>
  nameWithType: ICollection<IAnOrder>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder>
  nameWithType.vb: ICollection(Of IAnOrder)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder)
  name.vb: ICollection(Of IAnOrder)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder
    name: IAnOrder
    nameWithType: IAnOrder
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder
    name: IAnOrder
    nameWithType: IAnOrder
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.IAnOrder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Logins*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Logins
  isExternal: false
  name: Logins
  nameWithType: ICustomer.Logins
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Logins
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ILogin>
  nameWithType: ICollection<ILogin>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin>
  nameWithType.vb: ICollection(Of ILogin)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin)
  name.vb: ICollection(Of ILogin)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin
    name: ILogin
    nameWithType: ILogin
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin
    name: ILogin
    nameWithType: ILogin
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ILogin
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Husband*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Husband
  isExternal: false
  name: Husband
  nameWithType: ICustomer.Husband
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Husband
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: ICustomer
  nameWithType: ICustomer
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Wife*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Wife
  isExternal: false
  name: Wife
  nameWithType: ICustomer.Wife
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Wife
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Info*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Info
  isExternal: false
  name: Info
  nameWithType: ICustomer.Info
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.Info
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels
  isExternal: false
  name: ICustomerInfo
  nameWithType: ICustomerInfo
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomerInfo
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.InitializeCollections*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.InitializeCollections
  isExternal: false
  name: InitializeCollections
  nameWithType: ICustomer.InitializeCollections
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ICustomer.InitializeCollections
