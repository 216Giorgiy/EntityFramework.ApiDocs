### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  id: IDbSetInitializer
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  langs:
  - csharp
  - vb
  name: IDbSetInitializer
  nameWithType: IDbSetInitializer
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbSetInitializer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IDbSetInitializer
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbSetInitializer.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IDbSetInitializer
    content.vb: Public Interface IDbSetInitializer
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  id: InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  langs:
  - csharp
  - vb
  name: InitializeSets(DbContext)
  nameWithType: IDbSetInitializer.InitializeSets(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbSetInitializer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InitializeSets
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbSetInitializer.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void InitializeSets(DbContext context)
    content.vb: Sub InitializeSets(context As DbContext)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  id: CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  langs:
  - csharp
  - vb
  name: CreateSet<TEntity>(DbContext)
  nameWithType: IDbSetInitializer.CreateSet<TEntity>(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet<TEntity>(Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IDbSetInitializer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateSet
    path: src/Microsoft.EntityFrameworkCore/Internal/IDbSetInitializer.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'DbSet<TEntity> CreateSet<TEntity>(DbContext context)where TEntity : class'
    content.vb: Function CreateSet(Of TEntity As Class)(context As DbContext) As DbSet(Of TEntity)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  nameWithType.vb: IDbSetInitializer.CreateSet(Of TEntity)(DbContext)
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet(Of TEntity)(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: CreateSet(Of TEntity)(DbContext)
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{``0}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: false
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
