### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  id: InternalMetadataBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.Metadata
  - Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.ModelBuilder
  langs:
  - csharp
  - vb
  name: InternalMetadataBuilder
  nameWithType: InternalMetadataBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InternalMetadataBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public abstract class InternalMetadataBuilder
    content.vb: Public MustInherit Class InternalMetadataBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  langs:
  - csharp
  - vb
  name: InternalMetadataBuilder(ConventionalAnnotatable)
  nameWithType: InternalMetadataBuilder.InternalMetadataBuilder(ConventionalAnnotatable)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.InternalMetadataBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected InternalMetadataBuilder(ConventionalAnnotatable metadata)
    content.vb: Protected Sub New(metadata As ConventionalAnnotatable)
    parameters:
    - id: metadata
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.Metadata
  id: Metadata
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: InternalMetadataBuilder.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.Metadata
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Metadata
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ConventionalAnnotatable Metadata { get; }
    content.vb: Public Overridable ReadOnly Property Metadata As ConventionalAnnotatable
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.ModelBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.ModelBuilder
  id: ModelBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  langs:
  - csharp
  - vb
  name: ModelBuilder
  nameWithType: InternalMetadataBuilder.ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.ModelBuilder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public abstract InternalModelBuilder ModelBuilder { get; }
    content.vb: Public MustOverride ReadOnly Property ModelBuilder As InternalModelBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  langs:
  - csharp
  - vb
  name: HasAnnotation(String, Object, ConfigurationSource)
  nameWithType: InternalMetadataBuilder.HasAnnotation(String, Object, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String, System.Object, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasAnnotation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool HasAnnotation(string name, object value, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function HasAnnotation(name As String, value As Object, configurationSource As ConfigurationSource) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  id: CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  langs:
  - csharp
  - vb
  name: CanSetAnnotation(String, Object, ConfigurationSource)
  nameWithType: InternalMetadataBuilder.CanSetAnnotation(String, Object, ConfigurationSource)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String, System.Object, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CanSetAnnotation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool CanSetAnnotation(string name, object value, ConfigurationSource configurationSource)
    content.vb: Public Overridable Function CanSetAnnotation(name As String, value As Object, configurationSource As ConfigurationSource) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    - id: configurationSource
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
  id: MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  langs:
  - csharp
  - vb
  name: MergeAnnotationsFrom(InternalMetadataBuilder)
  nameWithType: InternalMetadataBuilder.MergeAnnotationsFrom(InternalMetadataBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: MergeAnnotationsFrom
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/InternalMetadataBuilder.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual void MergeAnnotationsFrom(InternalMetadataBuilder annotatableBuilder)
    content.vb: Protected Overridable Sub MergeAnnotationsFrom(annotatableBuilder As InternalMetadataBuilder)
    parameters:
    - id: annotatableBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: ConventionalAnnotatable
  nameWithType: ConventionalAnnotatable
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalModelBuilder
  nameWithType: InternalModelBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: ConfigurationSource
  nameWithType: ConfigurationSource
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalMetadataBuilder
  nameWithType: InternalMetadataBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder
