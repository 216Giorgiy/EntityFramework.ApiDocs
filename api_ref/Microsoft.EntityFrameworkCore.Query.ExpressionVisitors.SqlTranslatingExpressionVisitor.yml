### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  id: SqlTranslatingExpressionVisitor
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.ClientEvalPredicate
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
  langs:
  - csharp
  - vb
  name: SqlTranslatingExpressionVisitor
  nameWithType: SqlTranslatingExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SqlTranslatingExpressionVisitor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    The default relational LINQ translating expression visitor.\n"
  example: []
  syntax:
    content: 'public class SqlTranslatingExpressionVisitor : ThrowingExpressionVisitor'
    content.vb: >-
      Public Class SqlTranslatingExpressionVisitor
          Inherits ThrowingExpressionVisitor
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean,System.Boolean)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean,System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: SqlTranslatingExpressionVisitor(IRelationalAnnotationProvider, IExpressionFragmentTranslator, IMethodCallTranslator, IMemberTranslator, IRelationalTypeMapper, RelationalQueryModelVisitor, SelectExpression, Expression, Boolean, Boolean)
  nameWithType: SqlTranslatingExpressionVisitor.SqlTranslatingExpressionVisitor(IRelationalAnnotationProvider, IExpressionFragmentTranslator, IMethodCallTranslator, IMemberTranslator, IRelationalTypeMapper, RelationalQueryModelVisitor, SelectExpression, Expression, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.SqlTranslatingExpressionVisitor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider, Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator, Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator, Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor, Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression, System.Linq.Expressions.Expression, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Creates a new instance of <xref href=\"Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public SqlTranslatingExpressionVisitor(IRelationalAnnotationProvider relationalAnnotationProvider, IExpressionFragmentTranslator compositeExpressionFragmentTranslator, IMethodCallTranslator methodCallTranslator, IMemberTranslator memberTranslator, IRelationalTypeMapper relationalTypeMapper, RelationalQueryModelVisitor queryModelVisitor, SelectExpression targetSelectExpression = null, Expression topLevelPredicate = null, bool bindParentQueries = false, bool inProjection = false)
    content.vb: Public Sub New(relationalAnnotationProvider As IRelationalAnnotationProvider, compositeExpressionFragmentTranslator As IExpressionFragmentTranslator, methodCallTranslator As IMethodCallTranslator, memberTranslator As IMemberTranslator, relationalTypeMapper As IRelationalTypeMapper, queryModelVisitor As RelationalQueryModelVisitor, targetSelectExpression As SelectExpression = Nothing, topLevelPredicate As Expression = Nothing, bindParentQueries As Boolean = False, inProjection As Boolean = False)
    parameters:
    - id: relationalAnnotationProvider
      type: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
      description: 'The relational annotation provider. '
    - id: compositeExpressionFragmentTranslator
      type: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator
      description: 'The composite expression fragment translator. '
    - id: methodCallTranslator
      type: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
      description: 'The method call translator. '
    - id: memberTranslator
      type: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator
      description: 'The member translator. '
    - id: relationalTypeMapper
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
      description: 'The relational type mapper. '
    - id: queryModelVisitor
      type: Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor
      description: 'The query model visitor. '
    - id: targetSelectExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
      description: 'The target select expression. '
    - id: topLevelPredicate
      type: System.Linq.Expressions.Expression
      description: 'The top level predicate. '
    - id: bindParentQueries
      type: System.Boolean
      description: 'true to bind parent queries. '
    - id: inProjection
      type: System.Boolean
      description: 'true if the expression to be translated is a LINQ projection. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.ClientEvalPredicate
  commentId: P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.ClientEvalPredicate
  id: ClientEvalPredicate
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: ClientEvalPredicate
  nameWithType: SqlTranslatingExpressionVisitor.ClientEvalPredicate
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.ClientEvalPredicate
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ClientEvalPredicate
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 104
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    When translating a predicate expression, returns a client expression corresponding\n    to the part of the target expression that should be evaluated locally.\n"
  example: []
  syntax:
    content: public virtual Expression ClientEvalPredicate { get; }
    content.vb: Public Overridable ReadOnly Property ClientEvalPredicate As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    The client eval predicate.\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  id: Visit(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: Visit(Expression)
  nameWithType: SqlTranslatingExpressionVisitor.Visit(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Visit
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 113
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visits the given expression.\n"
  example: []
  syntax:
    content: public override Expression Visit(Expression expression)
    content.vb: Public Overrides Function Visit(expression As Expression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  id: VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitBinary(BinaryExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitBinary(BinaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitBinary
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 133
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visit a binary expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitBinary(BinaryExpression expression)
    content.vb: Protected Overrides Function VisitBinary(expression As BinaryExpression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.BinaryExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  id: VisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitConditional(ConditionalExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitConditional(ConditionalExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitConditional
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 236
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visits a conditional expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitConditional(ConditionalExpression expression)
    content.vb: Protected Overrides Function VisitConditional(expression As ConditionalExpression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.ConditionalExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitMethodCall
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 576
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visits a method call expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitMethodCall(MethodCallExpression methodCallExpression)
    content.vb: Protected Overrides Function VisitMethodCall(methodCallExpression As MethodCallExpression) As Expression
    parameters:
    - id: methodCallExpression
      type: System.Linq.Expressions.MethodCallExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  id: VisitMember(System.Linq.Expressions.MemberExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitMember(MemberExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitMember(MemberExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitMember
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 632
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visit a member expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitMember(MemberExpression expression)
    content.vb: Protected Overrides Function VisitMember(expression As MemberExpression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.MemberExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  id: VisitUnary(System.Linq.Expressions.UnaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitUnary(UnaryExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitUnary(UnaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitUnary
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 725
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visit a unary expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitUnary(UnaryExpression expression)
    content.vb: Protected Overrides Function VisitUnary(expression As UnaryExpression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.UnaryExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  id: VisitNew(System.Linq.Expressions.NewExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitNew(NewExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitNew(NewExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitNew
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 763
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visits a new expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitNew(NewExpression expression)
    content.vb: Protected Overrides Function VisitNew(expression As NewExpression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.NewExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  id: VisitSubQuery(SubQueryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitSubQuery(SubQueryExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitSubQuery
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 809
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visits a sub-query expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitSubQuery(SubQueryExpression expression)
    content.vb: Protected Overrides Function VisitSubQuery(expression As SubQueryExpression) As Expression
    parameters:
    - id: expression
      type: SubQueryExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  id: VisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitConstant(ConstantExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitConstant(ConstantExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitConstant
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 914
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visits a constant expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitConstant(ConstantExpression expression)
    content.vb: Protected Overrides Function VisitConstant(expression As ConstantExpression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.ConstantExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  id: VisitParameter(System.Linq.Expressions.ParameterExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitParameter(ParameterExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitParameter(ParameterExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitParameter
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 942
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visits a parameter expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitParameter(ParameterExpression expression)
    content.vb: Protected Overrides Function VisitParameter(expression As ParameterExpression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.ParameterExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  id: VisitExtension(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitExtension(Expression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitExtension(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitExtension
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 960
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visits an extension expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitExtension(Expression expression)
    content.vb: Protected Overrides Function VisitExtension(expression As Expression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  id: VisitQuerySourceReference(QuerySourceReferenceExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitQuerySourceReference(QuerySourceReferenceExpression)
  nameWithType: SqlTranslatingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitQuerySourceReference
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 1019
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Visits a query source reference expression.\n"
  example: []
  syntax:
    content: protected override Expression VisitQuerySourceReference(QuerySourceReferenceExpression expression)
    content.vb: Protected Overrides Function VisitQuerySourceReference(expression As QuerySourceReferenceExpression) As Expression
    parameters:
    - id: expression
      type: QuerySourceReferenceExpression
      description: 'The expression to visit. '
    return:
      type: System.Linq.Expressions.Expression
      description: "\n    An Expression.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
  id: VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitUnhandledItem<TItem, TResult>(TItem, String, Func<TItem, TResult>)
  nameWithType: SqlTranslatingExpressionVisitor.VisitUnhandledItem<TItem, TResult>(TItem, String, Func<TItem, TResult>)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnhandledItem<TItem, TResult>(TItem, System.String, System.Func<TItem, TResult>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitUnhandledItem
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 1071
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Called when an unhandled item is visited. This method provides the item the visitor cannot handle (<em>unhandledItem</em>),\n    the <em>visitMethod</em> that is not implemented in the visitor, and a delegate that can be used to invoke the\n<em>baseBehavior</em> of the <xref href=\"Remotion.Linq.Parsing.RelinqExpressionVisitor\" data-throw-if-not-resolved=\"false\"></xref> class. The default behavior of\nthis method is to call the\n<xref href=\"Remotion.Linq.Parsing.ThrowingExpressionVisitor.CreateUnhandledItemException%60%601(%60%600%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> method, but it can\nbe overridden to do something else.\n"
  example: []
  syntax:
    content: protected override TResult VisitUnhandledItem<TItem, TResult>(TItem unhandledItem, string visitMethod, Func<TItem, TResult> baseBehavior)
    content.vb: Protected Overrides Function VisitUnhandledItem(Of TItem, TResult)(unhandledItem As TItem, visitMethod As String, baseBehavior As Func(Of TItem, TResult)) As TResult
    parameters:
    - id: unhandledItem
      type: '{TItem}'
      description: The unhandled item.
    - id: visitMethod
      type: System.String
      description: The visit method that is not implemented.
    - id: baseBehavior
      type: System.Func{{TItem},{TResult}}
      description: The behavior exposed by <xref href="Remotion.Linq.Parsing.RelinqExpressionVisitor" data-throw-if-not-resolved="false"></xref> for this item type.
    typeParameters:
    - id: TItem
      description: "\n    The type of the item that could not be handled. Either an <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> type, a\n<xref href=\"System.Linq.Expressions.MemberBinding\" data-throw-if-not-resolved=\"false\"></xref>\ntype, or <xref href=\"System.Linq.Expressions.ElementInit\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    - id: TResult
      description: The result type expected for the visited <em>unhandledItem</em>.
    return:
      type: '{TResult}'
      description: An object to replace <em>unhandledItem</em> in the expression tree. Alternatively, the method can throw any exception.
  nameWithType.vb: SqlTranslatingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)(TItem, String, Func(Of TItem, TResult))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnhandledItem(Of TItem, TResult)(TItem, System.String, System.Func(Of TItem, TResult))
  name.vb: VisitUnhandledItem(Of TItem, TResult)(TItem, String, Func(Of TItem, TResult))
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)
  id: CreateUnhandledItemException``1(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  langs:
  - csharp
  - vb
  name: CreateUnhandledItemException<T>(T, String)
  nameWithType: SqlTranslatingExpressionVisitor.CreateUnhandledItemException<T>(T, String)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.CreateUnhandledItemException<T>(T, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateUnhandledItemException
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/SqlTranslatingExpressionVisitor.cs
    startLine: 1084
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  summary: "\n    Creates an unhandled item exception.\n"
  example: []
  syntax:
    content: protected override Exception CreateUnhandledItemException<T>(T unhandledItem, string visitMethod)
    content.vb: Protected Overrides Function CreateUnhandledItemException(Of T)(unhandledItem As T, visitMethod As String) As Exception
    parameters:
    - id: unhandledItem
      type: '{T}'
      description: 'The unhandled item. '
    - id: visitMethod
      type: System.String
      description: 'The visit method that is not implemented. '
    typeParameters:
    - id: T
      description: 'Generic type parameter. '
    return:
      type: System.Exception
      description: "\n    The new unhandled item exception.\n"
  nameWithType.vb: SqlTranslatingExpressionVisitor.CreateUnhandledItemException(Of T)(T, String)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.CreateUnhandledItemException(Of T)(T, System.String)
  name.vb: CreateUnhandledItemException(Of T)(T, String)
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<SqlTranslatingExpressionVisitor, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<SqlTranslatingExpressionVisitor, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of SqlTranslatingExpressionVisitor, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of SqlTranslatingExpressionVisitor, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<SqlTranslatingExpressionVisitor, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<SqlTranslatingExpressionVisitor, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of SqlTranslatingExpressionVisitor, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of SqlTranslatingExpressionVisitor, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: SqlTranslatingExpressionVisitor
  nameWithType: SqlTranslatingExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor
- uid: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IRelationalAnnotationProvider
  nameWithType: IRelationalAnnotationProvider
  fullName: Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  isExternal: false
  name: IExpressionFragmentTranslator
  nameWithType: IExpressionFragmentTranslator
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  isExternal: false
  name: IMethodCallTranslator
  nameWithType: IMethodCallTranslator
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  isExternal: false
  name: IMemberTranslator
  nameWithType: IMemberTranslator
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTypeMapper
  nameWithType: IRelationalTypeMapper
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper
- uid: Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: RelationalQueryModelVisitor
  nameWithType: RelationalQueryModelVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: SelectExpression
  nameWithType: SelectExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionTranslators
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Query.Expressions
  commentId: N:Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Expressions
  nameWithType: Microsoft.EntityFrameworkCore.Query.Expressions
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.Expressions.BinaryExpression
  commentId: T:System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ConditionalExpression
  commentId: T:System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.MemberExpression
  commentId: T:System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.UnaryExpression
  commentId: T:System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.NewExpression
  commentId: T:System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: SubQueryExpression
  isExternal: true
  name: SubQueryExpression
  nameWithType: SubQueryExpression
  fullName: SubQueryExpression
- uid: System.Linq.Expressions.ConstantExpression
  commentId: T:System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ConstantExpression
  nameWithType: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
- uid: System.Linq.Expressions.ParameterExpression
  commentId: T:System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: QuerySourceReferenceExpression
  isExternal: true
  name: QuerySourceReferenceExpression
  nameWithType: QuerySourceReferenceExpression
  fullName: QuerySourceReferenceExpression
- uid: Remotion.Linq.Parsing.RelinqExpressionVisitor
  commentId: T:Remotion.Linq.Parsing.RelinqExpressionVisitor
- uid: Remotion.Linq.Parsing.ThrowingExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)
  commentId: M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)
- uid: System.Linq.Expressions.MemberBinding
  commentId: T:System.Linq.Expressions.MemberBinding
- uid: System.Linq.Expressions.ElementInit
  commentId: T:System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: true
  name: ElementInit
  nameWithType: ElementInit
  fullName: System.Linq.Expressions.ElementInit
- uid: '{TItem}'
  commentId: '!:TItem'
  definition: TItem
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{{TItem},{TResult}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  name: Func<TItem, TResult>
  nameWithType: Func<TItem, TResult>
  fullName: System.Func<TItem, TResult>
  nameWithType.vb: Func(Of TItem, TResult)
  fullname.vb: System.Func(Of TItem, TResult)
  name.vb: Func(Of TItem, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TItem
  commentId: '!:TItem'
  isExternal: false
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TResult
  isExternal: false
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
