### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  id: ReferenceReferenceBuilder`2
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  langs:
  - csharp
  - vb
  name: ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ReferenceReferenceBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Provides a simple API for configuring a one-to-one relationship.\n</p>\n<p>\n    If multiple reference key properties are specified, the order of reference key properties should\n    match the order that the primary key or unique index properties were configured on the principal\n    entity type.\n</p>\n"
  example: []
  syntax:
    content: 'public class ReferenceReferenceBuilder<TEntity, TRelatedEntity> : ReferenceReferenceBuilder, IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder> where TEntity : class where TRelatedEntity : class'
    content.vb: >-
      Public Class ReferenceReferenceBuilder(Of TEntity As Class, TRelatedEntity As Class)
          Inherits ReferenceReferenceBuilder
          Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)
    typeParameters:
    - id: TEntity
    - id: TRelatedEntity
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(System.String)
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  name.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: ReferenceReferenceBuilder(EntityType, EntityType, InternalRelationshipBuilder)
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.ReferenceReferenceBuilder(EntityType, EntityType, InternalRelationshipBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.ReferenceReferenceBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ReferenceReferenceBuilder(EntityType declaringEntityType, EntityType relatedEntityType, InternalRelationshipBuilder builder)
    content.vb: Public Sub New(declaringEntityType As EntityType, relatedEntityType As EntityType, builder As InternalRelationshipBuilder)
    parameters:
    - id: declaringEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: relatedEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).ReferenceReferenceBuilder(EntityType, EntityType, InternalRelationshipBuilder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).ReferenceReferenceBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: ReferenceReferenceBuilder(InternalRelationshipBuilder, ReferenceReferenceBuilder, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.ReferenceReferenceBuilder(InternalRelationshipBuilder, ReferenceReferenceBuilder, Boolean, Boolean, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.ReferenceReferenceBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected ReferenceReferenceBuilder(InternalRelationshipBuilder builder, ReferenceReferenceBuilder oldBuilder, bool inverted = false, bool foreignKeySet = false, bool principalKeySet = false, bool requiredSet = false)
    content.vb: Protected Sub New(builder As InternalRelationshipBuilder, oldBuilder As ReferenceReferenceBuilder, inverted As Boolean = False, foreignKeySet As Boolean = False, principalKeySet As Boolean = False, requiredSet As Boolean = False)
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    - id: oldBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    - id: inverted
      type: System.Boolean
    - id: foreignKeySet
      type: System.Boolean
    - id: principalKeySet
      type: System.Boolean
    - id: requiredSet
      type: System.Boolean
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).ReferenceReferenceBuilder(InternalRelationshipBuilder, ReferenceReferenceBuilder, Boolean, Boolean, Boolean, Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).ReferenceReferenceBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)
  id: HasAnnotation(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: HasAnnotation(String, Object)
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasAnnotation(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasAnnotation(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasAnnotation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Adds or updates an annotation on the relationship. If an annotation with the key specified in\n<em>annotation</em> already exists it's value will be updated.\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasAnnotation(string annotation, object value)
    content.vb: Public Overridable Function HasAnnotation(annotation As String, value As Object) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: annotation
      type: System.String
      description: 'The key of the annotation to be added or updated. '
    - id: value
      type: System.Object
      description: 'The value to be stored in the annotation. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasAnnotation(String, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasAnnotation(System.String, System.Object)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])
  id: HasForeignKey(System.Type,System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: HasForeignKey(Type, String[])
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey(Type, String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey(System.Type, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 89
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures the property(s) to use as the foreign key for this relationship.\n</p>\n<p>\n    If the specified property name(s) do not exist on the entity type then a new shadow state\n    property(s) will be added to serve as the foreign key. A shadow state property is one\n    that does not have a corresponding property in the entity class. The current value for the\n    property is stored in the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> rather than being stored in instances\n    of the entity class.\n</p>\n<p>\n    If <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder%602.HasPrincipalKey(System.Type%2cSystem.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> is not specified, then an attempt will be made to\n    match the data type and order of foreign key properties against the primary key of the principal\n    entity type. If they do not match, new shadow state properties that form a unique index will be\n    added to the principal entity type to serve as the reference key.\n</p>\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasForeignKey(Type dependentEntityType, params string[] foreignKeyPropertyNames)
    content.vb: Public Overridable Function HasForeignKey(dependentEntityType As Type, ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: dependentEntityType
      type: System.Type
      description: "\n    The entity type that is the dependent in this relationship (the type that has the foreign key\n    properties).\n"
    - id: foreignKeyPropertyNames
      type: System.String[]
      description: "\n    The name(s) of the foreign key property(s).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(Type, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(System.Type, System.String())
  name.vb: HasForeignKey(Type, String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.String[])
  id: HasForeignKey``1(System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: HasForeignKey<TDependentEntity>(String[])
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey<TDependentEntity>(String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey<TDependentEntity>(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 126
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures the property(s) to use as the foreign key for this relationship.\n</p>\n<p>\n    If the specified property name(s) do not exist on the entity type then a new shadow state\n    property(s) will be added to serve as the foreign key. A shadow state property is one\n    that does not have a corresponding property in the entity class. The current value for the\n    property is stored in the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> rather than being stored in instances\n    of the entity class.\n</p>\n<p>\n    If <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder%602.HasPrincipalKey(System.Type%2cSystem.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> is not specified, then an attempt will be made to\n    match the data type and order of foreign key properties against the primary key of the principal\n    entity type. If they do not match, new shadow state properties that form a unique index will be\n    added to the principal entity type to serve as the reference key.\n</p>\n"
  example: []
  syntax:
    content: 'public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasForeignKey<TDependentEntity>(params string[] foreignKeyPropertyNames)where TDependentEntity : class'
    content.vb: Public Overridable Function HasForeignKey(Of TDependentEntity As Class)(ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: foreignKeyPropertyNames
      type: System.String[]
      description: "\n    The name(s) of the foreign key property(s).\n"
    typeParameters:
    - id: TDependentEntity
      description: "\n    The entity type that is the dependent in this relationship (the type that has the foreign key\n    properties).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(Of TDependentEntity)(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(Of TDependentEntity)(System.String())
  name.vb: HasForeignKey(Of TDependentEntity)(String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])
  id: HasPrincipalKey(System.Type,System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: HasPrincipalKey(Type, String[])
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(Type, String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(System.Type, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasPrincipalKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 143
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures the unique property(s) that this relationship targets. Typically you would only call this\n    method if you want to use a property(s) other than the primary key as the principal property(s). If\n    the specified property(s) is not already a unique constraint (or the primary key) then a new unique\n    constraint will be introduced.\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasPrincipalKey(Type principalEntityType, params string[] keyPropertyNames)
    content.vb: Public Overridable Function HasPrincipalKey(principalEntityType As Type, ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: principalEntityType
      type: System.Type
      description: "\n    The entity type that is the principal in this relationship (the type\n    that has the reference key properties).\n"
    - id: keyPropertyNames
      type: System.String[]
      description: 'The name(s) of the reference key property(s). '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(Type, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(System.Type, System.String())
  name.vb: HasPrincipalKey(Type, String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.String[])
  id: HasPrincipalKey``1(System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: HasPrincipalKey<TPrincipalEntity>(String[])
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey<TPrincipalEntity>(String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey<TPrincipalEntity>(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasPrincipalKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 167
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures the unique property(s) that this relationship targets. Typically you would only call this\n    method if you want to use a property(s) other than the primary key as the principal property(s). If\n    the specified property(s) is not already a unique constraint (or the primary key) then a new unique\n    constraint will be introduced.\n"
  example: []
  syntax:
    content: 'public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasPrincipalKey<TPrincipalEntity>(params string[] keyPropertyNames)where TPrincipalEntity : class'
    content.vb: Public Overridable Function HasPrincipalKey(Of TPrincipalEntity As Class)(ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: keyPropertyNames
      type: System.String[]
      description: 'The name(s) of the reference key property(s). '
    typeParameters:
    - id: TPrincipalEntity
      description: "\n    The entity type that is the principal in this relationship (the type\n    that has the reference key properties).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(Of TPrincipalEntity)(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(Of TPrincipalEntity)(System.String())
  name.vb: HasPrincipalKey(Of TPrincipalEntity)(String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])
  id: HasForeignKey(System.String,System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: HasForeignKey(String, String[])
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey(String, String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 198
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures the property(s) to use as the foreign key for this relationship.\n</p>\n<p>\n    If the specified property name(s) do not exist on the entity type then a new shadow state\n    property(s) will be added to serve as the foreign key. A shadow state property is one\n    that does not have a corresponding property in the entity class. The current value for the\n    property is stored in the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> rather than being stored in instances\n    of the entity class.\n</p>\n<p>\n    If <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder%602.HasPrincipalKey(System.Type%2cSystem.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> is not specified, then an attempt will be made to\n    match the data type and order of foreign key properties against the primary key of the principal\n    entity type. If they do not match, new shadow state properties that form a unique index will be\n    added to the principal entity type to serve as the reference key.\n</p>\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasForeignKey(string dependentEntityTypeName, params string[] foreignKeyPropertyNames)
    content.vb: Public Overridable Function HasForeignKey(dependentEntityTypeName As String, ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: dependentEntityTypeName
      type: System.String
      description: "\n    The name of entity type that is the dependent in this relationship (the type that has the foreign key\n    properties).\n"
    - id: foreignKeyPropertyNames
      type: System.String[]
      description: "\n    The name(s) of the foreign key property(s).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(String, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(System.String, System.String())
  name.vb: HasForeignKey(String, String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])
  id: HasPrincipalKey(System.String,System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: HasPrincipalKey(String, String[])
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(String, String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasPrincipalKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 222
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures the unique property(s) that this relationship targets. Typically you would only call this\n    method if you want to use a property(s) other than the primary key as the principal property(s). If\n    the specified property(s) is not already a unique constraint (or the primary key) then a new unique\n    constraint\n    will be introduced.\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasPrincipalKey(string principalEntityTypeName, params string[] keyPropertyNames)
    content.vb: Public Overridable Function HasPrincipalKey(principalEntityTypeName As String, ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: principalEntityTypeName
      type: System.String
      description: "\n    The name of entity type that is the principal in this relationship (the type\n    that has the reference key properties).\n"
    - id: keyPropertyNames
      type: System.String[]
      description: 'The name(s) of the reference key property(s). '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(String, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(System.String, System.String())
  name.vb: HasPrincipalKey(String, String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: HasForeignKey<TDependentEntity>(Expression<Func<TDependentEntity, Object>>)
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey<TDependentEntity>(Expression<Func<TDependentEntity, Object>>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasForeignKey<TDependentEntity>(System.Linq.Expressions.Expression<System.Func<TDependentEntity, System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 264
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures the property(s) to use as the foreign key for this relationship.\n</p>\n<p>\n    If <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder%602.HasPrincipalKey(System.Type%2cSystem.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>\n    is not specified, then an attempt will be made to match the data type and order of foreign key\n    properties against the primary key of the principal entity type. If they do not match, new shadow\n    state properties that form a unique index will be\n    added to the principal entity type to serve as the reference key.\n    A shadow state property is one that does not have a corresponding property in the entity class. The\n    current value for the property is stored in the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> rather than being\n    stored in instances of the entity class.\n</p>\n"
  example: []
  syntax:
    content: 'public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasForeignKey<TDependentEntity>(Expression<Func<TDependentEntity, object>> foreignKeyExpression)where TDependentEntity : class'
    content.vb: Public Overridable Function HasForeignKey(Of TDependentEntity As Class)(foreignKeyExpression As Expression(Of Func(Of TDependentEntity, Object))) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: foreignKeyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TDependentEntity},System.Object}}
      description: "\n<p>\n    A lambda expression representing the foreign key property(s) (<code>t =&gt; t.Id1</code>).\n</p>\n<p>\n    If the foreign key is made up of multiple properties then specify an anonymous type including the\n    properties (<code>t =&gt; new { t.Id1, t.Id2 }</code>). The order specified should match the order of\n    corresponding keys in <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder%602.HasPrincipalKey(System.Type%2cSystem.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
    typeParameters:
    - id: TDependentEntity
      description: "\n    The entity type that is the dependent in this relationship. That is, the type\n    that has the foreign key properties.\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(Of TDependentEntity)(Expression(Of Func(Of TDependentEntity, Object)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasForeignKey(Of TDependentEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TDependentEntity, System.Object)))
  name.vb: HasForeignKey(Of TDependentEntity)(Expression(Of Func(Of TDependentEntity, Object)))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: HasPrincipalKey<TPrincipalEntity>(Expression<Func<TPrincipalEntity, Object>>)
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey<TPrincipalEntity>(Expression<Func<TPrincipalEntity, Object>>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.HasPrincipalKey<TPrincipalEntity>(System.Linq.Expressions.Expression<System.Func<TPrincipalEntity, System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasPrincipalKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 295
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures the unique property(s) that this relationship targets. Typically you would only call this\n    method if you want to use a property(s) other than the primary key as the principal property(s). If\n    the specified property(s) is not already a unique constraint (or the primary key) then a new unique\n    constraint will be introduced.\n"
  example: []
  syntax:
    content: 'public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> HasPrincipalKey<TPrincipalEntity>(Expression<Func<TPrincipalEntity, object>> keyExpression)where TPrincipalEntity : class'
    content.vb: Public Overridable Function HasPrincipalKey(Of TPrincipalEntity As Class)(keyExpression As Expression(Of Func(Of TPrincipalEntity, Object))) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: keyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TPrincipalEntity},System.Object}}
      description: "\n<p>\n    A lambda expression representing the reference key property(s) (<code>t =&gt; t.Id</code>).\n</p>\n<p>\n    If the principal key is made up of multiple properties then specify an anonymous type including\n    the properties (<code>t =&gt; new { t.Id1, t.Id2 }</code>).\n</p>\n"
    typeParameters:
    - id: TPrincipalEntity
      description: "\n    The entity type that is the principal in this relationship. That is, the type\n    that has the reference key properties.\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(Of TPrincipalEntity)(Expression(Of Func(Of TPrincipalEntity, Object)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).HasPrincipalKey(Of TPrincipalEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TPrincipalEntity, System.Object)))
  name.vb: HasPrincipalKey(Of TPrincipalEntity)(Expression(Of Func(Of TPrincipalEntity, Object)))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)
  id: IsRequired(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: IsRequired(Boolean)
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.IsRequired(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.IsRequired(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsRequired
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 313
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures whether this is a required relationship (i.e. whether the foreign key property(s) can\n    be assigned null).\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> IsRequired(bool required = true)
    content.vb: Public Overridable Function IsRequired(required As Boolean = True) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: required
      type: System.Boolean
      description: 'A value indicating whether this is a required relationship. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).IsRequired(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).IsRequired(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  id: OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  langs:
  - csharp
  - vb
  name: OnDelete(DeleteBehavior)
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>.OnDelete(DeleteBehavior)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OnDelete
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceReferenceBuilder`.cs
    startLine: 325
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures how a delete operation is applied to dependent entities in the relationship when the\n    principal is deleted or the relationship is severed.\n"
  example: []
  syntax:
    content: public virtual ReferenceReferenceBuilder<TEntity, TRelatedEntity> OnDelete(DeleteBehavior deleteBehavior)
    content.vb: Public Overridable Function OnDelete(deleteBehavior As DeleteBehavior) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
    parameters:
    - id: deleteBehavior
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
      description: 'The action to perform. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).OnDelete(DeleteBehavior)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity).OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: ReferenceReferenceBuilder
  nameWithType: ReferenceReferenceBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IMutableModel>
  nameWithType: IInfrastructure<IMutableModel>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>
  nameWithType.vb: IInfrastructure(Of IMutableModel)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.IMutableModel)
  name.vb: IInfrastructure(Of IMutableModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalRelationshipBuilder>
  nameWithType: IInfrastructure<InternalRelationshipBuilder>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>
  nameWithType.vb: IInfrastructure(Of InternalRelationshipBuilder)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  name.vb: IInfrastructure(Of InternalRelationshipBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: false
  name: Builder
  nameWithType: ReferenceReferenceBuilder.Builder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: false
  name: IInfrastructure<InternalRelationshipBuilder>.Instance
  nameWithType: ReferenceReferenceBuilder.IInfrastructure<InternalRelationshipBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  nameWithType.vb: ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: false
  name: Metadata
  nameWithType: ReferenceReferenceBuilder.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: false
  name: IInfrastructure<IMutableModel>.Instance
  nameWithType: ReferenceReferenceBuilder.IInfrastructure<IMutableModel>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  nameWithType.vb: ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: true
  name: HasForeignKeyBuilder(EntityType, String, IReadOnlyList<String>)
  nameWithType: ReferenceReferenceBuilder.HasForeignKeyBuilder(EntityType, String, IReadOnlyList<String>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList<System.String>)
  nameWithType.vb: ReferenceReferenceBuilder.HasForeignKeyBuilder(EntityType, String, IReadOnlyList(Of String))
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList(Of System.String))
  name.vb: HasForeignKeyBuilder(EntityType, String, IReadOnlyList(Of String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
    name: HasForeignKeyBuilder
    nameWithType: ReferenceReferenceBuilder.HasForeignKeyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
    name: HasForeignKeyBuilder
    nameWithType: ReferenceReferenceBuilder.HasForeignKeyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: true
  name: HasForeignKeyBuilder(EntityType, String, IReadOnlyList<PropertyInfo>)
  nameWithType: ReferenceReferenceBuilder.HasForeignKeyBuilder(EntityType, String, IReadOnlyList<PropertyInfo>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>)
  nameWithType.vb: ReferenceReferenceBuilder.HasForeignKeyBuilder(EntityType, String, IReadOnlyList(Of PropertyInfo))
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo))
  name.vb: HasForeignKeyBuilder(EntityType, String, IReadOnlyList(Of PropertyInfo))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
    name: HasForeignKeyBuilder
    nameWithType: ReferenceReferenceBuilder.HasForeignKeyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
    name: HasForeignKeyBuilder
    nameWithType: ReferenceReferenceBuilder.HasForeignKeyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: true
  name: HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList<String>)
  nameWithType: ReferenceReferenceBuilder.HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList<String>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList<System.String>)
  nameWithType.vb: ReferenceReferenceBuilder.HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList(Of String))
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList(Of System.String))
  name.vb: HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList(Of String))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
    name: HasPrincipalKeyBuilder
    nameWithType: ReferenceReferenceBuilder.HasPrincipalKeyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})
    name: HasPrincipalKeyBuilder
    nameWithType: ReferenceReferenceBuilder.HasPrincipalKeyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: true
  name: HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList<PropertyInfo>)
  nameWithType: ReferenceReferenceBuilder.HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList<PropertyInfo>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>)
  nameWithType.vb: ReferenceReferenceBuilder.HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList(Of PropertyInfo))
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, System.String, System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo))
  name.vb: HasPrincipalKeyBuilder(EntityType, String, IReadOnlyList(Of PropertyInfo))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
    name: HasPrincipalKeyBuilder
    nameWithType: ReferenceReferenceBuilder.HasPrincipalKeyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
    name: HasPrincipalKeyBuilder
    nameWithType: ReferenceReferenceBuilder.HasPrincipalKeyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: true
  name: ResolveEntityType(String)
  nameWithType: ReferenceReferenceBuilder.ResolveEntityType(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
    name: ResolveEntityType
    nameWithType: ReferenceReferenceBuilder.ResolveEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)
    name: ResolveEntityType
    nameWithType: ReferenceReferenceBuilder.ResolveEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  isExternal: true
  name: ResolveEntityType(Type)
  nameWithType: ReferenceReferenceBuilder.ResolveEntityType(Type)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
    name: ResolveEntityType
    nameWithType: ReferenceReferenceBuilder.ResolveEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)
    name: ResolveEntityType
    nameWithType: ReferenceReferenceBuilder.ResolveEntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  name: ForSqliteHasConstraintName(String)
  nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(String)
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  parent: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  name: ForSqliteHasConstraintName<TEntity, TRelatedEntity>(String)
  nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName<TEntity, TRelatedEntity>(String)
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName<TEntity, TRelatedEntity>(System.String)
  nameWithType.vb: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Of TEntity, TRelatedEntity)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Of TEntity, TRelatedEntity)(System.String)
  name.vb: ForSqliteHasConstraintName(Of TEntity, TRelatedEntity)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(System.String)
    name: ForSqliteHasConstraintName<TEntity, TRelatedEntity>
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName<TEntity, TRelatedEntity>
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName<TEntity, TRelatedEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(System.String)
    name: ForSqliteHasConstraintName(Of TEntity, TRelatedEntity)
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Of TEntity, TRelatedEntity)
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Of TEntity, TRelatedEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  name: HasConstraintName(String)
  nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  name: HasConstraintName<TEntity, TRelatedEntity>(String)
  nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>(String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>(System.String)
  nameWithType.vb: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)(System.String)
  name.vb: HasConstraintName(Of TEntity, TRelatedEntity)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(System.String)
    name: HasConstraintName<TEntity, TRelatedEntity>
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(System.String)
    name: HasConstraintName(Of TEntity, TRelatedEntity)
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ReferenceReferenceBuilder<TEntity, TRelatedEntity>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ReferenceReferenceBuilder<TEntity, TRelatedEntity>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ReferenceReferenceBuilder<TEntity, TRelatedEntity>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ReferenceReferenceBuilder<TEntity, TRelatedEntity>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  name: ForSqlServerHasConstraintName(String)
  nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  name: ForSqlServerHasConstraintName<TEntity, TRelatedEntity>(String)
  nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName<TEntity, TRelatedEntity>(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName<TEntity, TRelatedEntity>(System.String)
  nameWithType.vb: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)(System.String)
  name.vb: ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(System.String)
    name: ForSqlServerHasConstraintName<TEntity, TRelatedEntity>
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName<TEntity, TRelatedEntity>
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName<TEntity, TRelatedEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(System.String)
    name: ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  isExternal: true
  name: ForSqliteHasConstraintName(ReferenceReferenceBuilder, String)
  nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(ReferenceReferenceBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqliteReferenceReferenceBuilderExtensions
  nameWithType: SqliteReferenceReferenceBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  isExternal: true
  name: ForSqliteHasConstraintName<TEntity, TReferencedEntity>(ReferenceReferenceBuilder<TEntity, TReferencedEntity>, String)
  nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName<TEntity, TReferencedEntity>(ReferenceReferenceBuilder<TEntity, TReferencedEntity>, String)
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName<TEntity, TReferencedEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TReferencedEntity>, System.String)
  nameWithType.vb: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Of TEntity, TReferencedEntity)(ReferenceReferenceBuilder(Of TEntity, TReferencedEntity), String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Of TEntity, TReferencedEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TReferencedEntity), System.String)
  name.vb: ForSqliteHasConstraintName(Of TEntity, TReferencedEntity)(ReferenceReferenceBuilder(Of TEntity, TReferencedEntity), String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
    name: ForSqliteHasConstraintName<TEntity, TReferencedEntity>
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName<TEntity, TReferencedEntity>
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName<TEntity, TReferencedEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReferencedEntity
    nameWithType: TReferencedEntity
    fullName: TReferencedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
    name: ForSqliteHasConstraintName(Of TEntity, TReferencedEntity)
    nameWithType: SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Of TEntity, TReferencedEntity)
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceReferenceBuilderExtensions.ForSqliteHasConstraintName(Of TEntity, TReferencedEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReferencedEntity
    nameWithType: TReferencedEntity
    fullName: TReferencedEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  isExternal: true
  name: HasConstraintName(ReferenceReferenceBuilder, String)
  nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(ReferenceReferenceBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: RelationalReferenceReferenceBuilderExtensions
  nameWithType: RelationalReferenceReferenceBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  isExternal: true
  name: HasConstraintName<TEntity, TRelatedEntity>(ReferenceReferenceBuilder<TEntity, TRelatedEntity>, String)
  nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>(ReferenceReferenceBuilder<TEntity, TRelatedEntity>, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>, System.String)
  nameWithType.vb: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)(ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), String)
  fullname.vb: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), System.String)
  name.vb: HasConstraintName(Of TEntity, TRelatedEntity)(ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
    name: HasConstraintName<TEntity, TRelatedEntity>
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName<TEntity, TRelatedEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
    name: HasConstraintName(Of TEntity, TRelatedEntity)
    nameWithType: RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Of TEntity, TRelatedEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
  isExternal: true
  name: ForSqlServerHasConstraintName(ReferenceReferenceBuilder, String)
  nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(ReferenceReferenceBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqlServerReferenceReferenceBuilderExtensions
  nameWithType: SqlServerReferenceReferenceBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
  isExternal: true
  name: ForSqlServerHasConstraintName<TEntity, TRelatedEntity>(ReferenceReferenceBuilder<TEntity, TRelatedEntity>, String)
  nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName<TEntity, TRelatedEntity>(ReferenceReferenceBuilder<TEntity, TRelatedEntity>, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName<TEntity, TRelatedEntity>(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>, System.String)
  nameWithType.vb: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)(ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), String)
  fullname.vb: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), System.String)
  name.vb: ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)(ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
    name: ForSqlServerHasConstraintName<TEntity, TRelatedEntity>
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName<TEntity, TRelatedEntity>
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName<TEntity, TRelatedEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)
    name: ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)
    nameWithType: SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceReferenceBuilderExtensions.ForSqlServerHasConstraintName(Of TEntity, TRelatedEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalRelationshipBuilder
  nameWithType: InternalRelationshipBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  nameWithType: ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder<TEntity, TRelatedEntity>
  nameWithType.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  name.vb: ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2
    name: ReferenceReferenceBuilder
    nameWithType: ReferenceReferenceBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRelatedEntity
    nameWithType: TRelatedEntity
    fullName: TRelatedEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: ChangeTracker
  nameWithType: ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: System.Linq.Expressions.Expression{System.Func{{TDependentEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`1,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TDependentEntity, Object>>
  nameWithType: Expression<Func<TDependentEntity, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TDependentEntity, System.Object>>
  nameWithType.vb: Expression(Of Func(Of TDependentEntity, Object))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TDependentEntity, System.Object))
  name.vb: Expression(Of Func(Of TDependentEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDependentEntity
    nameWithType: TDependentEntity
    fullName: TDependentEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDependentEntity
    nameWithType: TDependentEntity
    fullName: TDependentEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.Expressions.Expression{System.Func{{TPrincipalEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TPrincipalEntity, Object>>
  nameWithType: Expression<Func<TPrincipalEntity, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TPrincipalEntity, System.Object>>
  nameWithType.vb: Expression(Of Func(Of TPrincipalEntity, Object))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TPrincipalEntity, System.Object))
  name.vb: Expression(Of Func(Of TPrincipalEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrincipalEntity
    nameWithType: TPrincipalEntity
    fullName: TPrincipalEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrincipalEntity
    nameWithType: TPrincipalEntity
    fullName: TPrincipalEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
