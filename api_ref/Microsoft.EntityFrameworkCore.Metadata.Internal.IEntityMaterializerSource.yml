### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  id: IEntityMaterializerSource
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Int32[])
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueCallExpression(System.Linq.Expressions.Expression,System.Int32)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueExpression(System.Linq.Expressions.Expression,System.Type,System.Int32,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  langs:
  - csharp
  - vb
  name: IEntityMaterializerSource
  nameWithType: IEntityMaterializerSource
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IEntityMaterializerSource
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IEntityMaterializerSource
    content.vb: Public Interface IEntityMaterializerSource
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueExpression(System.Linq.Expressions.Expression,System.Type,System.Int32,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueExpression(System.Linq.Expressions.Expression,System.Type,System.Int32,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: CreateReadValueExpression(System.Linq.Expressions.Expression,System.Type,System.Int32,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  langs:
  - csharp
  - vb
  name: CreateReadValueExpression(Expression, Type, Int32, IProperty)
  nameWithType: IEntityMaterializerSource.CreateReadValueExpression(Expression, Type, Int32, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueExpression(System.Linq.Expressions.Expression, System.Type, System.Int32, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateReadValueExpression
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Expression CreateReadValueExpression(Expression valueBuffer, Type type, int index, IProperty property = null)
    content.vb: Function CreateReadValueExpression(valueBuffer As Expression, type As Type, index As Integer, property As IProperty = Nothing) As Expression
    parameters:
    - id: valueBuffer
      type: System.Linq.Expressions.Expression
    - id: type
      type: System.Type
    - id: index
      type: System.Int32
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: System.Linq.Expressions.Expression
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueCallExpression(System.Linq.Expressions.Expression,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueCallExpression(System.Linq.Expressions.Expression,System.Int32)
  id: CreateReadValueCallExpression(System.Linq.Expressions.Expression,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  langs:
  - csharp
  - vb
  name: CreateReadValueCallExpression(Expression, Int32)
  nameWithType: IEntityMaterializerSource.CreateReadValueCallExpression(Expression, Int32)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueCallExpression(System.Linq.Expressions.Expression, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateReadValueCallExpression
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Expression CreateReadValueCallExpression(Expression valueBuffer, int index)
    content.vb: Function CreateReadValueCallExpression(valueBuffer As Expression, index As Integer) As Expression
    parameters:
    - id: valueBuffer
      type: System.Linq.Expressions.Expression
    - id: index
      type: System.Int32
    return:
      type: System.Linq.Expressions.Expression
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Int32[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Int32[])
  id: CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Int32[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  langs:
  - csharp
  - vb
  name: CreateMaterializeExpression(IEntityType, Expression, Int32[])
  nameWithType: IEntityMaterializerSource.CreateMaterializeExpression(IEntityType, Expression, Int32[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Linq.Expressions.Expression, System.Int32[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateMaterializeExpression
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Expression CreateMaterializeExpression(IEntityType entityType, Expression valueBufferExpression, int[] indexMap = null)
    content.vb: Function CreateMaterializeExpression(entityType As IEntityType, valueBufferExpression As Expression, indexMap As Integer() = Nothing) As Expression
    parameters:
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    - id: valueBufferExpression
      type: System.Linq.Expressions.Expression
    - id: indexMap
      type: System.Int32[]
    return:
      type: System.Linq.Expressions.Expression
  nameWithType.vb: IEntityMaterializerSource.CreateMaterializeExpression(IEntityType, Expression, Int32())
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Linq.Expressions.Expression, System.Int32())
  name.vb: CreateMaterializeExpression(IEntityType, Expression, Int32())
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  id: GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource
  langs:
  - csharp
  - vb
  name: GetMaterializer(IEntityType)
  nameWithType: IEntityMaterializerSource.GetMaterializer(IEntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetMaterializer
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/IEntityMaterializerSource.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Func<ValueBuffer, object> GetMaterializer(IEntityType entityType)
    content.vb: Function GetMaterializer(entityType As IEntityType) As Func(Of ValueBuffer, Object)
    parameters:
    - id: entityType
      type: Microsoft.EntityFrameworkCore.Metadata.IEntityType
    return:
      type: System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IEntityMaterializerSource, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IEntityMaterializerSource, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IEntityMaterializerSource, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IEntityMaterializerSource, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IEntityMaterializerSource, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IEntityMaterializerSource, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IEntityMaterializerSource, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IEntityMaterializerSource, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.IEntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IEntityType
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IEntityType
  nameWithType: IEntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.IEntityType
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object}
  parent: System
  definition: System.Func`2
  name: Func<ValueBuffer, Object>
  nameWithType: Func<ValueBuffer, Object>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object>
  nameWithType.vb: Func(Of ValueBuffer, Object)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Storage.ValueBuffer, System.Object)
  name.vb: Func(Of ValueBuffer, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
    name: ValueBuffer
    nameWithType: ValueBuffer
    fullName: Microsoft.EntityFrameworkCore.Storage.ValueBuffer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
