### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  id: IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IRelationalConnection
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    Represents a connection with a relational database.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: 'public interface IRelationalConnection : IRelationalTransactionManager, IDbContextTransactionManager, IDisposable'
    content.vb: >-
      Public Interface IRelationalConnection
          Inherits IRelationalTransactionManager, IDisposable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  - System.IDisposable.Dispose
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString
  id: ConnectionString
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: IRelationalConnection.ConnectionString
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ConnectionString
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the connection string for the database.\n"
  example: []
  syntax:
    content: string ConnectionString { get; }
    content.vb: ReadOnly Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection
  id: DbConnection
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  langs:
  - csharp
  - vb
  name: DbConnection
  nameWithType: IRelationalConnection.DbConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DbConnection
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the underlying <xref href=\"System.Data.Common.DbConnection\" data-throw-if-not-resolved=\"false\"></xref> used to connect to the database.\n"
  example: []
  syntax:
    content: DbConnection DbConnection { get; }
    content.vb: ReadOnly Property DbConnection As DbConnection
    parameters: []
    return:
      type: System.Data.Common.DbConnection
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout
  id: CommandTimeout
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  langs:
  - csharp
  - vb
  name: CommandTimeout
  nameWithType: IRelationalConnection.CommandTimeout
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CommandTimeout
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets the timeout for executing a command against the database.\n"
  example: []
  syntax:
    content: int ? CommandTimeout { get; set; }
    content.vb: Property CommandTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open
  id: Open
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: IRelationalConnection.Open()
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Open
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Opens the connection to the database.\n"
  example: []
  syntax:
    content: void Open()
    content.vb: Sub Open
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  langs:
  - csharp
  - vb
  name: OpenAsync(CancellationToken)
  nameWithType: IRelationalConnection.OpenAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OpenAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Asynchronously opens the connection to the database.\n"
  example: []
  syntax:
    content: Task OpenAsync(CancellationToken cancellationToken = null)
    content.vb: Function OpenAsync(cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n    A <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> to observe while waiting for the task to complete.\n"
    return:
      type: System.Threading.Tasks.Task
      description: 'A task that represents the asynchronous operation. '
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close
  id: Close
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: IRelationalConnection.Close()
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Close
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Closes the connection to the database.\n"
  example: []
  syntax:
    content: void Close()
    content.vb: Sub Close
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled
  id: IsMultipleActiveResultSetsEnabled
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  langs:
  - csharp
  - vb
  name: IsMultipleActiveResultSetsEnabled
  nameWithType: IRelationalConnection.IsMultipleActiveResultSetsEnabled
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsMultipleActiveResultSetsEnabled
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
    startLine: 60
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets a value indicating whether the multiple active result sets feature is enabled.\n"
  example: []
  syntax:
    content: bool IsMultipleActiveResultSetsEnabled { get; }
    content.vb: ReadOnly Property IsMultipleActiveResultSetsEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor
  id: ActiveCursor
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  langs:
  - csharp
  - vb
  name: ActiveCursor
  nameWithType: IRelationalConnection.ActiveCursor
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ActiveCursor
    path: src/Microsoft.EntityFrameworkCore.Relational/Storage/IRelationalConnection.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n    Gets or sets the active cursor.\n"
  example: []
  syntax:
    content: IValueBufferCursor ActiveCursor { get; set; }
    content.vb: Property ActiveCursor As IValueBufferCursor
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor
  modifiers.csharp:
  - get
  - set
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  isExternal: true
  name: BeginTransaction(IsolationLevel)
  nameWithType: IRelationalTransactionManager.BeginTransaction(IsolationLevel)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: IRelationalTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: IRelationalTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  isExternal: true
  name: BeginTransactionAsync(IsolationLevel, CancellationToken)
  nameWithType: IRelationalTransactionManager.BeginTransactionAsync(IsolationLevel, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IRelationalTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IRelationalTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  parent: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  isExternal: true
  name: UseTransaction(DbTransaction)
  nameWithType: IRelationalTransactionManager.UseTransaction(DbTransaction)
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: IRelationalTransactionManager.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)
    name: UseTransaction
    nameWithType: IRelationalTransactionManager.UseTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbTransaction
    name: DbTransaction
    nameWithType: DbTransaction
    fullName: System.Data.Common.DbTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: BeginTransaction()
  nameWithType: IDbContextTransactionManager.BeginTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbContextTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbContextTransactionManager.BeginTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: true
  name: BeginTransactionAsync(CancellationToken)
  nameWithType: IDbContextTransactionManager.BeginTransactionAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IDbContextTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
    name: BeginTransactionAsync
    nameWithType: IDbContextTransactionManager.BeginTransactionAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: CommitTransaction()
  nameWithType: IDbContextTransactionManager.CommitTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
    name: CommitTransaction
    nameWithType: IDbContextTransactionManager.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
    name: CommitTransaction
    nameWithType: IDbContextTransactionManager.CommitTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: RollbackTransaction()
  nameWithType: IDbContextTransactionManager.RollbackTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
    name: RollbackTransaction
    nameWithType: IDbContextTransactionManager.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
    name: RollbackTransaction
    nameWithType: IDbContextTransactionManager.RollbackTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  isExternal: false
  name: CurrentTransaction
  nameWithType: IDbContextTransactionManager.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IRelationalConnection, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IRelationalConnection, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IRelationalConnection, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IRelationalConnection, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IRelationalConnection, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IRelationalConnection, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IRelationalConnection, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IRelationalConnection, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalTransactionManager
  nameWithType: IRelationalTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransactionManager
  nameWithType: IDbContextTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IValueBufferCursor
  nameWithType: IValueBufferCursor
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
