### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  id: SqlServerBuilderExtensionsTest
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_non_generic
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_non_generic
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_computed_expression
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_default_expression
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_default_value
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_name
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_type
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one_with_FK_specified
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many_with_FK_specified
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one_with_FK_specified
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_identities_for_model
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_identities_for_property
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_index_clustering
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_index_name
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_key_clustering
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_key_name
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized_non_generic
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequence_for_property
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_for_model
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_model
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_property
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_model
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_property
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name_non_generic
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_name
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_name_non_generic
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_model
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_model
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.CreateConventionModelBuilder
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_expression_does_not_modify_explicitly_set_value_generated
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_sql_overrides_default_value_and_computed_column_sql
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_modify_explicitly_set_value_generated
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_set_identity_column
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_overrides_default_sql_and_computed_column_sql
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_sql_does_not_set_identity_column
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_computed_column_sql_overrides_default_value_and_column_default_sql
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_entity_methods_dont_break_out_of_the_generics
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_entity_methods_have_non_generic_overloads
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_property_methods_dont_break_out_of_the_generics
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_property_methods_have_non_generic_overloads
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_dont_break_out_of_the_generics
  - Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_have_non_generic_overloads
  langs:
  - csharp
  - vb
  name: SqlServerBuilderExtensionsTest
  nameWithType: SqlServerBuilderExtensionsTest
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerBuilderExtensionsTest
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: public class SqlServerBuilderExtensionsTest
    content.vb: Public Class SqlServerBuilderExtensionsTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_name
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_name
  id: Can_set_column_name
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_column_name()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_column_name()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_name()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_column_name
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_column_name()
    content.vb: >-
      <Fact>

      Public Sub Can_set_column_name
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_type
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_type
  id: Can_set_column_type
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_column_type()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_column_type()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_type()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_column_type
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_column_type()
    content.vb: >-
      <Fact>

      Public Sub Can_set_column_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_default_expression
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_default_expression
  id: Can_set_column_default_expression
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_column_default_expression()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_column_default_expression()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_default_expression()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_column_default_expression
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_column_default_expression()
    content.vb: >-
      <Fact>

      Public Sub Can_set_column_default_expression
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_expression_does_not_modify_explicitly_set_value_generated
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_expression_does_not_modify_explicitly_set_value_generated
  id: Setting_column_default_expression_does_not_modify_explicitly_set_value_generated
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_column_default_expression_does_not_modify_explicitly_set_value_generated()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_column_default_expression_does_not_modify_explicitly_set_value_generated()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_expression_does_not_modify_explicitly_set_value_generated()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_column_default_expression_does_not_modify_explicitly_set_value_generated
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 82
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_column_default_expression_does_not_modify_explicitly_set_value_generated()
    content.vb: >-
      <Fact>

      Public Sub Setting_column_default_expression_does_not_modify_explicitly_set_value_generated
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_computed_expression
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_computed_expression
  id: Can_set_column_computed_expression
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_column_computed_expression()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_column_computed_expression()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_computed_expression()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_column_computed_expression
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_column_computed_expression()
    content.vb: >-
      <Fact>

      Public Sub Can_set_column_computed_expression
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated
  id: Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 131
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated()
    content.vb: >-
      <Fact>

      Public Sub Setting_column_column_computed_expression_does_not_modify_explicitly_set_value_generated
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_default_value
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_default_value
  id: Can_set_column_default_value
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_column_default_value()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_column_default_value()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_column_default_value()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_column_default_value
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 156
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_column_default_value()
    content.vb: >-
      <Fact>

      Public Sub Can_set_column_default_value
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_modify_explicitly_set_value_generated
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_modify_explicitly_set_value_generated
  id: Setting_column_default_value_does_not_modify_explicitly_set_value_generated
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_column_default_value_does_not_modify_explicitly_set_value_generated()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_modify_explicitly_set_value_generated()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_modify_explicitly_set_value_generated()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_column_default_value_does_not_modify_explicitly_set_value_generated
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 177
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_column_default_value_does_not_modify_explicitly_set_value_generated()
    content.vb: >-
      <Fact>

      Public Sub Setting_column_default_value_does_not_modify_explicitly_set_value_generated
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_overrides_default_sql_and_computed_column_sql
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_overrides_default_sql_and_computed_column_sql
  id: Setting_column_default_value_overrides_default_sql_and_computed_column_sql
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_column_default_value_overrides_default_sql_and_computed_column_sql()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_column_default_value_overrides_default_sql_and_computed_column_sql()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_overrides_default_sql_and_computed_column_sql()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_column_default_value_overrides_default_sql_and_computed_column_sql
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 200
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_column_default_value_overrides_default_sql_and_computed_column_sql()
    content.vb: >-
      <Fact>

      Public Sub Setting_column_default_value_overrides_default_sql_and_computed_column_sql
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_sql_overrides_default_value_and_computed_column_sql
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_sql_overrides_default_value_and_computed_column_sql
  id: Setting_column_default_sql_overrides_default_value_and_computed_column_sql
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_column_default_sql_overrides_default_value_and_computed_column_sql()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_column_default_sql_overrides_default_value_and_computed_column_sql()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_sql_overrides_default_value_and_computed_column_sql()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_column_default_sql_overrides_default_value_and_computed_column_sql
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 219
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_column_default_sql_overrides_default_value_and_computed_column_sql()
    content.vb: >-
      <Fact>

      Public Sub Setting_column_default_sql_overrides_default_value_and_computed_column_sql
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_computed_column_sql_overrides_default_value_and_column_default_sql
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_computed_column_sql_overrides_default_value_and_column_default_sql
  id: Setting_computed_column_sql_overrides_default_value_and_column_default_sql
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_computed_column_sql_overrides_default_value_and_column_default_sql()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_computed_column_sql_overrides_default_value_and_column_default_sql()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_computed_column_sql_overrides_default_value_and_column_default_sql()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_computed_column_sql_overrides_default_value_and_column_default_sql
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 238
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_computed_column_sql_overrides_default_value_and_column_default_sql()
    content.vb: >-
      <Fact>

      Public Sub Setting_computed_column_sql_overrides_default_value_and_column_default_sql
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values
  id: Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 257
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values()
    content.vb: >-
      <Fact>

      Public Sub Setting_SqlServer_default_sql_is_higher_priority_than_relational_default_values
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values
  id: Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 279
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values()
    content.vb: >-
      <Fact>

      Public Sub Setting_SqlServer_default_value_is_higher_priority_than_relational_default_values
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values
  id: Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 301
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values()
    content.vb: >-
      <Fact>

      Public Sub Setting_SqlServer_computed_column_sql_is_higher_priority_than_relational_default_values
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_set_identity_column
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_set_identity_column
  id: Setting_column_default_value_does_not_set_identity_column
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_column_default_value_does_not_set_identity_column()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_set_identity_column()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_does_not_set_identity_column()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_column_default_value_does_not_set_identity_column
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 323
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_column_default_value_does_not_set_identity_column()
    content.vb: >-
      <Fact>

      Public Sub Setting_column_default_value_does_not_set_identity_column
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_sql_does_not_set_identity_column
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_sql_does_not_set_identity_column
  id: Setting_column_default_value_sql_does_not_set_identity_column
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_column_default_value_sql_does_not_set_identity_column()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_column_default_value_sql_does_not_set_identity_column()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_column_default_value_sql_does_not_set_identity_column()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_column_default_value_sql_does_not_set_identity_column
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 340
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_column_default_value_sql_does_not_set_identity_column()
    content.vb: >-
      <Fact>

      Public Sub Setting_column_default_value_sql_does_not_set_identity_column
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values
  id: Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 357
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values()
    content.vb: >-
      <Fact>

      Public Sub Setting_SqlServer_identity_column_is_higher_priority_than_relational_default_values
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_key_name
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_key_name
  id: Can_set_key_name
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_key_name()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_key_name()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_key_name()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_key_name
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 383
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_key_name()
    content.vb: >-
      <Fact>

      Public Sub Can_set_key_name
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many
  id: Can_set_foreign_key_name_for_one_to_many
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_foreign_key_name_for_one_to_many()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_foreign_key_name_for_one_to_many
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 400
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_foreign_key_name_for_one_to_many()
    content.vb: >-
      <Fact>

      Public Sub Can_set_foreign_key_name_for_one_to_many
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many_with_FK_specified
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many_with_FK_specified
  id: Can_set_foreign_key_name_for_one_to_many_with_FK_specified
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_foreign_key_name_for_one_to_many_with_FK_specified()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many_with_FK_specified()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_many_with_FK_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_foreign_key_name_for_one_to_many_with_FK_specified
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 423
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_foreign_key_name_for_one_to_many_with_FK_specified()
    content.vb: >-
      <Fact>

      Public Sub Can_set_foreign_key_name_for_one_to_many_with_FK_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one
  id: Can_set_foreign_key_name_for_many_to_one
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_foreign_key_name_for_many_to_one()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_foreign_key_name_for_many_to_one
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 440
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_foreign_key_name_for_many_to_one()
    content.vb: >-
      <Fact>

      Public Sub Can_set_foreign_key_name_for_many_to_one
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one_with_FK_specified
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one_with_FK_specified
  id: Can_set_foreign_key_name_for_many_to_one_with_FK_specified
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_foreign_key_name_for_many_to_one_with_FK_specified()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one_with_FK_specified()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_many_to_one_with_FK_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_foreign_key_name_for_many_to_one_with_FK_specified
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 463
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_foreign_key_name_for_many_to_one_with_FK_specified()
    content.vb: >-
      <Fact>

      Public Sub Can_set_foreign_key_name_for_many_to_one_with_FK_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one
  id: Can_set_foreign_key_name_for_one_to_one
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_foreign_key_name_for_one_to_one()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_foreign_key_name_for_one_to_one
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 480
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_foreign_key_name_for_one_to_one()
    content.vb: >-
      <Fact>

      Public Sub Can_set_foreign_key_name_for_one_to_one
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one_with_FK_specified
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one_with_FK_specified
  id: Can_set_foreign_key_name_for_one_to_one_with_FK_specified
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_foreign_key_name_for_one_to_one_with_FK_specified()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one_with_FK_specified()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_foreign_key_name_for_one_to_one_with_FK_specified()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_foreign_key_name_for_one_to_one_with_FK_specified
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 504
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_foreign_key_name_for_one_to_one_with_FK_specified()
    content.vb: >-
      <Fact>

      Public Sub Can_set_foreign_key_name_for_one_to_one_with_FK_specified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_index_name
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_index_name
  id: Can_set_index_name
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_index_name()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_index_name()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_index_name()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_index_name
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 521
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_index_name()
    content.vb: >-
      <Fact>

      Public Sub Can_set_index_name
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_name
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_name
  id: Can_set_table_name
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_table_name()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_table_name()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_name()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_table_name
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 538
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_table_name()
    content.vb: >-
      <Fact>

      Public Sub Can_set_table_name
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_name_non_generic
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_name_non_generic
  id: Can_set_table_name_non_generic
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_table_name_non_generic()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_table_name_non_generic()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_name_non_generic()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_table_name_non_generic
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 555
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_table_name_non_generic()
    content.vb: >-
      <Fact>

      Public Sub Can_set_table_name_non_generic
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name
  id: Can_set_table_and_schema_name
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_table_and_schema_name()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_table_and_schema_name
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 572
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_table_and_schema_name()
    content.vb: >-
      <Fact>

      Public Sub Can_set_table_and_schema_name
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name_non_generic
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name_non_generic
  id: Can_set_table_and_schema_name_non_generic
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_table_and_schema_name_non_generic()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name_non_generic()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_table_and_schema_name_non_generic()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_table_and_schema_name_non_generic
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 591
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_table_and_schema_name_non_generic()
    content.vb: >-
      <Fact>

      Public Sub Can_set_table_and_schema_name_non_generic
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized
  id: Can_set_MemoryOptimized
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_MemoryOptimized()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_MemoryOptimized
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 610
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_MemoryOptimized()
    content.vb: >-
      <Fact>

      Public Sub Can_set_MemoryOptimized
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized_non_generic
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized_non_generic
  id: Can_set_MemoryOptimized_non_generic
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_MemoryOptimized_non_generic()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized_non_generic()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_MemoryOptimized_non_generic()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_MemoryOptimized_non_generic
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 630
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_MemoryOptimized_non_generic()
    content.vb: >-
      <Fact>

      Public Sub Can_set_MemoryOptimized_non_generic
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_index_clustering
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_index_clustering
  id: Can_set_index_clustering
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_index_clustering()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_index_clustering()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_index_clustering()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_index_clustering
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 650
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_index_clustering()
    content.vb: >-
      <Fact>

      Public Sub Can_set_index_clustering
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_key_clustering
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_key_clustering
  id: Can_set_key_clustering
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_key_clustering()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_key_clustering()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_key_clustering()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_key_clustering
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 665
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_key_clustering()
    content.vb: >-
      <Fact>

      Public Sub Can_set_key_clustering
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_for_model
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_for_model
  id: Can_set_sequences_for_model
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_sequences_for_model()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_sequences_for_model()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_for_model()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_sequences_for_model
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 680
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_sequences_for_model()
    content.vb: >-
      <Fact>

      Public Sub Can_set_sequences_for_model
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_model
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_model
  id: Can_set_sequences_with_name_for_model
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_sequences_with_name_for_model()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_model()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_model()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_sequences_with_name_for_model
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 698
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_sequences_with_name_for_model()
    content.vb: >-
      <Fact>

      Public Sub Can_set_sequences_with_name_for_model
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_model
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_model
  id: Can_set_sequences_with_schema_and_name_for_model
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_sequences_with_schema_and_name_for_model()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_model()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_model()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_sequences_with_schema_and_name_for_model
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 725
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_sequences_with_schema_and_name_for_model()
    content.vb: >-
      <Fact>

      Public Sub Can_set_sequences_with_schema_and_name_for_model
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_model
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_model
  id: Can_set_use_of_existing_relational_sequence_for_model
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_use_of_existing_relational_sequence_for_model()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_model()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_model()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_use_of_existing_relational_sequence_for_model
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 751
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_use_of_existing_relational_sequence_for_model()
    content.vb: >-
      <Fact>

      Public Sub Can_set_use_of_existing_relational_sequence_for_model
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_model
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_model
  id: Can_set_use_of_existing_SQL_sequence_for_model
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_use_of_existing_SQL_sequence_for_model()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_model()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_model()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_use_of_existing_SQL_sequence_for_model
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 776
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_use_of_existing_SQL_sequence_for_model()
    content.vb: >-
      <Fact>

      Public Sub Can_set_use_of_existing_SQL_sequence_for_model
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_identities_for_model
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_identities_for_model
  id: Can_set_identities_for_model
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_identities_for_model()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_identities_for_model()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_identities_for_model()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_identities_for_model
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 812
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_identities_for_model()
    content.vb: >-
      <Fact>

      Public Sub Can_set_identities_for_model
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values
  id: Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values()
  nameWithType: SqlServerBuilderExtensionsTest.Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 830
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values()
    content.vb: >-
      <Fact>

      Public Sub Setting_SqlServer_identities_for_model_is_lower_priority_than_relational_default_values
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequence_for_property
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequence_for_property
  id: Can_set_sequence_for_property
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_sequence_for_property()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_sequence_for_property()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequence_for_property()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_sequence_for_property
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 865
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_sequence_for_property()
    content.vb: >-
      <Fact>

      Public Sub Can_set_sequence_for_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_property
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_property
  id: Can_set_sequences_with_name_for_property
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_sequences_with_name_for_property()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_property()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_name_for_property()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_sequences_with_name_for_property
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 886
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_sequences_with_name_for_property()
    content.vb: >-
      <Fact>

      Public Sub Can_set_sequences_with_name_for_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_property
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_property
  id: Can_set_sequences_with_schema_and_name_for_property
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_sequences_with_schema_and_name_for_property()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_property()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_sequences_with_schema_and_name_for_property()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_sequences_with_schema_and_name_for_property
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 917
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_sequences_with_schema_and_name_for_property()
    content.vb: >-
      <Fact>

      Public Sub Can_set_sequences_with_schema_and_name_for_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property
  id: Can_set_use_of_existing_relational_sequence_for_property
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_use_of_existing_relational_sequence_for_property()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_use_of_existing_relational_sequence_for_property
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 947
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_use_of_existing_relational_sequence_for_property()
    content.vb: >-
      <Fact>

      Public Sub Can_set_use_of_existing_relational_sequence_for_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure
  id: Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 976
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure()
    content.vb: >-
      <Fact>

      Public Sub Can_set_use_of_existing_relational_sequence_for_property_using_nested_closure
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property
  id: Can_set_use_of_existing_SQL_sequence_for_property
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_use_of_existing_SQL_sequence_for_property()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_use_of_existing_SQL_sequence_for_property
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 999
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_use_of_existing_SQL_sequence_for_property()
    content.vb: >-
      <Fact>

      Public Sub Can_set_use_of_existing_SQL_sequence_for_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure
  id: Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1028
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure()
    content.vb: >-
      <Fact>

      Public Sub Can_set_use_of_existing_SQL_sequence_for_property_using_nested_closure
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_identities_for_property
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_identities_for_property
  id: Can_set_identities_for_property
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_set_identities_for_property()
  nameWithType: SqlServerBuilderExtensionsTest.Can_set_identities_for_property()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_set_identities_for_property()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_set_identities_for_property
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1057
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_set_identities_for_property()
    content.vb: >-
      <Fact>

      Public Sub Can_set_identities_for_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence
  id: Can_create_named_sequence
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_named_sequence()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_named_sequence()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_named_sequence
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1078
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_named_sequence()
    content.vb: >-
      <Fact>

      Public Sub Can_create_named_sequence
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence
  id: Can_create_schema_named_sequence
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_schema_named_sequence()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_schema_named_sequence
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1097
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_schema_named_sequence()
    content.vb: >-
      <Fact>

      Public Sub Can_create_schema_named_sequence
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets
  id: Can_create_named_sequence_with_specific_facets
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_named_sequence_with_specific_facets()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_named_sequence_with_specific_facets
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1116
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_named_sequence_with_specific_facets()
    content.vb: >-
      <Fact>

      Public Sub Can_create_named_sequence_with_specific_facets
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_non_generic
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_non_generic
  id: Can_create_named_sequence_with_specific_facets_non_generic
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_named_sequence_with_specific_facets_non_generic()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_non_generic()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_non_generic()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_named_sequence_with_specific_facets_non_generic
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1134
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_named_sequence_with_specific_facets_non_generic()
    content.vb: >-
      <Fact>

      Public Sub Can_create_named_sequence_with_specific_facets_non_generic
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure
  id: Can_create_named_sequence_with_specific_facets_using_nested_closure
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_named_sequence_with_specific_facets_using_nested_closure()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_named_sequence_with_specific_facets_using_nested_closure
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1152
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_named_sequence_with_specific_facets_using_nested_closure()
    content.vb: >-
      <Fact>

      Public Sub Can_create_named_sequence_with_specific_facets_using_nested_closure
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic
  id: Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1172
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic()
    content.vb: >-
      <Fact>

      Public Sub Can_create_named_sequence_with_specific_facets_using_nested_closure_non_generic
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets
  id: Can_create_schema_named_sequence_with_specific_facets
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_schema_named_sequence_with_specific_facets()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_schema_named_sequence_with_specific_facets
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1203
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_schema_named_sequence_with_specific_facets()
    content.vb: >-
      <Fact>

      Public Sub Can_create_schema_named_sequence_with_specific_facets
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_non_generic
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_non_generic
  id: Can_create_schema_named_sequence_with_specific_facets_non_generic
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_schema_named_sequence_with_specific_facets_non_generic()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_non_generic()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_non_generic()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_schema_named_sequence_with_specific_facets_non_generic
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1221
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_schema_named_sequence_with_specific_facets_non_generic()
    content.vb: >-
      <Fact>

      Public Sub Can_create_schema_named_sequence_with_specific_facets_non_generic
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure
  id: Can_create_schema_named_sequence_with_specific_facets_using_nested_closure
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_schema_named_sequence_with_specific_facets_using_nested_closure()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_schema_named_sequence_with_specific_facets_using_nested_closure
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1239
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_schema_named_sequence_with_specific_facets_using_nested_closure()
    content.vb: >-
      <Fact>

      Public Sub Can_create_schema_named_sequence_with_specific_facets_using_nested_closure
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic
  id: Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic()
  nameWithType: SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1253
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic()
    content.vb: >-
      <Fact>

      Public Sub Can_create_schema_named_sequence_with_specific_facets_using_nested_closure_non_generic
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_entity_methods_dont_break_out_of_the_generics
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_entity_methods_dont_break_out_of_the_generics
  id: SqlServer_entity_methods_dont_break_out_of_the_generics
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: SqlServer_entity_methods_dont_break_out_of_the_generics()
  nameWithType: SqlServerBuilderExtensionsTest.SqlServer_entity_methods_dont_break_out_of_the_generics()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_entity_methods_dont_break_out_of_the_generics()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServer_entity_methods_dont_break_out_of_the_generics
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1267
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void SqlServer_entity_methods_dont_break_out_of_the_generics()
    content.vb: >-
      <Fact>

      Public Sub SqlServer_entity_methods_dont_break_out_of_the_generics
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_entity_methods_have_non_generic_overloads
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_entity_methods_have_non_generic_overloads
  id: SqlServer_entity_methods_have_non_generic_overloads
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: SqlServer_entity_methods_have_non_generic_overloads()
  nameWithType: SqlServerBuilderExtensionsTest.SqlServer_entity_methods_have_non_generic_overloads()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_entity_methods_have_non_generic_overloads()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServer_entity_methods_have_non_generic_overloads
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1283
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void SqlServer_entity_methods_have_non_generic_overloads()
    content.vb: >-
      <Fact>

      Public Sub SqlServer_entity_methods_have_non_generic_overloads
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_property_methods_dont_break_out_of_the_generics
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_property_methods_dont_break_out_of_the_generics
  id: SqlServer_property_methods_dont_break_out_of_the_generics
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: SqlServer_property_methods_dont_break_out_of_the_generics()
  nameWithType: SqlServerBuilderExtensionsTest.SqlServer_property_methods_dont_break_out_of_the_generics()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_property_methods_dont_break_out_of_the_generics()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServer_property_methods_dont_break_out_of_the_generics
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1297
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void SqlServer_property_methods_dont_break_out_of_the_generics()
    content.vb: >-
      <Fact>

      Public Sub SqlServer_property_methods_dont_break_out_of_the_generics
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_property_methods_have_non_generic_overloads
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_property_methods_have_non_generic_overloads
  id: SqlServer_property_methods_have_non_generic_overloads
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: SqlServer_property_methods_have_non_generic_overloads()
  nameWithType: SqlServerBuilderExtensionsTest.SqlServer_property_methods_have_non_generic_overloads()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_property_methods_have_non_generic_overloads()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServer_property_methods_have_non_generic_overloads
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1345
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void SqlServer_property_methods_have_non_generic_overloads()
    content.vb: >-
      <Fact>

      Public Sub SqlServer_property_methods_have_non_generic_overloads
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_dont_break_out_of_the_generics
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_dont_break_out_of_the_generics
  id: SqlServer_relationship_methods_dont_break_out_of_the_generics
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: SqlServer_relationship_methods_dont_break_out_of_the_generics()
  nameWithType: SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_dont_break_out_of_the_generics()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_dont_break_out_of_the_generics()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServer_relationship_methods_dont_break_out_of_the_generics
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1421
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void SqlServer_relationship_methods_dont_break_out_of_the_generics()
    content.vb: >-
      <Fact>

      Public Sub SqlServer_relationship_methods_dont_break_out_of_the_generics
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_have_non_generic_overloads
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_have_non_generic_overloads
  id: SqlServer_relationship_methods_have_non_generic_overloads
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: SqlServer_relationship_methods_have_non_generic_overloads()
  nameWithType: SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_have_non_generic_overloads()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.SqlServer_relationship_methods_have_non_generic_overloads()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServer_relationship_methods_have_non_generic_overloads
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1447
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: >-
      [Fact]

      public void SqlServer_relationship_methods_have_non_generic_overloads()
    content.vb: >-
      <Fact>

      Public Sub SqlServer_relationship_methods_have_non_generic_overloads
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.CreateConventionModelBuilder
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.CreateConventionModelBuilder
  id: CreateConventionModelBuilder
  parent: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest
  langs:
  - csharp
  - vb
  name: CreateConventionModelBuilder()
  nameWithType: SqlServerBuilderExtensionsTest.CreateConventionModelBuilder()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata.SqlServerBuilderExtensionsTest.CreateConventionModelBuilder()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateConventionModelBuilder
    path: test/Microsoft.EntityFrameworkCore.SqlServer.Tests/Metadata/SqlServerBuilderExtensionsTest.cs
    startLine: 1490
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Tests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  syntax:
    content: protected virtual ModelBuilder CreateConventionModelBuilder()
    content.vb: Protected Overridable Function CreateConventionModelBuilder As ModelBuilder
    return:
      type: Microsoft.EntityFrameworkCore.ModelBuilder
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
  fullName: Microsoft.EntityFrameworkCore.SqlServer.Tests.Metadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
