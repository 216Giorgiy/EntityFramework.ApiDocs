### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  id: PropertyListComparer
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Compare(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Equals(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.GetHashCode(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Instance
  langs:
  - csharp
  - vb
  name: PropertyListComparer
  nameWithType: PropertyListComparer
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: PropertyListComparer
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class PropertyListComparer : IComparer<IReadOnlyList<IProperty>>, IEqualityComparer<IReadOnlyList<IProperty>>'
    content.vb: >-
      Public Class PropertyListComparer
          Implements IComparer(Of IReadOnlyList(Of IProperty)), IEqualityComparer(Of IReadOnlyList(Of IProperty))
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}
  - System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Instance
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Instance
  id: Instance
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: PropertyListComparer.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Instance
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Instance
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static readonly PropertyListComparer Instance
    content.vb: Public Shared ReadOnly Instance As PropertyListComparer
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Compare(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Compare(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  id: Compare(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  langs:
  - csharp
  - vb
  name: Compare(IReadOnlyList<IProperty>, IReadOnlyList<IProperty>)
  nameWithType: PropertyListComparer.Compare(IReadOnlyList<IProperty>, IReadOnlyList<IProperty>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Compare(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Compare
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public int Compare(IReadOnlyList<IProperty> x, IReadOnlyList<IProperty> y)
    content.vb: Public Function Compare(x As IReadOnlyList(Of IProperty), y As IReadOnlyList(Of IProperty)) As Integer
    parameters:
    - id: x
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    - id: y
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}.Compare(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  nameWithType.vb: PropertyListComparer.Compare(IReadOnlyList(Of IProperty), IReadOnlyList(Of IProperty))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Compare(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty))
  name.vb: Compare(IReadOnlyList(Of IProperty), IReadOnlyList(Of IProperty))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Equals(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Equals(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  id: Equals(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  langs:
  - csharp
  - vb
  name: Equals(IReadOnlyList<IProperty>, IReadOnlyList<IProperty>)
  nameWithType: PropertyListComparer.Equals(IReadOnlyList<IProperty>, IReadOnlyList<IProperty>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Equals(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Equals
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public bool Equals(IReadOnlyList<IProperty> x, IReadOnlyList<IProperty> y)
    content.vb: Public Function Equals(x As IReadOnlyList(Of IProperty), y As IReadOnlyList(Of IProperty)) As Boolean
    parameters:
    - id: x
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    - id: y
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}.Equals(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  nameWithType.vb: PropertyListComparer.Equals(IReadOnlyList(Of IProperty), IReadOnlyList(Of IProperty))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Equals(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty))
  name.vb: Equals(IReadOnlyList(Of IProperty), IReadOnlyList(Of IProperty))
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.GetHashCode(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.GetHashCode(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  id: GetHashCode(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  langs:
  - csharp
  - vb
  name: GetHashCode(IReadOnlyList<IProperty>)
  nameWithType: PropertyListComparer.GetHashCode(IReadOnlyList<IProperty>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.GetHashCode(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetHashCode
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyListComparer.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public int GetHashCode(IReadOnlyList<IProperty> obj)
    content.vb: Public Function GetHashCode(obj As IReadOnlyList(Of IProperty)) As Integer
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}.GetHashCode(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  nameWithType.vb: PropertyListComparer.GetHashCode(IReadOnlyList(Of IProperty))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.GetHashCode(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty))
  name.vb: GetHashCode(IReadOnlyList(Of IProperty))
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}
  commentId: T:System.Collections.Generic.IComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<IReadOnlyList<IProperty>>
  nameWithType: IComparer<IReadOnlyList<IProperty>>
  fullName: System.Collections.Generic.IComparer<System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>>
  nameWithType.vb: IComparer(Of IReadOnlyList(Of IProperty))
  fullname.vb: System.Collections.Generic.IComparer(Of System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty))
  name.vb: IComparer(Of IReadOnlyList(Of IProperty))
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}
  commentId: T:System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<IReadOnlyList<IProperty>>
  nameWithType: IEqualityComparer<IReadOnlyList<IProperty>>
  fullName: System.Collections.Generic.IEqualityComparer<System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>>
  nameWithType.vb: IEqualityComparer(Of IReadOnlyList(Of IProperty))
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty))
  name.vb: IEqualityComparer(Of IReadOnlyList(Of IProperty))
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<PropertyListComparer, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<PropertyListComparer, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of PropertyListComparer, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of PropertyListComparer, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<PropertyListComparer, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<PropertyListComparer, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of PropertyListComparer, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of PropertyListComparer, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullname.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: PropertyListComparer
  nameWithType: PropertyListComparer
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer
- uid: System.Collections.Generic.IComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}.Compare(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  commentId: M:System.Collections.Generic.IComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}.Compare(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  parent: System.Collections.Generic.IComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(IReadOnlyList<IProperty>, IReadOnlyList<IProperty>)
  nameWithType: IComparer<IReadOnlyList<IProperty>>.Compare(IReadOnlyList<IProperty>, IReadOnlyList<IProperty>)
  fullName: System.Collections.Generic.IComparer<System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>>.Compare(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>)
  nameWithType.vb: IComparer(Of IReadOnlyList(Of IProperty)).Compare(IReadOnlyList(Of IProperty), IReadOnlyList(Of IProperty))
  fullname.vb: System.Collections.Generic.IComparer(Of System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)).Compare(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty))
  name.vb: Compare(IReadOnlyList(Of IProperty), IReadOnlyList(Of IProperty))
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<IReadOnlyList<IProperty>>.Compare
    fullName: System.Collections.Generic.IComparer<System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of IReadOnlyList(Of IProperty)).Compare
    fullName: System.Collections.Generic.IComparer(Of System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IProperty>
  nameWithType: IReadOnlyList<IProperty>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>
  nameWithType.vb: IReadOnlyList(Of IProperty)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)
  name.vb: IReadOnlyList(Of IProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullname.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}.Equals(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  commentId: M:System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}.Equals(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  parent: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(IReadOnlyList<IProperty>, IReadOnlyList<IProperty>)
  nameWithType: IEqualityComparer<IReadOnlyList<IProperty>>.Equals(IReadOnlyList<IProperty>, IReadOnlyList<IProperty>)
  fullName: System.Collections.Generic.IEqualityComparer<System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>>.Equals(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>)
  nameWithType.vb: IEqualityComparer(Of IReadOnlyList(Of IProperty)).Equals(IReadOnlyList(Of IProperty), IReadOnlyList(Of IProperty))
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)).Equals(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty))
  name.vb: Equals(IReadOnlyList(Of IProperty), IReadOnlyList(Of IProperty))
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<IReadOnlyList<IProperty>>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of IReadOnlyList(Of IProperty)).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}.GetHashCode(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  commentId: M:System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}.GetHashCode(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})
  parent: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty}}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(IReadOnlyList<IProperty>)
  nameWithType: IEqualityComparer<IReadOnlyList<IProperty>>.GetHashCode(IReadOnlyList<IProperty>)
  fullName: System.Collections.Generic.IEqualityComparer<System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>>.GetHashCode(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>)
  nameWithType.vb: IEqualityComparer(Of IReadOnlyList(Of IProperty)).GetHashCode(IReadOnlyList(Of IProperty))
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)).GetHashCode(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty))
  name.vb: GetHashCode(IReadOnlyList(Of IProperty))
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<IReadOnlyList<IProperty>>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.IProperty>>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of IReadOnlyList(Of IProperty)).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.IProperty)).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
    name: IProperty
    nameWithType: IProperty
    fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
