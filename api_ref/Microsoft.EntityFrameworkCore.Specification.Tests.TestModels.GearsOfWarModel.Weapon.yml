### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  id: Weapon
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.AmmunitionType
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Id
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.IsAutomatic
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Name
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Owner
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.OwnerFullName
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.SynergyWith
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.SynergyWithId
  langs:
  - csharp
  - vb
  name: Weapon
  nameWithType: Weapon
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Weapon
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
    startLine: 5
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public class Weapon
    content.vb: Public Class Weapon
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Id
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Id
  id: Id
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Weapon.Id
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Id
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
    startLine: 8
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Name
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Name
  id: Name
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Weapon.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Name
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.AmmunitionType
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.AmmunitionType
  id: AmmunitionType
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  langs:
  - csharp
  - vb
  name: AmmunitionType
  nameWithType: Weapon.AmmunitionType
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.AmmunitionType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AmmunitionType
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public AmmunitionType? AmmunitionType { get; set; }
    content.vb: Public Property AmmunitionType As AmmunitionType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.AmmunitionType}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.IsAutomatic
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.IsAutomatic
  id: IsAutomatic
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  langs:
  - csharp
  - vb
  name: IsAutomatic
  nameWithType: Weapon.IsAutomatic
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.IsAutomatic
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsAutomatic
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public bool IsAutomatic { get; set; }
    content.vb: Public Property IsAutomatic As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.SynergyWithId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.SynergyWithId
  id: SynergyWithId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  langs:
  - csharp
  - vb
  name: SynergyWithId
  nameWithType: Weapon.SynergyWithId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.SynergyWithId
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SynergyWithId
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public int ? SynergyWithId { get; set; }
    content.vb: Public Property SynergyWithId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.SynergyWith
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.SynergyWith
  id: SynergyWith
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  langs:
  - csharp
  - vb
  name: SynergyWith
  nameWithType: Weapon.SynergyWith
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.SynergyWith
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SynergyWith
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public virtual Weapon SynergyWith { get; set; }
    content.vb: Public Overridable Property SynergyWith As Weapon
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.OwnerFullName
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.OwnerFullName
  id: OwnerFullName
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  langs:
  - csharp
  - vb
  name: OwnerFullName
  nameWithType: Weapon.OwnerFullName
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.OwnerFullName
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OwnerFullName
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public string OwnerFullName { get; set; }
    content.vb: Public Property OwnerFullName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Owner
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Owner
  id: Owner
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: Weapon.Owner
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon.Owner
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Owner
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/GearsOfWarModel/Weapon.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  syntax:
    content: public Gear Owner { get; set; }
    content.vb: Public Property Owner As Gear
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.AmmunitionType}
  commentId: T:System.Nullable{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.AmmunitionType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AmmunitionType>
  nameWithType: Nullable<AmmunitionType>
  fullName: System.Nullable<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.AmmunitionType>
  nameWithType.vb: Nullable(Of AmmunitionType)
  fullname.vb: System.Nullable(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.AmmunitionType)
  name.vb: Nullable(Of AmmunitionType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.AmmunitionType
    name: AmmunitionType
    nameWithType: AmmunitionType
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.AmmunitionType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.AmmunitionType
    name: AmmunitionType
    nameWithType: AmmunitionType
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.AmmunitionType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  isExternal: false
  name: Weapon
  nameWithType: Weapon
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Weapon
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel
  isExternal: false
  name: Gear
  nameWithType: Gear
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.GearsOfWarModel.Gear
