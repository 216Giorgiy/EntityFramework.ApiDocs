### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  id: ILinqOperatorProvider
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.All
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Any
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Cast
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Concat
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Contains
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Count
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmpty
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmptyArg
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Distinct
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Except
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.First
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.FirstOrDefault
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GetAggregateMethod(System.String,System.Type)
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupBy
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupJoin
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.InterceptExceptions
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Intersect
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Join
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Last
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LastOrDefault
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LongCount
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.MakeSequenceType(System.Type)
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OfType
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OrderBy
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Select
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SelectMany
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Single
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SingleOrDefault
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Skip
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Take
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ThenBy
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToEnumerable
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToOrdered
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToQueryable
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToSequence
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackEntities
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackGroupedEntities
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Union
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Where
  langs:
  - csharp
  - vb
  name: ILinqOperatorProvider
  nameWithType: ILinqOperatorProvider
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ILinqOperatorProvider
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface ILinqOperatorProvider
    content.vb: Public Interface ILinqOperatorProvider
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SelectMany
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SelectMany
  id: SelectMany
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: SelectMany
  nameWithType: ILinqOperatorProvider.SelectMany
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SelectMany
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SelectMany
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo SelectMany { get; }
    content.vb: ReadOnly Property SelectMany As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Join
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Join
  id: Join
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Join
  nameWithType: ILinqOperatorProvider.Join
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Join
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Join
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Join { get; }
    content.vb: ReadOnly Property Join As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupJoin
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupJoin
  id: GroupJoin
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: GroupJoin
  nameWithType: ILinqOperatorProvider.GroupJoin
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupJoin
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupJoin
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo GroupJoin { get; }
    content.vb: ReadOnly Property GroupJoin As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Select
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Select
  id: Select
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Select
  nameWithType: ILinqOperatorProvider.Select
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Select
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Select
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Select { get; }
    content.vb: ReadOnly Property Select As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OrderBy
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OrderBy
  id: OrderBy
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: OrderBy
  nameWithType: ILinqOperatorProvider.OrderBy
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OrderBy
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderBy
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo OrderBy { get; }
    content.vb: ReadOnly Property OrderBy As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ThenBy
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ThenBy
  id: ThenBy
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: ThenBy
  nameWithType: ILinqOperatorProvider.ThenBy
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ThenBy
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ThenBy
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo ThenBy { get; }
    content.vb: ReadOnly Property ThenBy As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Where
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Where
  id: Where
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Where
  nameWithType: ILinqOperatorProvider.Where
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Where
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Where
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Where { get; }
    content.vb: ReadOnly Property Where As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Any
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Any
  id: Any
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Any
  nameWithType: ILinqOperatorProvider.Any
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Any
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Any
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Any { get; }
    content.vb: ReadOnly Property Any As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.All
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.All
  id: All
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: All
  nameWithType: ILinqOperatorProvider.All
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.All
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: All
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 67
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo All { get; }
    content.vb: ReadOnly Property All As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Cast
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Cast
  id: Cast
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Cast
  nameWithType: ILinqOperatorProvider.Cast
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Cast
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Cast
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 73
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Cast { get; }
    content.vb: ReadOnly Property Cast As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Concat
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Concat
  id: Concat
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Concat
  nameWithType: ILinqOperatorProvider.Concat
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Concat
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Concat
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 79
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Concat { get; }
    content.vb: ReadOnly Property Concat As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Count
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Count
  id: Count
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ILinqOperatorProvider.Count
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Count
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Count { get; }
    content.vb: ReadOnly Property Count As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Contains
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Contains
  id: Contains
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: ILinqOperatorProvider.Contains
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Contains
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Contains
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 91
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Contains { get; }
    content.vb: ReadOnly Property Contains As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmpty
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmpty
  id: DefaultIfEmpty
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: DefaultIfEmpty
  nameWithType: ILinqOperatorProvider.DefaultIfEmpty
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmpty
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DefaultIfEmpty
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 97
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo DefaultIfEmpty { get; }
    content.vb: ReadOnly Property DefaultIfEmpty As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmptyArg
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmptyArg
  id: DefaultIfEmptyArg
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: DefaultIfEmptyArg
  nameWithType: ILinqOperatorProvider.DefaultIfEmptyArg
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmptyArg
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DefaultIfEmptyArg
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo DefaultIfEmptyArg { get; }
    content.vb: ReadOnly Property DefaultIfEmptyArg As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Distinct
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Distinct
  id: Distinct
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Distinct
  nameWithType: ILinqOperatorProvider.Distinct
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Distinct
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Distinct
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 109
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Distinct { get; }
    content.vb: ReadOnly Property Distinct As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Except
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Except
  id: Except
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Except
  nameWithType: ILinqOperatorProvider.Except
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Except
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Except
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Except { get; }
    content.vb: ReadOnly Property Except As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.First
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.First
  id: First
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: First
  nameWithType: ILinqOperatorProvider.First
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.First
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: First
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 121
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo First { get; }
    content.vb: ReadOnly Property First As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.FirstOrDefault
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.FirstOrDefault
  id: FirstOrDefault
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: FirstOrDefault
  nameWithType: ILinqOperatorProvider.FirstOrDefault
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.FirstOrDefault
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FirstOrDefault
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 127
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo FirstOrDefault { get; }
    content.vb: ReadOnly Property FirstOrDefault As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupBy
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupBy
  id: GroupBy
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: GroupBy
  nameWithType: ILinqOperatorProvider.GroupBy
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupBy
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GroupBy
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 133
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo GroupBy { get; }
    content.vb: ReadOnly Property GroupBy As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Intersect
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Intersect
  id: Intersect
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Intersect
  nameWithType: ILinqOperatorProvider.Intersect
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Intersect
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Intersect
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 139
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Intersect { get; }
    content.vb: ReadOnly Property Intersect As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Last
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Last
  id: Last
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Last
  nameWithType: ILinqOperatorProvider.Last
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Last
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Last
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 145
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Last { get; }
    content.vb: ReadOnly Property Last As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LastOrDefault
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LastOrDefault
  id: LastOrDefault
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: LastOrDefault
  nameWithType: ILinqOperatorProvider.LastOrDefault
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LastOrDefault
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LastOrDefault
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 151
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo LastOrDefault { get; }
    content.vb: ReadOnly Property LastOrDefault As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LongCount
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LongCount
  id: LongCount
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: LongCount
  nameWithType: ILinqOperatorProvider.LongCount
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LongCount
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: LongCount
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 157
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo LongCount { get; }
    content.vb: ReadOnly Property LongCount As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Single
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Single
  id: Single
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Single
  nameWithType: ILinqOperatorProvider.Single
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Single
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Single
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 163
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Single { get; }
    content.vb: ReadOnly Property Single As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SingleOrDefault
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SingleOrDefault
  id: SingleOrDefault
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: SingleOrDefault
  nameWithType: ILinqOperatorProvider.SingleOrDefault
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SingleOrDefault
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SingleOrDefault
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 169
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo SingleOrDefault { get; }
    content.vb: ReadOnly Property SingleOrDefault As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Skip
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Skip
  id: Skip
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Skip
  nameWithType: ILinqOperatorProvider.Skip
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Skip
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Skip
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 175
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Skip { get; }
    content.vb: ReadOnly Property Skip As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Take
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Take
  id: Take
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Take
  nameWithType: ILinqOperatorProvider.Take
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Take
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Take
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 181
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Take { get; }
    content.vb: ReadOnly Property Take As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.InterceptExceptions
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.InterceptExceptions
  id: InterceptExceptions
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: InterceptExceptions
  nameWithType: ILinqOperatorProvider.InterceptExceptions
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.InterceptExceptions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: InterceptExceptions
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 187
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo InterceptExceptions { get; }
    content.vb: ReadOnly Property InterceptExceptions As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OfType
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OfType
  id: OfType
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: OfType
  nameWithType: ILinqOperatorProvider.OfType
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OfType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OfType
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 193
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo OfType { get; }
    content.vb: ReadOnly Property OfType As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToSequence
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToSequence
  id: ToSequence
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: ToSequence
  nameWithType: ILinqOperatorProvider.ToSequence
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToSequence
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ToSequence
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 199
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo ToSequence { get; }
    content.vb: ReadOnly Property ToSequence As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToOrdered
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToOrdered
  id: ToOrdered
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: ToOrdered
  nameWithType: ILinqOperatorProvider.ToOrdered
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToOrdered
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ToOrdered
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 205
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo ToOrdered { get; }
    content.vb: ReadOnly Property ToOrdered As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToEnumerable
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToEnumerable
  id: ToEnumerable
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: ToEnumerable
  nameWithType: ILinqOperatorProvider.ToEnumerable
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToEnumerable
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ToEnumerable
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 211
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo ToEnumerable { get; }
    content.vb: ReadOnly Property ToEnumerable As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToQueryable
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToQueryable
  id: ToQueryable
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: ToQueryable
  nameWithType: ILinqOperatorProvider.ToQueryable
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToQueryable
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ToQueryable
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 217
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo ToQueryable { get; }
    content.vb: ReadOnly Property ToQueryable As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackEntities
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackEntities
  id: TrackEntities
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: TrackEntities
  nameWithType: ILinqOperatorProvider.TrackEntities
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackEntities
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TrackEntities
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 223
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo TrackEntities { get; }
    content.vb: ReadOnly Property TrackEntities As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackGroupedEntities
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackGroupedEntities
  id: TrackGroupedEntities
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: TrackGroupedEntities
  nameWithType: ILinqOperatorProvider.TrackGroupedEntities
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackGroupedEntities
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TrackGroupedEntities
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 229
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo TrackGroupedEntities { get; }
    content.vb: ReadOnly Property TrackGroupedEntities As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Union
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Union
  id: Union
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: Union
  nameWithType: ILinqOperatorProvider.Union
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Union
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Union
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 235
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo Union { get; }
    content.vb: ReadOnly Property Union As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GetAggregateMethod(System.String,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GetAggregateMethod(System.String,System.Type)
  id: GetAggregateMethod(System.String,System.Type)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: GetAggregateMethod(String, Type)
  nameWithType: ILinqOperatorProvider.GetAggregateMethod(String, Type)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GetAggregateMethod(System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetAggregateMethod
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 241
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: MethodInfo GetAggregateMethod(string methodName, Type elementType)
    content.vb: Function GetAggregateMethod(methodName As String, elementType As Type) As MethodInfo
    parameters:
    - id: methodName
      type: System.String
    - id: elementType
      type: System.Type
    return:
      type: System.Reflection.MethodInfo
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.MakeSequenceType(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.MakeSequenceType(System.Type)
  id: MakeSequenceType(System.Type)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider
  langs:
  - csharp
  - vb
  name: MakeSequenceType(Type)
  nameWithType: ILinqOperatorProvider.MakeSequenceType(Type)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.MakeSequenceType(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MakeSequenceType
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ILinqOperatorProvider.cs
    startLine: 247
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Type MakeSequenceType(Type elementType)
    content.vb: Function MakeSequenceType(elementType As Type) As Type
    parameters:
    - id: elementType
      type: System.Type
    return:
      type: System.Type
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ILinqOperatorProvider, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ILinqOperatorProvider, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ILinqOperatorProvider, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ILinqOperatorProvider, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ILinqOperatorProvider, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ILinqOperatorProvider, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ILinqOperatorProvider, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ILinqOperatorProvider, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
