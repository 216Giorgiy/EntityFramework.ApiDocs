### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory
  id: ShaperCommandContextFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory)
  - Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  langs:
  - csharp
  - vb
  name: ShaperCommandContextFactory
  nameWithType: ShaperCommandContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/ShaperCommandContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ShaperCommandContextFactory
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/ShaperCommandContextFactory.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ShaperCommandContextFactory : IShaperCommandContextFactory'
    content.vb: >-
      Public Class ShaperCommandContextFactory
          Implements IShaperCommandContextFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory
  langs:
  - csharp
  - vb
  name: ShaperCommandContextFactory(IRelationalValueBufferFactoryFactory)
  nameWithType: ShaperCommandContextFactory.ShaperCommandContextFactory(IRelationalValueBufferFactoryFactory)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.ShaperCommandContextFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/ShaperCommandContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/ShaperCommandContextFactory.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ShaperCommandContextFactory(IRelationalValueBufferFactoryFactory valueBufferFactoryFactory)
    content.vb: Public Sub New(valueBufferFactoryFactory As IRelationalValueBufferFactoryFactory)
    parameters:
    - id: valueBufferFactoryFactory
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  id: Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory
  langs:
  - csharp
  - vb
  name: Create(Func<IQuerySqlGenerator>)
  nameWithType: ShaperCommandContextFactory.Create(Func<IQuerySqlGenerator>)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create(System.Func<Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/ShaperCommandContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Internal/ShaperCommandContextFactory.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ShaperCommandContext Create(Func<IQuerySqlGenerator> sqlGeneratorFunc)
    content.vb: Public Overridable Function Create(sqlGeneratorFunc As Func(Of IQuerySqlGenerator)) As ShaperCommandContext
    parameters:
    - id: sqlGeneratorFunc
      type: System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator}
    return:
      type: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create*
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  nameWithType.vb: ShaperCommandContextFactory.Create(Func(Of IQuerySqlGenerator))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create(System.Func(Of Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator))
  name.vb: Create(Func(Of IQuerySqlGenerator))
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IShaperCommandContextFactory
  nameWithType: IShaperCommandContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.#ctor
  isExternal: false
  name: ShaperCommandContextFactory
  nameWithType: ShaperCommandContextFactory.ShaperCommandContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.ShaperCommandContextFactory
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalValueBufferFactoryFactory
  nameWithType: IRelationalValueBufferFactoryFactory
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create
  isExternal: false
  name: Create
  nameWithType: ShaperCommandContextFactory.Create
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory
  isExternal: true
  name: Create(Func<IQuerySqlGenerator>)
  nameWithType: IShaperCommandContextFactory.Create(Func<IQuerySqlGenerator>)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func<Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator>)
  nameWithType.vb: IShaperCommandContextFactory.Create(Func(Of IQuerySqlGenerator))
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func(Of Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator))
  name.vb: Create(Func(Of IQuerySqlGenerator))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
    name: Create
    nameWithType: IShaperCommandContextFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
    name: IQuerySqlGenerator
    nameWithType: IQuerySqlGenerator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})
    name: Create
    nameWithType: IShaperCommandContextFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
    name: IQuerySqlGenerator
    nameWithType: IQuerySqlGenerator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator}
  parent: System
  definition: System.Func`1
  name: Func<IQuerySqlGenerator>
  nameWithType: Func<IQuerySqlGenerator>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator>
  nameWithType.vb: Func(Of IQuerySqlGenerator)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator)
  name.vb: Func(Of IQuerySqlGenerator)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
    name: IQuerySqlGenerator
    nameWithType: IQuerySqlGenerator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
    name: IQuerySqlGenerator
    nameWithType: IQuerySqlGenerator
    fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: ShaperCommandContext
  nameWithType: ShaperCommandContext
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
