### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions
  commentId: T:Microsoft.EntityFrameworkCore.ObservableCollectionExtensions
  id: ObservableCollectionExtensions
  parent: Microsoft.EntityFrameworkCore
  children:
  - Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList``1(ObservableCollection{``0})
  langs:
  - csharp
  - vb
  name: ObservableCollectionExtensions
  nameWithType: ObservableCollectionExtensions
  fullName: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/ObservableCollectionExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ObservableCollectionExtensions
    path: src/Microsoft.EntityFrameworkCore/Extensions/ObservableCollectionExtensions.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nExtension methods for <see cref=\"!:ObservableCollection&lt;T&gt;\"></see>.\n"
  example: []
  syntax:
    content: public static class ObservableCollectionExtensions
    content.vb: Public Module ObservableCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList``1(ObservableCollection{``0})
  commentId: M:Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList``1(ObservableCollection{``0})
  id: ToBindingList``1(ObservableCollection{``0})
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions
  langs:
  - csharp
  - vb
  name: ToBindingList<T>(ObservableCollection<T>)
  nameWithType: ObservableCollectionExtensions.ToBindingList<T>(ObservableCollection<T>)
  fullName: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList<T>(ObservableCollection<T>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Extensions/ObservableCollectionExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ToBindingList
    path: src/Microsoft.EntityFrameworkCore/Extensions/ObservableCollectionExtensions.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nReturns an <see cref=\"!:BindingList&lt;T&gt;\"></see> implementation that stays in sync with the given\n<see cref=\"!:ObservableCollection&lt;T&gt;\"></see>.\n"
  example: []
  syntax:
    content: 'public static BindingList<T> ToBindingList<T>(this ObservableCollection<T> source)where T : class'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToBindingList(Of T As Class)(source As ObservableCollection(Of T)) As BindingList(Of T)
    parameters:
    - id: source
      type: ObservableCollection{{T}}
      description: 'The collection that the binding list will stay in sync with. '
    typeParameters:
    - id: T
      description: 'The element type. '
    return:
      type: BindingList{{T}}
      description: 'The binding list. '
  overload: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList*
  nameWithType.vb: ObservableCollectionExtensions.ToBindingList(Of T)(ObservableCollection(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList(Of T)(ObservableCollection(Of T))
  name.vb: ToBindingList(Of T)(ObservableCollection(Of T))
references:
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList*
  commentId: Overload:Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList
  isExternal: false
  name: ToBindingList<T>
  nameWithType: ObservableCollectionExtensions.ToBindingList<T>
  fullName: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList<T>
  nameWithType.vb: ObservableCollectionExtensions.ToBindingList(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList(Of T)
  name.vb: ToBindingList(Of T)
- uid: ObservableCollection{{T}}
  commentId: '!:ObservableCollection{``0}'
  definition: ObservableCollection`1
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullname.vb: ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindingList{{T}}
  commentId: '!:BindingList{``0}'
  definition: BindingList`1
  name: BindingList<T>
  nameWithType: BindingList<T>
  fullName: BindingList<T>
  nameWithType.vb: BindingList(Of T)
  fullname.vb: BindingList(Of T)
  name.vb: BindingList(Of T)
  spec.csharp:
  - uid: BindingList`1
    name: BindingList
    nameWithType: BindingList
    fullName: BindingList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindingList`1
    name: BindingList
    nameWithType: BindingList
    fullName: BindingList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ObservableCollection`1
  commentId: '!:ObservableCollection`1'
  isExternal: true
  name: ObservableCollection<>
  nameWithType: ObservableCollection<>
  fullName: ObservableCollection<>
  nameWithType.vb: ObservableCollection(Of )
  fullname.vb: ObservableCollection(Of )
  name.vb: ObservableCollection(Of )
  spec.csharp:
  - uid: ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindingList`1
  isExternal: true
  name: BindingList<>
  nameWithType: BindingList<>
  fullName: BindingList<>
  nameWithType.vb: BindingList(Of )
  fullname.vb: BindingList(Of )
  name.vb: BindingList(Of )
  spec.csharp:
  - uid: BindingList`1
    name: BindingList
    nameWithType: BindingList
    fullName: BindingList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindingList`1
    name: BindingList
    nameWithType: BindingList
    fullName: BindingList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
