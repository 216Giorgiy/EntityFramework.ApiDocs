### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  id: InMemoryDatabase
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  children:
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.#ctor(Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase})
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery``1(QueryModel)
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.Store
  langs:
  - csharp
  - vb
  name: InMemoryDatabase
  nameWithType: InMemoryDatabase
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InMemoryDatabase
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class InMemoryDatabase : Database, IInMemoryDatabase, IDatabase'
    content.vb: >-
      Public Class InMemoryDatabase
          Inherits Database
          Implements IInMemoryDatabase, IDatabase
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Storage.Database
  implements:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
  - Microsoft.EntityFrameworkCore.Storage.IDatabase
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery``1(QueryModel)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.#ctor(Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.#ctor(Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase})
  id: '#ctor(Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase})'
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  langs:
  - csharp
  - vb
  name: InMemoryDatabase(IQueryCompilationContextFactory, IInMemoryStoreSource, IDbContextOptions, ILogger<InMemoryDatabase>)
  nameWithType: InMemoryDatabase.InMemoryDatabase(IQueryCompilationContextFactory, IInMemoryStoreSource, IDbContextOptions, ILogger<InMemoryDatabase>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.InMemoryDatabase(Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory, Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions, ILogger<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public InMemoryDatabase(IQueryCompilationContextFactory queryCompilationContextFactory, IInMemoryStoreSource storeSource, IDbContextOptions options, ILogger<InMemoryDatabase> logger)
    content.vb: Public Sub New(queryCompilationContextFactory As IQueryCompilationContextFactory, storeSource As IInMemoryStoreSource, options As IDbContextOptions, logger As ILogger(Of InMemoryDatabase))
    parameters:
    - id: queryCompilationContextFactory
      type: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
    - id: storeSource
      type: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource
    - id: options
      type: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
    - id: logger
      type: ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase}
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.#ctor*
  nameWithType.vb: InMemoryDatabase.InMemoryDatabase(IQueryCompilationContextFactory, IInMemoryStoreSource, IDbContextOptions, ILogger(Of InMemoryDatabase))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.InMemoryDatabase(Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory, Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions, ILogger(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase))
  name.vb: InMemoryDatabase(IQueryCompilationContextFactory, IInMemoryStoreSource, IDbContextOptions, ILogger(Of InMemoryDatabase))
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.Store
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.Store
  id: Store
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  langs:
  - csharp
  - vb
  name: Store
  nameWithType: InMemoryDatabase.Store
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.Store
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Store
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IInMemoryStore Store { get; }
    content.vb: Public Overridable ReadOnly Property Store As IInMemoryStore
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.Store*
  implements:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.Store
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  id: SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  langs:
  - csharp
  - vb
  name: SaveChanges(IReadOnlyList<IUpdateEntry>)
  nameWithType: InMemoryDatabase.SaveChanges(IReadOnlyList<IUpdateEntry>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SaveChanges
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override int SaveChanges(IReadOnlyList<IUpdateEntry> entries)
    content.vb: Public Overrides Function SaveChanges(entries As IReadOnlyList(Of IUpdateEntry)) As Integer
    parameters:
    - id: entries
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
    return:
      type: System.Int32
  overridden: Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChanges*
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  nameWithType.vb: InMemoryDatabase.SaveChanges(IReadOnlyList(Of IUpdateEntry))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry))
  name.vb: SaveChanges(IReadOnlyList(Of IUpdateEntry))
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  id: SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  langs:
  - csharp
  - vb
  name: SaveChangesAsync(IReadOnlyList<IUpdateEntry>, CancellationToken)
  nameWithType: InMemoryDatabase.SaveChangesAsync(IReadOnlyList<IUpdateEntry>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SaveChangesAsync
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Task<int> SaveChangesAsync(IReadOnlyList<IUpdateEntry> entries, CancellationToken cancellationToken = null)
    content.vb: Public Overrides Function SaveChangesAsync(entries As IReadOnlyList(Of IUpdateEntry), cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
    parameters:
    - id: entries
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  overridden: Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChangesAsync*
  implements:
  - Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  nameWithType.vb: InMemoryDatabase.SaveChangesAsync(IReadOnlyList(Of IUpdateEntry), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry), System.Threading.CancellationToken)
  name.vb: SaveChangesAsync(IReadOnlyList(Of IUpdateEntry), CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  id: EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  langs:
  - csharp
  - vb
  name: EnsureDatabaseCreated(IModel)
  nameWithType: InMemoryDatabase.EnsureDatabaseCreated(IModel)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EnsureDatabaseCreated
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
    startLine: 74
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool EnsureDatabaseCreated(IModel model)
    content.vb: Public Overridable Function EnsureDatabaseCreated(model As IModel) As Boolean
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.EnsureDatabaseCreated*
  implements:
  - Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery``1(QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery``1(QueryModel)
  id: CompileAsyncQuery``1(QueryModel)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  langs:
  - csharp
  - vb
  name: CompileAsyncQuery<TResult>(QueryModel)
  nameWithType: InMemoryDatabase.CompileAsyncQuery<TResult>(QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery<TResult>(QueryModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CompileAsyncQuery
    path: src/Microsoft.EntityFrameworkCore.InMemory/Storage/Internal/InMemoryDatabase.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory
  namespace: Microsoft.EntityFrameworkCore.Storage.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Func<QueryContext, IAsyncEnumerable<TResult>> CompileAsyncQuery<TResult>(QueryModel queryModel)
    content.vb: Public Overrides Function CompileAsyncQuery(Of TResult)(queryModel As QueryModel) As Func(Of QueryContext, IAsyncEnumerable(Of TResult))
    parameters:
    - id: queryModel
      type: QueryModel
    typeParameters:
    - id: TResult
    return:
      type: System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,IAsyncEnumerable{{TResult}}}
  overload: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery*
  nameWithType.vb: InMemoryDatabase.CompileAsyncQuery(Of TResult)(QueryModel)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery(Of TResult)(QueryModel)
  name.vb: CompileAsyncQuery(Of TResult)(QueryModel)
references:
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Storage.Database
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Database
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Database
  nameWithType: Database
  fullName: Microsoft.EntityFrameworkCore.Storage.Database
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: IInMemoryDatabase
  nameWithType: IInMemoryDatabase
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabase
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDatabase
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDatabase
  nameWithType: IDatabase
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabase
- uid: Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery``1(QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery``1(QueryModel)
  parent: Microsoft.EntityFrameworkCore.Storage.Database
  isExternal: true
  name: CompileQuery<TResult>(QueryModel)
  nameWithType: Database.CompileQuery<TResult>(QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery<TResult>(QueryModel)
  nameWithType.vb: Database.CompileQuery(Of TResult)(QueryModel)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery(Of TResult)(QueryModel)
  name.vb: CompileQuery(Of TResult)(QueryModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery``1(QueryModel)
    name: CompileQuery<TResult>
    nameWithType: Database.CompileQuery<TResult>
    fullName: Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery``1(QueryModel)
    name: CompileQuery(Of TResult)
    nameWithType: Database.CompileQuery(Of TResult)
    fullName: Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.#ctor
  isExternal: false
  name: InMemoryDatabase
  nameWithType: InMemoryDatabase.InMemoryDatabase
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.InMemoryDatabase
- uid: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IQueryCompilationContextFactory
  nameWithType: IQueryCompilationContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: IInMemoryStoreSource
  nameWithType: IInMemoryStoreSource
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IDbContextOptions
  nameWithType: IDbContextOptions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
- uid: ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase}
  commentId: '!:ILogger{Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase}'
  definition: ILogger`1
  name: ILogger<InMemoryDatabase>
  nameWithType: ILogger<InMemoryDatabase>
  fullName: ILogger<Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase>
  nameWithType.vb: ILogger(Of InMemoryDatabase)
  fullname.vb: ILogger(Of Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase)
  name.vb: ILogger(Of InMemoryDatabase)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
    name: InMemoryDatabase
    nameWithType: InMemoryDatabase
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
    name: InMemoryDatabase
    nameWithType: InMemoryDatabase
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullname.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.Store*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.Store
  isExternal: false
  name: Store
  nameWithType: InMemoryDatabase.Store
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.Store
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.Store
  commentId: P:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.Store
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
  isExternal: false
  name: Store
  nameWithType: IInMemoryDatabase.Store
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.Store
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: IInMemoryStore
  nameWithType: IInMemoryStore
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStore
- uid: Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  parent: Microsoft.EntityFrameworkCore.Storage.Database
  isExternal: true
  name: SaveChanges(IReadOnlyList<IUpdateEntry>)
  nameWithType: Database.SaveChanges(IReadOnlyList<IUpdateEntry>)
  fullName: Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>)
  nameWithType.vb: Database.SaveChanges(IReadOnlyList(Of IUpdateEntry))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry))
  name.vb: SaveChanges(IReadOnlyList(Of IUpdateEntry))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
    name: SaveChanges
    nameWithType: Database.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
    name: SaveChanges
    nameWithType: Database.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChanges*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChanges
  isExternal: false
  name: SaveChanges
  nameWithType: InMemoryDatabase.SaveChanges
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChanges
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabase
  isExternal: true
  name: SaveChanges(IReadOnlyList<IUpdateEntry>)
  nameWithType: IDatabase.SaveChanges(IReadOnlyList<IUpdateEntry>)
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>)
  nameWithType.vb: IDatabase.SaveChanges(IReadOnlyList(Of IUpdateEntry))
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry))
  name.vb: SaveChanges(IReadOnlyList(Of IUpdateEntry))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
    name: SaveChanges
    nameWithType: IDatabase.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})
    name: SaveChanges
    nameWithType: IDatabase.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IUpdateEntry>
  nameWithType: IReadOnlyList<IUpdateEntry>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>
  nameWithType.vb: IReadOnlyList(Of IUpdateEntry)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry)
  name.vb: IReadOnlyList(Of IUpdateEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.Database
  isExternal: true
  name: SaveChangesAsync(IReadOnlyList<IUpdateEntry>, CancellationToken)
  nameWithType: Database.SaveChangesAsync(IReadOnlyList<IUpdateEntry>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>, System.Threading.CancellationToken)
  nameWithType.vb: Database.SaveChangesAsync(IReadOnlyList(Of IUpdateEntry), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry), System.Threading.CancellationToken)
  name.vb: SaveChangesAsync(IReadOnlyList(Of IUpdateEntry), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: Database.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: Database.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChangesAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChangesAsync
  isExternal: false
  name: SaveChangesAsync
  nameWithType: InMemoryDatabase.SaveChangesAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.SaveChangesAsync
- uid: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IDatabase
  isExternal: true
  name: SaveChangesAsync(IReadOnlyList<IUpdateEntry>, CancellationToken)
  nameWithType: IDatabase.SaveChangesAsync(IReadOnlyList<IUpdateEntry>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Update.IUpdateEntry>, System.Threading.CancellationToken)
  nameWithType.vb: IDatabase.SaveChangesAsync(IReadOnlyList(Of IUpdateEntry), CancellationToken)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Update.IUpdateEntry), System.Threading.CancellationToken)
  name.vb: SaveChangesAsync(IReadOnlyList(Of IUpdateEntry), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: IDatabase.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: IDatabase.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
    name: IUpdateEntry
    nameWithType: IUpdateEntry
    fullName: Microsoft.EntityFrameworkCore.Update.IUpdateEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.EnsureDatabaseCreated*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.EnsureDatabaseCreated
  isExternal: false
  name: EnsureDatabaseCreated
  nameWithType: InMemoryDatabase.EnsureDatabaseCreated
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.EnsureDatabaseCreated
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase
  isExternal: false
  name: EnsureDatabaseCreated(IModel)
  nameWithType: IInMemoryDatabase.EnsureDatabaseCreated(IModel)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
    name: EnsureDatabaseCreated
    nameWithType: IInMemoryDatabase.EnsureDatabaseCreated
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.Metadata.IModel)
    name: EnsureDatabaseCreated
    nameWithType: IInMemoryDatabase.EnsureDatabaseCreated
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.IModel
    name: IModel
    nameWithType: IModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery
  isExternal: false
  name: CompileAsyncQuery<TResult>
  nameWithType: InMemoryDatabase.CompileAsyncQuery<TResult>
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery<TResult>
  nameWithType.vb: InMemoryDatabase.CompileAsyncQuery(Of TResult)
  fullname.vb: Microsoft.EntityFrameworkCore.Storage.Internal.InMemoryDatabase.CompileAsyncQuery(Of TResult)
  name.vb: CompileAsyncQuery(Of TResult)
- uid: QueryModel
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: QueryModel
- uid: System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,IAsyncEnumerable{{TResult}}}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,IAsyncEnumerable{``0}}
  parent: System
  definition: System.Func`2
  name: Func<QueryContext, IAsyncEnumerable<TResult>>
  nameWithType: Func<QueryContext, IAsyncEnumerable<TResult>>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Query.QueryContext, IAsyncEnumerable<TResult>>
  nameWithType.vb: Func(Of QueryContext, IAsyncEnumerable(Of TResult))
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Query.QueryContext, IAsyncEnumerable(Of TResult))
  name.vb: Func(Of QueryContext, IAsyncEnumerable(Of TResult))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext
    name: QueryContext
    nameWithType: QueryContext
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.QueryContext
    name: QueryContext
    nameWithType: QueryContext
    fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
