### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor
  id: CompositePredicateExpressionVisitor
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.#ctor(System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: CompositePredicateExpressionVisitor
  nameWithType: CompositePredicateExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CompositePredicateExpressionVisitor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitor.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class CompositePredicateExpressionVisitor : RelinqExpressionVisitor'
    content.vb: >-
      Public Class CompositePredicateExpressionVisitor
          Inherits RelinqExpressionVisitor
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.#ctor(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor
  langs:
  - csharp
  - vb
  name: CompositePredicateExpressionVisitor(Boolean)
  nameWithType: CompositePredicateExpressionVisitor.CompositePredicateExpressionVisitor(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.CompositePredicateExpressionVisitor(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitor.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public CompositePredicateExpressionVisitor(bool useRelationalNulls)
    content.vb: Public Sub New(useRelationalNulls As Boolean)
    parameters:
    - id: useRelationalNulls
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  id: Visit(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor
  langs:
  - csharp
  - vb
  name: Visit(Expression)
  nameWithType: CompositePredicateExpressionVisitor.Visit(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Visit
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/ExpressionVisitors/Internal/CompositePredicateExpressionVisitor.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Expression Visit(Expression expression)
    content.vb: Public Overrides Function Visit(expression As Expression) As Expression
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.Visit*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.#ctor
  isExternal: false
  name: CompositePredicateExpressionVisitor
  nameWithType: CompositePredicateExpressionVisitor.CompositePredicateExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.CompositePredicateExpressionVisitor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.Visit*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.Visit
  isExternal: false
  name: Visit
  nameWithType: CompositePredicateExpressionVisitor.Visit
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.Visit
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
