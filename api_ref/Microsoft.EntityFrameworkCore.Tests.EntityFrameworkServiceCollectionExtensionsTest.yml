### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  commentId: T:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  id: EntityFrameworkServiceCollectionExtensionsTest
  parent: Microsoft.EntityFrameworkCore.Tests
  children:
  - Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.#ctor(Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers)
  - Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame(IServiceCollection,IServiceCollection)
  - Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Dispose
  - Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection
  - Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly
  - Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped``1
  - Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton``1
  - Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped``1(System.Int32,System.Boolean)
  - Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton``1(System.Boolean)
  langs:
  - csharp
  - vb
  name: EntityFrameworkServiceCollectionExtensionsTest
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityFrameworkServiceCollectionExtensionsTest
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'public abstract class EntityFrameworkServiceCollectionExtensionsTest : IDisposable'
    content.vb: >-
      Public MustInherit Class EntityFrameworkServiceCollectionExtensionsTest
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection
  commentId: M:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection
  id: Repeated_calls_to_add_do_not_modify_collection
  parent: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  langs:
  - csharp
  - vb
  name: Repeated_calls_to_add_do_not_modify_collection()
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection()
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Repeated_calls_to_add_do_not_modify_collection
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public virtual void Repeated_calls_to_add_do_not_modify_collection()
    content.vb: Public Overridable Sub Repeated_calls_to_add_do_not_modify_collection
  overload: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly
  commentId: M:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly
  id: Services_wire_up_correctly
  parent: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  langs:
  - csharp
  - vb
  name: Services_wire_up_correctly()
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly()
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Services_wire_up_correctly
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public virtual void Services_wire_up_correctly()
    content.vb: Public Overridable Sub Services_wire_up_correctly
  overload: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame(IServiceCollection,IServiceCollection)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame(IServiceCollection,IServiceCollection)
  id: AssertServicesSame(IServiceCollection,IServiceCollection)
  parent: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  langs:
  - csharp
  - vb
  name: AssertServicesSame(IServiceCollection, IServiceCollection)
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame(IServiceCollection, IServiceCollection)
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame(IServiceCollection, IServiceCollection)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AssertServicesSame
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 94
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected virtual void AssertServicesSame(IServiceCollection services1, IServiceCollection services2)
    content.vb: Protected Overridable Sub AssertServicesSame(services1 As IServiceCollection, services2 As IServiceCollection)
    parameters:
    - id: services1
      type: IServiceCollection
    - id: services2
      type: IServiceCollection
  overload: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.#ctor(Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.#ctor(Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers)
  id: '#ctor(Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers)'
  parent: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  langs:
  - csharp
  - vb
  name: EntityFrameworkServiceCollectionExtensionsTest(TestHelpers)
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.EntityFrameworkServiceCollectionExtensionsTest(TestHelpers)
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.EntityFrameworkServiceCollectionExtensionsTest(Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: protected EntityFrameworkServiceCollectionExtensionsTest(TestHelpers testHelpers)
    content.vb: Protected Sub New(testHelpers As TestHelpers)
    parameters:
    - id: testHelpers
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  overload: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Dispose
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 130
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton``1(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton``1(System.Boolean)
  id: VerifySingleton``1(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  langs:
  - csharp
  - vb
  name: VerifySingleton<TService>(Boolean)
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton<TService>(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton<TService>(System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VerifySingleton
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 136
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'protected TService VerifySingleton<TService>(bool isExistingReplaced = false)where TService : class'
    content.vb: Protected Function VerifySingleton(Of TService As Class)(isExistingReplaced As Boolean = False) As TService
    parameters:
    - id: isExistingReplaced
      type: System.Boolean
    typeParameters:
    - id: TService
    return:
      type: '{TService}'
  overload: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton*
  nameWithType.vb: EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton(Of TService)(Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton(Of TService)(System.Boolean)
  name.vb: VerifySingleton(Of TService)(Boolean)
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped``1(System.Int32,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped``1(System.Int32,System.Boolean)
  id: VerifyScoped``1(System.Int32,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  langs:
  - csharp
  - vb
  name: VerifyScoped<TService>(Int32, Boolean)
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped<TService>(Int32, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped<TService>(System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VerifyScoped
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 142
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'protected TService VerifyScoped<TService>(int count = 1, bool isExistingReplaced = false)where TService : class'
    content.vb: Protected Function VerifyScoped(Of TService As Class)(count As Integer = 1, isExistingReplaced As Boolean = False) As TService
    parameters:
    - id: count
      type: System.Int32
    - id: isExistingReplaced
      type: System.Boolean
    typeParameters:
    - id: TService
    return:
      type: '{TService}'
  overload: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped*
  nameWithType.vb: EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped(Of TService)(Int32, Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped(Of TService)(System.Int32, System.Boolean)
  name.vb: VerifyScoped(Of TService)(Int32, Boolean)
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton``1
  commentId: M:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton``1
  id: VerifyOptionalSingleton``1
  parent: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  langs:
  - csharp
  - vb
  name: VerifyOptionalSingleton<TService>()
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton<TService>()
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton<TService>()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VerifyOptionalSingleton
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 148
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'protected TService VerifyOptionalSingleton<TService>()where TService : class'
    content.vb: Protected Function VerifyOptionalSingleton(Of TService As Class) As TService
    typeParameters:
    - id: TService
    return:
      type: '{TService}'
  overload: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton*
  nameWithType.vb: EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton(Of TService)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton(Of TService)()
  name.vb: VerifyOptionalSingleton(Of TService)()
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped``1
  commentId: M:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped``1
  id: VerifyOptionalScoped``1
  parent: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest
  langs:
  - csharp
  - vb
  name: VerifyOptionalScoped<TService>()
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped<TService>()
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped<TService>()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VerifyOptionalScoped
    path: test/Microsoft.EntityFrameworkCore.Tests/EntityFrameworkServiceCollectionExtensionsTest.cs
    startLine: 154
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests
  syntax:
    content: 'protected TService VerifyOptionalScoped<TService>()where TService : class'
    content.vb: Protected Function VerifyOptionalScoped(Of TService As Class) As TService
    typeParameters:
    - id: TService
    return:
      type: '{TService}'
  overload: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped*
  nameWithType.vb: EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped(Of TService)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped(Of TService)()
  name.vb: VerifyOptionalScoped(Of TService)()
references:
- uid: Microsoft.EntityFrameworkCore.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Tests
  fullName: Microsoft.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection
  isExternal: false
  name: Repeated_calls_to_add_do_not_modify_collection
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Repeated_calls_to_add_do_not_modify_collection
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly
  isExternal: false
  name: Services_wire_up_correctly
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Services_wire_up_correctly
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame
  isExternal: false
  name: AssertServicesSame
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.AssertServicesSame
- uid: IServiceCollection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: IServiceCollection
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.#ctor
  isExternal: false
  name: EntityFrameworkServiceCollectionExtensionsTest
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.EntityFrameworkServiceCollectionExtensionsTest
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.EntityFrameworkServiceCollectionExtensionsTest
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: TestHelpers
  nameWithType: TestHelpers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestHelpers
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Dispose*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Dispose
  isExternal: false
  name: Dispose
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.Dispose
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton
  isExternal: false
  name: VerifySingleton<TService>
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton<TService>
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton<TService>
  nameWithType.vb: EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton(Of TService)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifySingleton(Of TService)
  name.vb: VerifySingleton(Of TService)
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: TService
  isExternal: false
  name: TService
  nameWithType: TService
  fullName: TService
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped
  isExternal: false
  name: VerifyScoped<TService>
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped<TService>
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped<TService>
  nameWithType.vb: EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped(Of TService)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyScoped(Of TService)
  name.vb: VerifyScoped(Of TService)
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton
  isExternal: false
  name: VerifyOptionalSingleton<TService>
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton<TService>
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton<TService>
  nameWithType.vb: EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton(Of TService)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalSingleton(Of TService)
  name.vb: VerifyOptionalSingleton(Of TService)
- uid: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped*
  commentId: Overload:Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped
  isExternal: false
  name: VerifyOptionalScoped<TService>
  nameWithType: EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped<TService>
  fullName: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped<TService>
  nameWithType.vb: EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped(Of TService)
  fullname.vb: Microsoft.EntityFrameworkCore.Tests.EntityFrameworkServiceCollectionExtensionsTest.VerifyOptionalScoped(Of TService)
  name.vb: VerifyOptionalScoped(Of TService)
