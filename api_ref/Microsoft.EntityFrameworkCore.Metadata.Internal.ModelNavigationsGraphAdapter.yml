### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter
  id: ModelNavigationsGraphAdapter
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.Model)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.Vertices
  langs:
  - csharp
  - vb
  name: ModelNavigationsGraphAdapter
  nameWithType: ModelNavigationsGraphAdapter
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModelNavigationsGraphAdapter
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ModelNavigationsGraphAdapter : Graph<EntityType>'
    content.vb: >-
      Public Class ModelNavigationsGraphAdapter
          Inherits Graph(Of EntityType)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.Model)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.Model)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.Model)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter
  langs:
  - csharp
  - vb
  name: ModelNavigationsGraphAdapter(Model)
  nameWithType: ModelNavigationsGraphAdapter.ModelNavigationsGraphAdapter(Model)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.ModelNavigationsGraphAdapter(Microsoft.EntityFrameworkCore.Metadata.Internal.Model)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ModelNavigationsGraphAdapter(Model model)
    content.vb: Public Sub New(model As Model)
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.Vertices
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.Vertices
  id: Vertices
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter
  langs:
  - csharp
  - vb
  name: Vertices
  nameWithType: ModelNavigationsGraphAdapter.Vertices
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.Vertices
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Vertices
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override IEnumerable<EntityType> Vertices { get; }
    content.vb: Public Overrides ReadOnly Property Vertices As IEnumerable(Of EntityType)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  overridden: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.Vertices
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  id: GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter
  langs:
  - csharp
  - vb
  name: GetOutgoingNeighbours(EntityType)
  nameWithType: ModelNavigationsGraphAdapter.GetOutgoingNeighbours(EntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetOutgoingNeighbours
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override IEnumerable<EntityType> GetOutgoingNeighbours(EntityType from)
    content.vb: Public Overrides Function GetOutgoingNeighbours(from As EntityType) As IEnumerable(Of EntityType)
    parameters:
    - id: from
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  overridden: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  id: GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter
  langs:
  - csharp
  - vb
  name: GetIncomingNeighbours(EntityType)
  nameWithType: ModelNavigationsGraphAdapter.GetIncomingNeighbours(EntityType)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetIncomingNeighbours
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/ModelNavigationsGraphAdapter.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override IEnumerable<EntityType> GetIncomingNeighbours(EntityType to)
    content.vb: Public Overrides Function GetIncomingNeighbours(to As EntityType) As IEnumerable(Of EntityType)
    parameters:
    - id: to
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  overridden: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  commentId: T:Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  parent: Microsoft.EntityFrameworkCore.Internal
  definition: Microsoft.EntityFrameworkCore.Internal.Graph`1
  name: Graph<EntityType>
  nameWithType: Graph<EntityType>
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>
  nameWithType.vb: Graph(Of EntityType)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  name.vb: Graph(Of EntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1
    name: Graph
    nameWithType: Graph
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1
    name: Graph
    nameWithType: Graph
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType})
  parent: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  definition: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{`0})
  name: GetUnreachableVertices(IReadOnlyList<EntityType>)
  nameWithType: Graph<EntityType>.GetUnreachableVertices(IReadOnlyList<EntityType>)
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>)
  nameWithType.vb: Graph(Of EntityType).GetUnreachableVertices(IReadOnlyList(Of EntityType))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType).GetUnreachableVertices(System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType))
  name.vb: GetUnreachableVertices(IReadOnlyList(Of EntityType))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{`0})
    name: GetUnreachableVertices
    nameWithType: Graph<EntityType>.GetUnreachableVertices
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>.GetUnreachableVertices
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{`0})
    name: GetUnreachableVertices
    nameWithType: Graph(Of EntityType).GetUnreachableVertices
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType).GetUnreachableVertices
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.Graph`1
  commentId: T:Microsoft.EntityFrameworkCore.Internal.Graph`1
  isExternal: false
  name: Graph<TVertex>
  nameWithType: Graph<TVertex>
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<TVertex>
  nameWithType.vb: Graph(Of TVertex)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of TVertex)
  name.vb: Graph(Of TVertex)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1
    name: Graph
    nameWithType: Graph
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph
  - name: <
    nameWithType: <
    fullName: <
  - name: TVertex
    nameWithType: TVertex
    fullName: TVertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1
    name: Graph
    nameWithType: Graph
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TVertex
    nameWithType: TVertex
    fullName: TVertex
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{`0})
  commentId: M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{`0})
  isExternal: true
  name: GetUnreachableVertices(IReadOnlyList<TVertex>)
  nameWithType: Graph<TVertex>.GetUnreachableVertices(IReadOnlyList<TVertex>)
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<TVertex>.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList<TVertex>)
  nameWithType.vb: Graph(Of TVertex).GetUnreachableVertices(IReadOnlyList(Of TVertex))
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of TVertex).GetUnreachableVertices(System.Collections.Generic.IReadOnlyList(Of TVertex))
  name.vb: GetUnreachableVertices(IReadOnlyList(Of TVertex))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{`0})
    name: GetUnreachableVertices
    nameWithType: Graph<TVertex>.GetUnreachableVertices
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph<TVertex>.GetUnreachableVertices
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TVertex
    nameWithType: TVertex
    fullName: TVertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{`0})
    name: GetUnreachableVertices
    nameWithType: Graph(Of TVertex).GetUnreachableVertices
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph(Of TVertex).GetUnreachableVertices
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TVertex
    nameWithType: TVertex
    fullName: TVertex
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Model
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Model
  nameWithType: Model
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Model
- uid: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.Vertices
  commentId: P:Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.Vertices
  parent: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  definition: Microsoft.EntityFrameworkCore.Internal.Graph`1.Vertices
  name: Vertices
  nameWithType: Graph<EntityType>.Vertices
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>.Vertices
  nameWithType.vb: Graph(Of EntityType).Vertices
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType).Vertices
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityType>
  nameWithType: IEnumerable<EntityType>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>
  nameWithType.vb: IEnumerable(Of EntityType)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  name.vb: IEnumerable(Of EntityType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.Vertices
  commentId: P:Microsoft.EntityFrameworkCore.Internal.Graph`1.Vertices
  isExternal: false
  name: Vertices
  nameWithType: Graph<TVertex>.Vertices
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<TVertex>.Vertices
  nameWithType.vb: Graph(Of TVertex).Vertices
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of TVertex).Vertices
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  parent: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  definition: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbours(`0)
  name: GetOutgoingNeighbours(EntityType)
  nameWithType: Graph<EntityType>.GetOutgoingNeighbours(EntityType)
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>.GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  nameWithType.vb: Graph(Of EntityType).GetOutgoingNeighbours(EntityType)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType).GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbours(`0)
    name: GetOutgoingNeighbours
    nameWithType: Graph<EntityType>.GetOutgoingNeighbours
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>.GetOutgoingNeighbours
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbours(`0)
    name: GetOutgoingNeighbours
    nameWithType: Graph(Of EntityType).GetOutgoingNeighbours
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType).GetOutgoingNeighbours
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
- uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbours(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbours(`0)
  isExternal: false
  name: GetOutgoingNeighbours(TVertex)
  nameWithType: Graph<TVertex>.GetOutgoingNeighbours(TVertex)
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<TVertex>.GetOutgoingNeighbours(TVertex)
  nameWithType.vb: Graph(Of TVertex).GetOutgoingNeighbours(TVertex)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of TVertex).GetOutgoingNeighbours(TVertex)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbours(`0)
    name: GetOutgoingNeighbours
    nameWithType: Graph<TVertex>.GetOutgoingNeighbours
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph<TVertex>.GetOutgoingNeighbours
  - name: (
    nameWithType: (
    fullName: (
  - name: TVertex
    nameWithType: TVertex
    fullName: TVertex
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbours(`0)
    name: GetOutgoingNeighbours
    nameWithType: Graph(Of TVertex).GetOutgoingNeighbours
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph(Of TVertex).GetOutgoingNeighbours
  - name: (
    nameWithType: (
    fullName: (
  - name: TVertex
    nameWithType: TVertex
    fullName: TVertex
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}.GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  parent: Microsoft.EntityFrameworkCore.Internal.Graph{Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType}
  definition: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbours(`0)
  name: GetIncomingNeighbours(EntityType)
  nameWithType: Graph<EntityType>.GetIncomingNeighbours(EntityType)
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>.GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  nameWithType.vb: Graph(Of EntityType).GetIncomingNeighbours(EntityType)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType).GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbours(`0)
    name: GetIncomingNeighbours
    nameWithType: Graph<EntityType>.GetIncomingNeighbours
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph<Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType>.GetIncomingNeighbours
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbours(`0)
    name: GetIncomingNeighbours
    nameWithType: Graph(Of EntityType).GetIncomingNeighbours
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph(Of Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType).GetIncomingNeighbours
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    name: EntityType
    nameWithType: EntityType
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbours(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbours(`0)
  isExternal: false
  name: GetIncomingNeighbours(TVertex)
  nameWithType: Graph<TVertex>.GetIncomingNeighbours(TVertex)
  fullName: Microsoft.EntityFrameworkCore.Internal.Graph<TVertex>.GetIncomingNeighbours(TVertex)
  nameWithType.vb: Graph(Of TVertex).GetIncomingNeighbours(TVertex)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.Graph(Of TVertex).GetIncomingNeighbours(TVertex)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbours(`0)
    name: GetIncomingNeighbours
    nameWithType: Graph<TVertex>.GetIncomingNeighbours
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph<TVertex>.GetIncomingNeighbours
  - name: (
    nameWithType: (
    fullName: (
  - name: TVertex
    nameWithType: TVertex
    fullName: TVertex
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbours(`0)
    name: GetIncomingNeighbours
    nameWithType: Graph(Of TVertex).GetIncomingNeighbours
    fullName: Microsoft.EntityFrameworkCore.Internal.Graph(Of TVertex).GetIncomingNeighbours
  - name: (
    nameWithType: (
    fullName: (
  - name: TVertex
    nameWithType: TVertex
    fullName: TVertex
  - name: )
    nameWithType: )
    fullName: )
