### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  id: OptimisticConcurrencyTestBase`2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.#ctor(`1)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Adding_the_same_entity_twice_results_in_DbUpdateException
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(System.Boolean)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Change_in_independent_association_results_in_independent_association_exception
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.ClientPodiums
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.CreateF1Context
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Dispose
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Fixture
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Nullable_client_side_concurrency_token_can_be_used
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.ResolveConcurrencyTokens(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_client_values
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_new_values
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.StorePodiums
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.TestStore
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
  langs:
  - csharp
  - vb
  name: OptimisticConcurrencyTestBase<TTestStore, TFixture>
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OptimisticConcurrencyTestBase
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public abstract class OptimisticConcurrencyTestBase<TTestStore, TFixture> : IClassFixture<TFixture>, IDisposable where TTestStore : TestStore where TFixture : F1FixtureBase<TTestStore>, new ()'
    content.vb: >-
      Public MustInherit Class OptimisticConcurrencyTestBase(Of TTestStore As TestStore, TFixture As {F1FixtureBase(Of TTestStore), New})
          Inherits IClassFixture(Of TFixture)
          Implements IDisposable
    typeParameters:
    - id: TTestStore
    - id: TFixture
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture)
  name.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Nullable_client_side_concurrency_token_can_be_used
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Nullable_client_side_concurrency_token_can_be_used
  id: Nullable_client_side_concurrency_token_can_be_used
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Nullable_client_side_concurrency_token_can_be_used()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Nullable_client_side_concurrency_token_can_be_used()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Nullable_client_side_concurrency_token_can_be_used()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Nullable_client_side_concurrency_token_can_be_used
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual void Nullable_client_side_concurrency_token_can_be_used()
    content.vb: Public Overridable Sub Nullable_client_side_concurrency_token_can_be_used
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Nullable_client_side_concurrency_token_can_be_used()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Nullable_client_side_concurrency_token_can_be_used()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_client_values
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_client_values
  id: Simple_concurrency_exception_can_be_resolved_with_client_values
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Simple_concurrency_exception_can_be_resolved_with_client_values()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_client_values()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_client_values()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Simple_concurrency_exception_can_be_resolved_with_client_values
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Simple_concurrency_exception_can_be_resolved_with_client_values()
    content.vb: Public Overridable Function Simple_concurrency_exception_can_be_resolved_with_client_values As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_client_values()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_client_values()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values
  id: Simple_concurrency_exception_can_be_resolved_with_store_values
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Simple_concurrency_exception_can_be_resolved_with_store_values()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_store_values()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_store_values()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Simple_concurrency_exception_can_be_resolved_with_store_values
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Simple_concurrency_exception_can_be_resolved_with_store_values()
    content.vb: Public Overridable Function Simple_concurrency_exception_can_be_resolved_with_store_values As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_store_values()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_store_values()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_new_values
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_new_values
  id: Simple_concurrency_exception_can_be_resolved_with_new_values
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Simple_concurrency_exception_can_be_resolved_with_new_values()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_new_values()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_new_values()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Simple_concurrency_exception_can_be_resolved_with_new_values
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 70
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Simple_concurrency_exception_can_be_resolved_with_new_values()
    content.vb: Public Overridable Function Simple_concurrency_exception_can_be_resolved_with_new_values As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_new_values()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_new_values()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes
  id: Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 83
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes()
    content.vb: Public Overridable Function Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_store_values_using_equivalent_of_accept_changes()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload
  id: Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 97
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload()
    content.vb: Public Overridable Function Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Simple_concurrency_exception_can_be_resolved_with_store_values_using_Reload()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first
  id: Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 105
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first()
    content.vb: Public Overridable Function Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Two_concurrency_issues_in_one_to_one_related_entities_can_be_handled_by_dealing_with_dependent_first()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first
  id: Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 148
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first()
    content.vb: Public Overridable Function Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Two_concurrency_issues_in_one_to_many_related_entities_can_be_handled_by_dealing_with_dependent_first()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled
  id: Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 192
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled()
    content.vb: Public Overridable Function Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Concurrency_issue_where_the_FK_is_the_concurrency_token_can_be_handled()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Change_in_independent_association_results_in_independent_association_exception
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Change_in_independent_association_results_in_independent_association_exception
  id: Change_in_independent_association_results_in_independent_association_exception
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Change_in_independent_association_results_in_independent_association_exception()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Change_in_independent_association_results_in_independent_association_exception()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Change_in_independent_association_results_in_independent_association_exception()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Change_in_independent_association_results_in_independent_association_exception
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 219
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Change_in_independent_association_results_in_independent_association_exception()
    content.vb: Public Overridable Function Change_in_independent_association_results_in_independent_association_exception As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Change_in_independent_association_results_in_independent_association_exception()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Change_in_independent_association_results_in_independent_association_exception()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception
  id: Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 233
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception()
    content.vb: Public Overridable Function Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Change_in_independent_association_after_change_in_different_concurrency_token_results_in_independent_association_exception()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
  id: Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 253
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
    content.vb: Public Overridable Function Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Attempting_to_delete_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
  id: Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 270
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
    content.vb: Public Overridable Function Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Attempting_to_add_same_relationship_twice_for_many_to_many_results_in_independent_association_exception()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled
  id: Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 291
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled()
    content.vb: Public Overridable Function Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Concurrency_issue_where_a_complex_type_nested_member_is_the_concurrency_token_can_be_handled()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Adding_the_same_entity_twice_results_in_DbUpdateException
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Adding_the_same_entity_twice_results_in_DbUpdateException
  id: Adding_the_same_entity_twice_results_in_DbUpdateException
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Adding_the_same_entity_twice_results_in_DbUpdateException()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Adding_the_same_entity_twice_results_in_DbUpdateException()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Adding_the_same_entity_twice_results_in_DbUpdateException()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Adding_the_same_entity_twice_results_in_DbUpdateException
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 311
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Adding_the_same_entity_twice_results_in_DbUpdateException()
    content.vb: Public Overridable Function Adding_the_same_entity_twice_results_in_DbUpdateException As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Adding_the_same_entity_twice_results_in_DbUpdateException()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Adding_the_same_entity_twice_results_in_DbUpdateException()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException
  id: Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 331
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException()
    content.vb: Public Overridable Function Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Deleting_the_same_entity_twice_results_in_DbUpdateConcurrencyException()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException
  id: Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 347
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException()
    content.vb: Public Overridable Function Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
  id: Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 364
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
    content.vb: Public Overridable Function Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Updating_then_deleting_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException
  id: Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 386
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException()
    content.vb: Public Overridable Function Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
  id: Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 403
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
    content.vb: Public Overridable Function Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values As Task
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Deleting_then_updating_the_same_entity_results_in_DbUpdateConcurrencyException_which_can_be_resolved_with_store_values()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(System.Boolean)
  id: Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 426
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_an__Added_entity_that_is_not_in_database_is_no_op(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(System.Boolean)
  id: Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 453
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_an_Unchanged_entity_that_is_not_in_database_detaches_it(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(System.Boolean)
  id: Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 459
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Modified_entity_that_is_not_in_database_detaches_it(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(System.Boolean)
  id: Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 465
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Deleted_entity_that_is_not_in_database_detaches_it(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(System.Boolean)
  id: Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 471
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Detached_entity_that_is_not_in_database_detaches_it(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(System.Boolean)
  id: Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 504
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_an_Unchanged_entity_makes_the_entity_unchanged(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(System.Boolean)
  id: Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 510
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Modified_entity_makes_the_entity_unchanged(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(System.Boolean)
  id: Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 516
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Deleted_entity_makes_the_entity_unchanged(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(System.Boolean)
  id: Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 522
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_an_Added_entity_that_was_saved_elsewhere_makes_the_entity_unchanged(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(System.Boolean)
  id: Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(Boolean)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 528
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public virtual Task Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(bool async)
    content.vb: Public Overridable Function Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(async As Boolean) As Task
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Calling_Reload_on_a_Detached_entity_makes_the_entity_unchanged(System.Boolean)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.StorePodiums
  commentId: F:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.StorePodiums
  id: StorePodiums
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: StorePodiums
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.StorePodiums
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.StorePodiums
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: StorePodiums
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 563
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected const int StorePodiums = 20
    content.vb: Protected Const StorePodiums As Integer = 20
    return:
      type: System.Int32
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).StorePodiums
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).StorePodiums
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.ClientPodiums
  commentId: F:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.ClientPodiums
  id: ClientPodiums
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: ClientPodiums
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.ClientPodiums
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.ClientPodiums
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ClientPodiums
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 564
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected const int ClientPodiums = 30
    content.vb: Protected Const ClientPodiums As Integer = 30
    return:
      type: System.Int32
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).ClientPodiums
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).ClientPodiums
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.ResolveConcurrencyTokens(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.ResolveConcurrencyTokens(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)
  id: ResolveConcurrencyTokens(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: ResolveConcurrencyTokens(EntityEntry)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.ResolveConcurrencyTokens(EntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.ResolveConcurrencyTokens(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ResolveConcurrencyTokens
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 566
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected virtual void ResolveConcurrencyTokens(EntityEntry entry)
    content.vb: Protected Overridable Sub ResolveConcurrencyTokens(entry As EntityEntry)
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).ResolveConcurrencyTokens(EntityEntry)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).ResolveConcurrencyTokens(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.CreateF1Context
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.CreateF1Context
  id: CreateF1Context
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: CreateF1Context()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.CreateF1Context()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.CreateF1Context()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateF1Context
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 571
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected F1Context CreateF1Context()
    content.vb: Protected Function CreateF1Context As F1Context
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).CreateF1Context()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).CreateF1Context()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.#ctor(`1)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.#ctor(`1)
  id: '#ctor(`1)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: OptimisticConcurrencyTestBase(TFixture)
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.OptimisticConcurrencyTestBase(TFixture)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.OptimisticConcurrencyTestBase(TFixture)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 573
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected OptimisticConcurrencyTestBase(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).OptimisticConcurrencyTestBase(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).OptimisticConcurrencyTestBase(TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Dispose
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 580
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Dispose()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.Fixture
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Fixture
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 582
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.TestStore
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.TestStore
  id: TestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2
  langs:
  - csharp
  - vb
  name: TestStore
  nameWithType: OptimisticConcurrencyTestBase<TTestStore, TFixture>.TestStore
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>.TestStore
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TestStore
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/OptimisticConcurrencyTestBase.cs
    startLine: 584
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TTestStore TestStore { get; }
    content.vb: Protected ReadOnly Property TestStore As TTestStore
    parameters: []
    return:
      type: '{TTestStore}'
  nameWithType.vb: OptimisticConcurrencyTestBase(Of TTestStore, TFixture).TestStore
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture).TestStore
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase`2.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<OptimisticConcurrencyTestBase<TTestStore, TFixture>, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<OptimisticConcurrencyTestBase<TTestStore, TFixture>, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of OptimisticConcurrencyTestBase(Of TTestStore, TFixture), TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture), TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of OptimisticConcurrencyTestBase(Of TTestStore, TFixture), TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<OptimisticConcurrencyTestBase<TTestStore, TFixture>, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<OptimisticConcurrencyTestBase<TTestStore, TFixture>, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase<TTestStore, TFixture>, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of OptimisticConcurrencyTestBase(Of TTestStore, TFixture), TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of OptimisticConcurrencyTestBase(Of TTestStore, TFixture), TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.OptimisticConcurrencyTestBase(Of TTestStore, TFixture), TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: EntityEntry
  nameWithType: EntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel
  isExternal: false
  name: F1Context
  nameWithType: F1Context
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel.F1Context
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.ConcurrencyModel
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TTestStore}'
  commentId: '!:TTestStore'
  definition: TTestStore
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
- uid: TTestStore
  isExternal: false
  name: TTestStore
  nameWithType: TTestStore
  fullName: TTestStore
