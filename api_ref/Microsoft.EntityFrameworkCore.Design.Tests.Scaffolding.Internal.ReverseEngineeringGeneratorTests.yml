### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests
  commentId: T:Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests
  id: ReverseEngineeringGeneratorTests
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal
  children:
  - Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests.Constructs_correct_canonical_paths(System.String,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests.NamespaceAndPathOptions
  langs:
  - csharp
  - vb
  name: ReverseEngineeringGeneratorTests
  nameWithType: ReverseEngineeringGeneratorTests
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Scaffolding/Internal/ReverseEngineeringGeneratorTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ReverseEngineeringGeneratorTests
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Scaffolding/Internal/ReverseEngineeringGeneratorTests.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal
  syntax:
    content: public class ReverseEngineeringGeneratorTests
    content.vb: Public Class ReverseEngineeringGeneratorTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests.Constructs_correct_canonical_paths(System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests.Constructs_correct_canonical_paths(System.String,System.String,System.String,System.String,System.String,System.String)
  id: Constructs_correct_canonical_paths(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests
  langs:
  - csharp
  - vb
  name: Constructs_correct_canonical_paths(String, String, String, String, String, String)
  nameWithType: ReverseEngineeringGeneratorTests.Constructs_correct_canonical_paths(String, String, String, String, String, String)
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests.Constructs_correct_canonical_paths(System.String, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Scaffolding/Internal/ReverseEngineeringGeneratorTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Constructs_correct_canonical_paths
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Scaffolding/Internal/ReverseEngineeringGeneratorTests.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal
  syntax:
    content: >-
      [Theory]

      [MemberData("NamespaceAndPathOptions", new object[]{})]

      public void Constructs_correct_canonical_paths(string rootNamespace, string projectPath, string outputPath, string expectedNamepace, string canonicalizedFullOutputPath, string canonicalizedRelativeOutputPath)
    content.vb: >-
      <Theory>

      <MemberData("NamespaceAndPathOptions", New Object() {})>

      Public Sub Constructs_correct_canonical_paths(rootNamespace As String, projectPath As String, outputPath As String, expectedNamepace As String, canonicalizedFullOutputPath As String, canonicalizedRelativeOutputPath As String)
    parameters:
    - id: rootNamespace
      type: System.String
    - id: projectPath
      type: System.String
    - id: outputPath
      type: System.String
    - id: expectedNamepace
      type: System.String
    - id: canonicalizedFullOutputPath
      type: System.String
    - id: canonicalizedRelativeOutputPath
      type: System.String
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests.NamespaceAndPathOptions
  commentId: P:Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests.NamespaceAndPathOptions
  id: NamespaceAndPathOptions
  parent: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests
  langs:
  - csharp
  - vb
  name: NamespaceAndPathOptions
  nameWithType: ReverseEngineeringGeneratorTests.NamespaceAndPathOptions
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal.ReverseEngineeringGeneratorTests.NamespaceAndPathOptions
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Design.Tests/Scaffolding/Internal/ReverseEngineeringGeneratorTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NamespaceAndPathOptions
    path: test/Microsoft.EntityFrameworkCore.Design.Tests/Scaffolding/Internal/ReverseEngineeringGeneratorTests.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Design.Tests
  namespace: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal
  syntax:
    content: public static TheoryData NamespaceAndPathOptions { get; }
    content.vb: Public Shared ReadOnly Property NamespaceAndPathOptions As TheoryData
    parameters: []
    return:
      type: Xunit.TheoryData
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Design.Tests.Scaffolding.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Xunit.TheoryData
  commentId: T:Xunit.TheoryData
  parent: Xunit
  isExternal: true
  name: TheoryData
  nameWithType: TheoryData
  fullName: Xunit.TheoryData
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
