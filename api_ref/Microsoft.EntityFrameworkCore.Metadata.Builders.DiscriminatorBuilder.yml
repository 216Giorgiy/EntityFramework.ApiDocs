### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  id: DiscriminatorBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder,System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.AnnotationsBuilder
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.EntityTypeBuilder
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.String,System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Type,System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue``1(System.Object)
  langs:
  - csharp
  - vb
  name: DiscriminatorBuilder
  nameWithType: DiscriminatorBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DiscriminatorBuilder
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public class DiscriminatorBuilder
    content.vb: Public Class DiscriminatorBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder,System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder,System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations})
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder,System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations})'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  langs:
  - csharp
  - vb
  name: DiscriminatorBuilder(RelationalAnnotationsBuilder, Func<InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations>)
  nameWithType: DiscriminatorBuilder.DiscriminatorBuilder(RelationalAnnotationsBuilder, Func<InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.DiscriminatorBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder, System.Func<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public DiscriminatorBuilder(RelationalAnnotationsBuilder annotationsBuilder, Func<InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations> getRelationalEntityTypeBuilderAnnotations)
    content.vb: Public Sub New(annotationsBuilder As RelationalAnnotationsBuilder, getRelationalEntityTypeBuilderAnnotations As Func(Of InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations))
    parameters:
    - id: annotationsBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder
    - id: getRelationalEntityTypeBuilderAnnotations
      type: System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations}
  nameWithType.vb: DiscriminatorBuilder.DiscriminatorBuilder(RelationalAnnotationsBuilder, Func(Of InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.DiscriminatorBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder, System.Func(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations))
  name.vb: DiscriminatorBuilder(RelationalAnnotationsBuilder, Func(Of InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.AnnotationsBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.AnnotationsBuilder
  id: AnnotationsBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  langs:
  - csharp
  - vb
  name: AnnotationsBuilder
  nameWithType: DiscriminatorBuilder.AnnotationsBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.AnnotationsBuilder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AnnotationsBuilder
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
    startLine: 24
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: protected virtual RelationalAnnotationsBuilder AnnotationsBuilder { get; }
    content.vb: Protected Overridable ReadOnly Property AnnotationsBuilder As RelationalAnnotationsBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.EntityTypeBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.EntityTypeBuilder
  id: EntityTypeBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  langs:
  - csharp
  - vb
  name: EntityTypeBuilder
  nameWithType: DiscriminatorBuilder.EntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.EntityTypeBuilder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityTypeBuilder
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: protected virtual InternalEntityTypeBuilder EntityTypeBuilder { get; }
    content.vb: Protected Overridable ReadOnly Property EntityTypeBuilder As InternalEntityTypeBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Object)
  id: HasValue(System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  langs:
  - csharp
  - vb
  name: HasValue(Object)
  nameWithType: DiscriminatorBuilder.HasValue(Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public virtual DiscriminatorBuilder HasValue(object value)
    content.vb: Public Overridable Function HasValue(value As Object) As DiscriminatorBuilder
    parameters:
    - id: value
      type: System.Object
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue``1(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue``1(System.Object)
  id: HasValue``1(System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  langs:
  - csharp
  - vb
  name: HasValue<TEntity>(Object)
  nameWithType: DiscriminatorBuilder.HasValue<TEntity>(Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue<TEntity>(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public virtual DiscriminatorBuilder HasValue<TEntity>(object value)
    content.vb: Public Overridable Function HasValue(Of TEntity)(value As Object) As DiscriminatorBuilder
    parameters:
    - id: value
      type: System.Object
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  nameWithType.vb: DiscriminatorBuilder.HasValue(Of TEntity)(Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(Of TEntity)(System.Object)
  name.vb: HasValue(Of TEntity)(Object)
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Type,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Type,System.Object)
  id: HasValue(System.Type,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  langs:
  - csharp
  - vb
  name: HasValue(Type, Object)
  nameWithType: DiscriminatorBuilder.HasValue(Type, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public virtual DiscriminatorBuilder HasValue(Type entityType, object value)
    content.vb: Public Overridable Function HasValue(entityType As Type, value As Object) As DiscriminatorBuilder
    parameters:
    - id: entityType
      type: System.Type
    - id: value
      type: System.Object
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.String,System.Object)
  id: HasValue(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  langs:
  - csharp
  - vb
  name: HasValue(String, Object)
  nameWithType: DiscriminatorBuilder.HasValue(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasValue
    path: src/Microsoft.EntityFrameworkCore.Relational/Metadata/Builders/DiscriminatorBuilder.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  syntax:
    content: public virtual DiscriminatorBuilder HasValue(string entityTypeName, object value)
    content.vb: Public Overridable Function HasValue(entityTypeName As String, value As Object) As DiscriminatorBuilder
    parameters:
    - id: entityTypeName
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<DiscriminatorBuilder, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<DiscriminatorBuilder, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of DiscriminatorBuilder, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of DiscriminatorBuilder, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<DiscriminatorBuilder, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<DiscriminatorBuilder, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of DiscriminatorBuilder, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of DiscriminatorBuilder, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: RelationalAnnotationsBuilder
  nameWithType: RelationalAnnotationsBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder
- uid: System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations}
  commentId: T:System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations}
  parent: System
  definition: System.Func`2
  name: Func<InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations>
  nameWithType: Func<InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations>
  fullName: System.Func<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations>
  nameWithType.vb: Func(Of InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations)
  fullname.vb: System.Func(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations)
  name.vb: Func(Of InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations
    name: RelationalEntityTypeBuilderAnnotations
    nameWithType: RelationalEntityTypeBuilderAnnotations
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
    name: InternalEntityTypeBuilder
    nameWithType: InternalEntityTypeBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations
    name: RelationalEntityTypeBuilderAnnotations
    nameWithType: RelationalEntityTypeBuilderAnnotations
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalEntityTypeBuilder
  nameWithType: InternalEntityTypeBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: DiscriminatorBuilder
  nameWithType: DiscriminatorBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
