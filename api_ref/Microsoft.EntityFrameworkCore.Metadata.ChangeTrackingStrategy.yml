### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  id: ChangeTrackingStrategy
  parent: Microsoft.EntityFrameworkCore.Metadata
  children:
  - Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangedNotifications
  - Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotifications
  - Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotificationsWithOriginalValues
  - Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.Snapshot
  langs:
  - csharp
  - vb
  name: ChangeTrackingStrategy
  nameWithType: ChangeTrackingStrategy
  fullName: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  type: Enum
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChangeTrackingStrategy
    path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\nIndicates how the context detects changes to properties for an instance of the entity type.\n"
  example: []
  syntax:
    content: public enum ChangeTrackingStrategy
    content.vb: Public Enum ChangeTrackingStrategy
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.Snapshot
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.Snapshot
  id: Snapshot
  parent: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  langs:
  - csharp
  - vb
  name: Snapshot
  nameWithType: ChangeTrackingStrategy.Snapshot
  fullName: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.Snapshot
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Snapshot
    path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\nOriginal values are recorded when an entity is queried from the database. Changes are detected by scanning the\ncurrent property values and comparing them to the recorded values. This scanning takes place when\n<xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges\" data-throw-if-not-resolved=\"false\"></xref> is called, or when another API call (such as <xref href=\"Microsoft.EntityFrameworkCore.DbContext.SaveChanges\" data-throw-if-not-resolved=\"false\"></xref>)\ntriggers the change detection process.\n"
  example: []
  syntax:
    content: Snapshot = 0
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangedNotifications
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangedNotifications
  id: ChangedNotifications
  parent: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  langs:
  - csharp
  - vb
  name: ChangedNotifications
  nameWithType: ChangeTrackingStrategy.ChangedNotifications
  fullName: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangedNotifications
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChangedNotifications
    path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\nTo use this strategy, the entity class must implement <see cref=\"!:INotifyPropertyChanged\"></see>.\nOriginal values are recorded when an entity is queried from the database. Properties are marked as modified when the\nentity raises the <see cref=\"!:INotifyPropertyChanged.PropertyChanged\"></see> event.\n"
  example: []
  syntax:
    content: ChangedNotifications = 1
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotifications
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotifications
  id: ChangingAndChangedNotifications
  parent: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  langs:
  - csharp
  - vb
  name: ChangingAndChangedNotifications
  nameWithType: ChangeTrackingStrategy.ChangingAndChangedNotifications
  fullName: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotifications
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChangingAndChangedNotifications
    path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n<p>\n    To use this strategy, the entity class must implement <see cref=\"!:INotifyPropertyChanged\"></see> and\n<see cref=\"!:INotifyPropertyChanging\"></see>.\nOriginal values are recorded when the entity raises the <see cref=\"!:INotifyPropertyChanging.PropertyChanging\"></see> event. Properties\nare\nmarked as modified when the entity raises the <see cref=\"!:INotifyPropertyChanged.PropertyChanged\"></see> event.\n</p>\n<p>\n    Original values are only recorded when they are required to save changes to the entity. For example, properties that are configured\n    as\n    concurrency tokens.\n</p>\n"
  example: []
  syntax:
    content: ChangingAndChangedNotifications = 2
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotificationsWithOriginalValues
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotificationsWithOriginalValues
  id: ChangingAndChangedNotificationsWithOriginalValues
  parent: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  langs:
  - csharp
  - vb
  name: ChangingAndChangedNotificationsWithOriginalValues
  nameWithType: ChangeTrackingStrategy.ChangingAndChangedNotificationsWithOriginalValues
  fullName: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotificationsWithOriginalValues
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ChangingAndChangedNotificationsWithOriginalValues
    path: src/Microsoft.EntityFrameworkCore/Metadata/ChangeTrackingStrategy.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n<p>\n    To use this strategy, the entity class must implement <see cref=\"!:INotifyPropertyChanged\"></see> and\n<see cref=\"!:INotifyPropertyChanging\"></see>.\nOriginal values are recorded when the entity raises the <see cref=\"!:INotifyPropertyChanging.PropertyChanging\"></see>. Properties are\nmarked as modified when the entity raises the <see cref=\"!:INotifyPropertyChanged.PropertyChanged\"></see> event.\n</p>\n<p>\n    Original values are only recorded for all properties, regardless of whether they are required to save changes to the entity.\n</p>\n"
  example: []
  syntax:
    content: ChangingAndChangedNotificationsWithOriginalValues = 3
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
  commentId: M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: false
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: ChangeTrackingStrategy
  nameWithType: ChangeTrackingStrategy
  fullName: Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
