### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Design.DbContextOperations
  commentId: T:Microsoft.EntityFrameworkCore.Design.DbContextOperations
  id: DbContextOperations
  parent: Microsoft.EntityFrameworkCore.Design
  children:
  - Microsoft.EntityFrameworkCore.Design.DbContextOperations.#ctor(ILoggerProvider,System.Reflection.Assembly,System.Reflection.Assembly,System.String,System.String)
  - Microsoft.EntityFrameworkCore.Design.DbContextOperations.CreateContext(System.String)
  - Microsoft.EntityFrameworkCore.Design.DbContextOperations.DropDatabase(System.String)
  - Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextInfo(System.String)
  - Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextType(System.String)
  - Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextTypes
  langs:
  - csharp
  - vb
  name: DbContextOperations
  nameWithType: DbContextOperations
  fullName: Microsoft.EntityFrameworkCore.Design.DbContextOperations
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DbContextOperations
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public class DbContextOperations
    content.vb: Public Class DbContextOperations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Design.DbContextOperations.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Design.DbContextOperations.#ctor(ILoggerProvider,System.Reflection.Assembly,System.Reflection.Assembly,System.String,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Design.DbContextOperations.#ctor(ILoggerProvider,System.Reflection.Assembly,System.Reflection.Assembly,System.String,System.String)
  id: '#ctor(ILoggerProvider,System.Reflection.Assembly,System.Reflection.Assembly,System.String,System.String)'
  parent: Microsoft.EntityFrameworkCore.Design.DbContextOperations
  langs:
  - csharp
  - vb
  name: DbContextOperations(ILoggerProvider, Assembly, Assembly, String, String)
  nameWithType: DbContextOperations.DbContextOperations(ILoggerProvider, Assembly, Assembly, String, String)
  fullName: Microsoft.EntityFrameworkCore.Design.DbContextOperations.DbContextOperations(ILoggerProvider, System.Reflection.Assembly, System.Reflection.Assembly, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public DbContextOperations(ILoggerProvider loggerProvider, Assembly assembly, Assembly startupAssembly, string environment, string contentRootPath)
    content.vb: Public Sub New(loggerProvider As ILoggerProvider, assembly As Assembly, startupAssembly As Assembly, environment As String, contentRootPath As String)
    parameters:
    - id: loggerProvider
      type: ILoggerProvider
    - id: assembly
      type: System.Reflection.Assembly
    - id: startupAssembly
      type: System.Reflection.Assembly
    - id: environment
      type: System.String
    - id: contentRootPath
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Design.DbContextOperations.DropDatabase(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Design.DbContextOperations.DropDatabase(System.String)
  id: DropDatabase(System.String)
  parent: Microsoft.EntityFrameworkCore.Design.DbContextOperations
  langs:
  - csharp
  - vb
  name: DropDatabase(String)
  nameWithType: DbContextOperations.DropDatabase(String)
  fullName: Microsoft.EntityFrameworkCore.Design.DbContextOperations.DropDatabase(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DropDatabase
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public virtual void DropDatabase(string contextType)
    content.vb: Public Overridable Sub DropDatabase(contextType As String)
    parameters:
    - id: contextType
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.DbContextOperations.CreateContext(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Design.DbContextOperations.CreateContext(System.String)
  id: CreateContext(System.String)
  parent: Microsoft.EntityFrameworkCore.Design.DbContextOperations
  langs:
  - csharp
  - vb
  name: CreateContext(String)
  nameWithType: DbContextOperations.CreateContext(String)
  fullName: Microsoft.EntityFrameworkCore.Design.DbContextOperations.CreateContext(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
    startLine: 68
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public virtual DbContext CreateContext(string contextType)
    content.vb: Public Overridable Function CreateContext(contextType As String) As DbContext
    parameters:
    - id: contextType
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextTypes
  commentId: M:Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextTypes
  id: GetContextTypes
  parent: Microsoft.EntityFrameworkCore.Design.DbContextOperations
  langs:
  - csharp
  - vb
  name: GetContextTypes()
  nameWithType: DbContextOperations.GetContextTypes()
  fullName: Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextTypes()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetContextTypes
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
    startLine: 82
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public virtual IEnumerable<Type> GetContextTypes()
    content.vb: Public Overridable Function GetContextTypes As IEnumerable(Of Type)
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextType(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextType(System.String)
  id: GetContextType(System.String)
  parent: Microsoft.EntityFrameworkCore.Design.DbContextOperations
  langs:
  - csharp
  - vb
  name: GetContextType(String)
  nameWithType: DbContextOperations.GetContextType(String)
  fullName: Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextType(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetContextType
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public virtual Type GetContextType(string name)
    content.vb: Public Overridable Function GetContextType(name As String) As Type
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextInfo(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextInfo(System.String)
  id: GetContextInfo(System.String)
  parent: Microsoft.EntityFrameworkCore.Design.DbContextOperations
  langs:
  - csharp
  - vb
  name: GetContextInfo(String)
  nameWithType: DbContextOperations.GetContextInfo(String)
  fullName: Microsoft.EntityFrameworkCore.Design.DbContextOperations.GetContextInfo(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetContextInfo
    path: src/Microsoft.EntityFrameworkCore.Design/Design/DbContextOperations.cs
    startLine: 154
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Design
  syntax:
    content: public virtual ContextInfo GetContextInfo(string contextType)
    content.vb: Public Overridable Function GetContextInfo(contextType As String) As ContextInfo
    parameters:
    - id: contextType
      type: System.String
    return:
      type: Microsoft.EntityFrameworkCore.Design.ContextInfo
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Design
  commentId: N:Microsoft.EntityFrameworkCore.Design
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Design
  nameWithType: Microsoft.EntityFrameworkCore.Design
  fullName: Microsoft.EntityFrameworkCore.Design
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Design.DbContextOperations.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<DbContextOperations, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<DbContextOperations, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Design.DbContextOperations, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of DbContextOperations, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Design.DbContextOperations, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of DbContextOperations, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<DbContextOperations, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<DbContextOperations, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Design.DbContextOperations, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of DbContextOperations, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of DbContextOperations, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Design.DbContextOperations, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: ILoggerProvider
  isExternal: true
  name: ILoggerProvider
  nameWithType: ILoggerProvider
  fullName: ILoggerProvider
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.EntityFrameworkCore.Design.ContextInfo
  commentId: T:Microsoft.EntityFrameworkCore.Design.ContextInfo
  parent: Microsoft.EntityFrameworkCore.Design
  isExternal: false
  name: ContextInfo
  nameWithType: ContextInfo
  fullName: Microsoft.EntityFrameworkCore.Design.ContextInfo
