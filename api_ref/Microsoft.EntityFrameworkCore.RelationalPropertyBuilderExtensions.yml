### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  id: RelationalPropertyBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  children:
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  - Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  langs:
  - csharp
  - vb
  name: RelationalPropertyBuilderExtensions
  nameWithType: RelationalPropertyBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationalPropertyBuilderExtensions
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nRelational database specific extension methods for <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class RelationalPropertyBuilderExtensions
    content.vb: Public Module RelationalPropertyBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  id: HasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasColumnName(PropertyBuilder, String)
  nameWithType: RelationalPropertyBuilderExtensions.HasColumnName(PropertyBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasColumnName
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the column that the property maps to when targeting a relational database.\n"
  example: []
  syntax:
    content: public static PropertyBuilder HasColumnName(this PropertyBuilder propertyBuilder, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasColumnName(propertyBuilder As PropertyBuilder, name As String) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: name
      type: System.String
      description: 'The name of the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  id: HasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasColumnName<TProperty>(PropertyBuilder<TProperty>, String)
  nameWithType: RelationalPropertyBuilderExtensions.HasColumnName<TProperty>(PropertyBuilder<TProperty>, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasColumnName
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the column that the property maps to when targeting a relational database.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> HasColumnName<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasColumnName(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), name As String) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: name
      type: System.String
      description: 'The name of the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName*
  nameWithType.vb: RelationalPropertyBuilderExtensions.HasColumnName(Of TProperty)(PropertyBuilder(Of TProperty), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.String)
  name.vb: HasColumnName(Of TProperty)(PropertyBuilder(Of TProperty), String)
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  id: HasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasColumnType(PropertyBuilder, String)
  nameWithType: RelationalPropertyBuilderExtensions.HasColumnType(PropertyBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasColumnType
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the data type of the column that the property maps to when targeting a relational database.\nThis should be the complete type name, including precision, scale, length, etc.\n"
  example: []
  syntax:
    content: public static PropertyBuilder HasColumnType(this PropertyBuilder propertyBuilder, string typeName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasColumnType(propertyBuilder As PropertyBuilder, typeName As String) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: typeName
      type: System.String
      description: 'The name of the data type of the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  id: HasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasColumnType<TProperty>(PropertyBuilder<TProperty>, String)
  nameWithType: RelationalPropertyBuilderExtensions.HasColumnType<TProperty>(PropertyBuilder<TProperty>, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasColumnType
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 74
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the data type of the column that the property maps to when targeting a relational database.\nThis should be the complete type name, including precision, scale, length, etc.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> HasColumnType<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, string typeName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasColumnType(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), typeName As String) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: typeName
      type: System.String
      description: 'The name of the data type of the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType*
  nameWithType.vb: RelationalPropertyBuilderExtensions.HasColumnType(Of TProperty)(PropertyBuilder(Of TProperty), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.String)
  name.vb: HasColumnType(Of TProperty)(PropertyBuilder(Of TProperty), String)
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  id: HasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasDefaultValueSql(PropertyBuilder, String)
  nameWithType: RelationalPropertyBuilderExtensions.HasDefaultValueSql(PropertyBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasDefaultValueSql
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the default value expression for the column that the property maps to when targeting a relational database.\n"
  example: []
  syntax:
    content: public static PropertyBuilder HasDefaultValueSql(this PropertyBuilder propertyBuilder, string sql)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasDefaultValueSql(propertyBuilder As PropertyBuilder, sql As String) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: sql
      type: System.String
      description: 'The SQL expression for the default value of the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  id: HasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasDefaultValueSql<TProperty>(PropertyBuilder<TProperty>, String)
  nameWithType: RelationalPropertyBuilderExtensions.HasDefaultValueSql<TProperty>(PropertyBuilder<TProperty>, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasDefaultValueSql
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 105
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the default value expression for the column that the property maps to when targeting a relational database.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> HasDefaultValueSql<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, string sql)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasDefaultValueSql(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), sql As String) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: sql
      type: System.String
      description: 'The SQL expression for the default value of the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql*
  nameWithType.vb: RelationalPropertyBuilderExtensions.HasDefaultValueSql(Of TProperty)(PropertyBuilder(Of TProperty), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.String)
  name.vb: HasDefaultValueSql(Of TProperty)(PropertyBuilder(Of TProperty), String)
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  id: HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasComputedColumnSql(PropertyBuilder, String)
  nameWithType: RelationalPropertyBuilderExtensions.HasComputedColumnSql(PropertyBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasComputedColumnSql
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 116
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the property to map to a computed column when targeting a relational database.\n"
  example: []
  syntax:
    content: public static PropertyBuilder HasComputedColumnSql(this PropertyBuilder propertyBuilder, string sql)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasComputedColumnSql(propertyBuilder As PropertyBuilder, sql As String) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: sql
      type: System.String
      description: 'The SQL expression that computes values for the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  id: HasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasComputedColumnSql<TProperty>(PropertyBuilder<TProperty>, String)
  nameWithType: RelationalPropertyBuilderExtensions.HasComputedColumnSql<TProperty>(PropertyBuilder<TProperty>, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasComputedColumnSql
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 136
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the property to map to a computed column when targeting a relational database.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> HasComputedColumnSql<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, string sql)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasComputedColumnSql(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), sql As String) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: sql
      type: System.String
      description: 'The SQL expression that computes values for the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql*
  nameWithType.vb: RelationalPropertyBuilderExtensions.HasComputedColumnSql(Of TProperty)(PropertyBuilder(Of TProperty), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.String)
  name.vb: HasComputedColumnSql(Of TProperty)(PropertyBuilder(Of TProperty), String)
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)
  id: HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasDefaultValue(PropertyBuilder, Object)
  nameWithType: RelationalPropertyBuilderExtensions.HasDefaultValue(PropertyBuilder, Object)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasDefaultValue
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 147
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the default value for the column that the property maps to when targeting a relational database.\n"
  example: []
  syntax:
    content: public static PropertyBuilder HasDefaultValue(this PropertyBuilder propertyBuilder, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasDefaultValue(propertyBuilder As PropertyBuilder, value As Object) As PropertyBuilder
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The builder for the property being configured. '
    - id: value
      type: System.Object
      description: 'The default value of the column. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)
  id: HasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)
  isExtensionMethod: true
  parent: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: HasDefaultValue<TProperty>(PropertyBuilder<TProperty>, Object)
  nameWithType: RelationalPropertyBuilderExtensions.HasDefaultValue<TProperty>(PropertyBuilder<TProperty>, Object)
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue<TProperty>(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasDefaultValue
    path: src/Microsoft.EntityFrameworkCore.Relational/RelationalPropertyBuilderExtensions.cs
    startLine: 166
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore
  summary: "\nConfigures the default value for the column that the property maps to when targeting a relational database.\n"
  example: []
  syntax:
    content: public static PropertyBuilder<TProperty> HasDefaultValue<TProperty>(this PropertyBuilder<TProperty> propertyBuilder, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasDefaultValue(Of TProperty)(propertyBuilder As PropertyBuilder(Of TProperty), value As Object) As PropertyBuilder(Of TProperty)
    parameters:
    - id: propertyBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The builder for the property being configured. '
    - id: value
      type: System.Object
      description: 'The default value of the column. '
    typeParameters:
    - id: TProperty
      description: 'The type of the property being configured. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
      description: 'The same builder instance so that multiple calls can be chained. '
  overload: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue*
  nameWithType.vb: RelationalPropertyBuilderExtensions.HasDefaultValue(Of TProperty)(PropertyBuilder(Of TProperty), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue(Of TProperty)(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty), System.Object)
  name.vb: HasDefaultValue(Of TProperty)(PropertyBuilder(Of TProperty), Object)
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName*
  commentId: Overload:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName
  isExternal: false
  name: HasColumnName
  nameWithType: RelationalPropertyBuilderExtensions.HasColumnName
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{{TProperty}}
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0}
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  definition: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
  name: PropertyBuilder<TProperty>
  nameWithType: PropertyBuilder<TProperty>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>
  nameWithType.vb: PropertyBuilder(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty)
  name.vb: PropertyBuilder(Of TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: PropertyBuilder<TProperty>
  nameWithType: PropertyBuilder<TProperty>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder<TProperty>
  nameWithType.vb: PropertyBuilder(Of TProperty)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder(Of TProperty)
  name.vb: PropertyBuilder(Of TProperty)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType*
  commentId: Overload:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType
  isExternal: false
  name: HasColumnType
  nameWithType: RelationalPropertyBuilderExtensions.HasColumnType
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql*
  commentId: Overload:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql
  isExternal: false
  name: HasDefaultValueSql
  nameWithType: RelationalPropertyBuilderExtensions.HasDefaultValueSql
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql*
  commentId: Overload:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql
  isExternal: false
  name: HasComputedColumnSql
  nameWithType: RelationalPropertyBuilderExtensions.HasComputedColumnSql
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql
- uid: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue*
  commentId: Overload:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue
  isExternal: false
  name: HasDefaultValue
  nameWithType: RelationalPropertyBuilderExtensions.HasDefaultValue
  fullName: Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue
