### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  id: ConventionSet
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.BaseEntityTypeSetConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAddedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAnnotationSetConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeIgnoredConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeMemberIgnoredConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyAddedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyRemovedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyUniquenessConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexAddedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexRemovedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexUniquenessConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyAddedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyRemovedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelBuiltConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelInitializedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationAddedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationRemovedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrimaryKeySetConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrincipalEndSetConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyAddedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyFieldChangedConventions
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyNullableChangedConventions
  langs:
  - csharp
  - vb
  name: ConventionSet
  nameWithType: ConventionSet
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ConventionSet
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Base implementation for a set of conventions used to build a model. This base implementation is an empty set of conventions.\n"
  example: []
  syntax:
    content: public class ConventionSet
    content.vb: Public Class ConventionSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAddedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAddedConventions
  id: EntityTypeAddedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: EntityTypeAddedConventions
  nameWithType: ConventionSet.EntityTypeAddedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAddedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityTypeAddedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when an entity type is added to the model.\n"
  example: []
  syntax:
    content: public virtual IList<IEntityTypeConvention> EntityTypeAddedConventions { get; }
    content.vb: Public Overridable ReadOnly Property EntityTypeAddedConventions As IList(Of IEntityTypeConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeIgnoredConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeIgnoredConventions
  id: EntityTypeIgnoredConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: EntityTypeIgnoredConventions
  nameWithType: ConventionSet.EntityTypeIgnoredConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeIgnoredConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityTypeIgnoredConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when an entity type is ignored.\n"
  example: []
  syntax:
    content: public virtual IList<IEntityTypeIgnoredConvention> EntityTypeIgnoredConventions { get; }
    content.vb: Public Overridable ReadOnly Property EntityTypeIgnoredConventions As IList(Of IEntityTypeIgnoredConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeMemberIgnoredConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeMemberIgnoredConventions
  id: EntityTypeMemberIgnoredConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: EntityTypeMemberIgnoredConventions
  nameWithType: ConventionSet.EntityTypeMemberIgnoredConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeMemberIgnoredConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityTypeMemberIgnoredConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when a property is ignored.\n"
  example: []
  syntax:
    content: public virtual IList<IEntityTypeMemberIgnoredConvention> EntityTypeMemberIgnoredConventions { get; }
    content.vb: Public Overridable ReadOnly Property EntityTypeMemberIgnoredConventions As IList(Of IEntityTypeMemberIgnoredConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.BaseEntityTypeSetConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.BaseEntityTypeSetConventions
  id: BaseEntityTypeSetConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: BaseEntityTypeSetConventions
  nameWithType: ConventionSet.BaseEntityTypeSetConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.BaseEntityTypeSetConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: BaseEntityTypeSetConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when the base entity type is set or removed.\n"
  example: []
  syntax:
    content: public virtual IList<IBaseTypeConvention> BaseEntityTypeSetConventions { get; }
    content.vb: Public Overridable ReadOnly Property BaseEntityTypeSetConventions As IList(Of IBaseTypeConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAnnotationSetConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAnnotationSetConventions
  id: EntityTypeAnnotationSetConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: EntityTypeAnnotationSetConventions
  nameWithType: ConventionSet.EntityTypeAnnotationSetConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAnnotationSetConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityTypeAnnotationSetConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when an annotation is set or removed on an entity type.\n"
  example: []
  syntax:
    content: public virtual IList<IEntityTypeAnnotationSetConvention> EntityTypeAnnotationSetConventions { get; }
    content.vb: Public Overridable ReadOnly Property EntityTypeAnnotationSetConventions As IList(Of IEntityTypeAnnotationSetConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyAddedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyAddedConventions
  id: ForeignKeyAddedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: ForeignKeyAddedConventions
  nameWithType: ConventionSet.ForeignKeyAddedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyAddedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ForeignKeyAddedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when a foreign key is added.\n"
  example: []
  syntax:
    content: public virtual IList<IForeignKeyConvention> ForeignKeyAddedConventions { get; }
    content.vb: Public Overridable ReadOnly Property ForeignKeyAddedConventions As IList(Of IForeignKeyConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyRemovedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyRemovedConventions
  id: ForeignKeyRemovedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: ForeignKeyRemovedConventions
  nameWithType: ConventionSet.ForeignKeyRemovedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyRemovedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ForeignKeyRemovedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when a foreign key is removed.\n"
  example: []
  syntax:
    content: public virtual IList<IForeignKeyRemovedConvention> ForeignKeyRemovedConventions { get; }
    content.vb: Public Overridable ReadOnly Property ForeignKeyRemovedConventions As IList(Of IForeignKeyRemovedConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyAddedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyAddedConventions
  id: KeyAddedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: KeyAddedConventions
  nameWithType: ConventionSet.KeyAddedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyAddedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: KeyAddedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when a key is added.\n"
  example: []
  syntax:
    content: public virtual IList<IKeyConvention> KeyAddedConventions { get; }
    content.vb: Public Overridable ReadOnly Property KeyAddedConventions As IList(Of IKeyConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyRemovedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyRemovedConventions
  id: KeyRemovedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: KeyRemovedConventions
  nameWithType: ConventionSet.KeyRemovedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyRemovedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: KeyRemovedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when a key is removed.\n"
  example: []
  syntax:
    content: public virtual IList<IKeyRemovedConvention> KeyRemovedConventions { get; }
    content.vb: Public Overridable ReadOnly Property KeyRemovedConventions As IList(Of IKeyRemovedConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrimaryKeySetConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrimaryKeySetConventions
  id: PrimaryKeySetConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: PrimaryKeySetConventions
  nameWithType: ConventionSet.PrimaryKeySetConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrimaryKeySetConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: PrimaryKeySetConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when a primary key is configured.\n"
  example: []
  syntax:
    content: public virtual IList<IPrimaryKeyConvention> PrimaryKeySetConventions { get; }
    content.vb: Public Overridable ReadOnly Property PrimaryKeySetConventions As IList(Of IPrimaryKeyConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexAddedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexAddedConventions
  id: IndexAddedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: IndexAddedConventions
  nameWithType: ConventionSet.IndexAddedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexAddedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IndexAddedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 67
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when an index is added.\n"
  example: []
  syntax:
    content: public virtual IList<IIndexConvention> IndexAddedConventions { get; }
    content.vb: Public Overridable ReadOnly Property IndexAddedConventions As IList(Of IIndexConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexRemovedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexRemovedConventions
  id: IndexRemovedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: IndexRemovedConventions
  nameWithType: ConventionSet.IndexRemovedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexRemovedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IndexRemovedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 72
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when an index is added.\n"
  example: []
  syntax:
    content: public virtual IList<IIndexRemovedConvention> IndexRemovedConventions { get; }
    content.vb: Public Overridable ReadOnly Property IndexRemovedConventions As IList(Of IIndexRemovedConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexUniquenessConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexUniquenessConventions
  id: IndexUniquenessConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: IndexUniquenessConventions
  nameWithType: ConventionSet.IndexUniquenessConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexUniquenessConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IndexUniquenessConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 77
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when the uniqueness of an index is changed.\n"
  example: []
  syntax:
    content: public virtual IList<IIndexUniquenessConvention> IndexUniquenessConventions { get; }
    content.vb: Public Overridable ReadOnly Property IndexUniquenessConventions As IList(Of IIndexUniquenessConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrincipalEndSetConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrincipalEndSetConventions
  id: PrincipalEndSetConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: PrincipalEndSetConventions
  nameWithType: ConventionSet.PrincipalEndSetConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrincipalEndSetConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: PrincipalEndSetConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 82
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when the principal end of a relationship is configured.\n"
  example: []
  syntax:
    content: public virtual IList<IPrincipalEndConvention> PrincipalEndSetConventions { get; }
    content.vb: Public Overridable ReadOnly Property PrincipalEndSetConventions As IList(Of IPrincipalEndConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelBuiltConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelBuiltConventions
  id: ModelBuiltConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: ModelBuiltConventions
  nameWithType: ConventionSet.ModelBuiltConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelBuiltConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ModelBuiltConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when model building is completed.\n"
  example: []
  syntax:
    content: public virtual IList<IModelConvention> ModelBuiltConventions { get; }
    content.vb: Public Overridable ReadOnly Property ModelBuiltConventions As IList(Of IModelConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelInitializedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelInitializedConventions
  id: ModelInitializedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: ModelInitializedConventions
  nameWithType: ConventionSet.ModelInitializedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelInitializedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ModelInitializedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 92
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run to setup the initial model.\n"
  example: []
  syntax:
    content: public virtual IList<IModelConvention> ModelInitializedConventions { get; }
    content.vb: Public Overridable ReadOnly Property ModelInitializedConventions As IList(Of IModelConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationAddedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationAddedConventions
  id: NavigationAddedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: NavigationAddedConventions
  nameWithType: ConventionSet.NavigationAddedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationAddedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: NavigationAddedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 97
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when a navigation property is added.\n"
  example: []
  syntax:
    content: public virtual IList<INavigationConvention> NavigationAddedConventions { get; }
    content.vb: Public Overridable ReadOnly Property NavigationAddedConventions As IList(Of INavigationConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationRemovedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationRemovedConventions
  id: NavigationRemovedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: NavigationRemovedConventions
  nameWithType: ConventionSet.NavigationRemovedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationRemovedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: NavigationRemovedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 102
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when a navigation property is removed.\n"
  example: []
  syntax:
    content: public virtual IList<INavigationRemovedConvention> NavigationRemovedConventions { get; }
    content.vb: Public Overridable ReadOnly Property NavigationRemovedConventions As IList(Of INavigationRemovedConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyUniquenessConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyUniquenessConventions
  id: ForeignKeyUniquenessConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: ForeignKeyUniquenessConventions
  nameWithType: ConventionSet.ForeignKeyUniquenessConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyUniquenessConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ForeignKeyUniquenessConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when the uniqueness of a foreign key is changed.\n"
  example: []
  syntax:
    content: public virtual IList<IForeignKeyUniquenessConvention> ForeignKeyUniquenessConventions { get; }
    content.vb: Public Overridable ReadOnly Property ForeignKeyUniquenessConventions As IList(Of IForeignKeyUniquenessConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyAddedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyAddedConventions
  id: PropertyAddedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: PropertyAddedConventions
  nameWithType: ConventionSet.PropertyAddedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyAddedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: PropertyAddedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 112
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when a property is added.\n"
  example: []
  syntax:
    content: public virtual IList<IPropertyConvention> PropertyAddedConventions { get; }
    content.vb: Public Overridable ReadOnly Property PropertyAddedConventions As IList(Of IPropertyConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyNullableChangedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyNullableChangedConventions
  id: PropertyNullableChangedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: PropertyNullableChangedConventions
  nameWithType: ConventionSet.PropertyNullableChangedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyNullableChangedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: PropertyNullableChangedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when the nullability of a property is changed.\n"
  example: []
  syntax:
    content: public virtual IList<IPropertyNullableConvention> PropertyNullableChangedConventions { get; }
    content.vb: Public Overridable ReadOnly Property PropertyNullableChangedConventions As IList(Of IPropertyNullableConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyFieldChangedConventions
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyFieldChangedConventions
  id: PropertyFieldChangedConventions
  parent: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet
  langs:
  - csharp
  - vb
  name: PropertyFieldChangedConventions
  nameWithType: ConventionSet.PropertyFieldChangedConventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyFieldChangedConventions
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: PropertyFieldChangedConventions
    path: src/Microsoft.EntityFrameworkCore/Metadata/Conventions/ConventionSet.cs
    startLine: 122
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Conventions
  summary: "\n    Conventions to run when the field of a property is changed.\n"
  example: []
  syntax:
    content: public virtual IList<IPropertyFieldChangedConvention> PropertyFieldChangedConventions { get; }
    content.vb: Public Overridable ReadOnly Property PropertyFieldChangedConventions As IList(Of IPropertyFieldChangedConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Conventions
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Conventions
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Conventions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ConventionSet, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ConventionSet, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ConventionSet, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ConventionSet, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ConventionSet, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ConventionSet, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ConventionSet, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ConventionSet, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IEntityTypeConvention>
  nameWithType: IList<IEntityTypeConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention>
  nameWithType.vb: IList(Of IEntityTypeConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention)
  name.vb: IList(Of IEntityTypeConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
    name: IEntityTypeConvention
    nameWithType: IEntityTypeConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
    name: IEntityTypeConvention
    nameWithType: IEntityTypeConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IEntityTypeIgnoredConvention>
  nameWithType: IList<IEntityTypeIgnoredConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention>
  nameWithType.vb: IList(Of IEntityTypeIgnoredConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention)
  name.vb: IList(Of IEntityTypeIgnoredConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention
    name: IEntityTypeIgnoredConvention
    nameWithType: IEntityTypeIgnoredConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention
    name: IEntityTypeIgnoredConvention
    nameWithType: IEntityTypeIgnoredConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IEntityTypeMemberIgnoredConvention>
  nameWithType: IList<IEntityTypeMemberIgnoredConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention>
  nameWithType.vb: IList(Of IEntityTypeMemberIgnoredConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention)
  name.vb: IList(Of IEntityTypeMemberIgnoredConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention
    name: IEntityTypeMemberIgnoredConvention
    nameWithType: IEntityTypeMemberIgnoredConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention
    name: IEntityTypeMemberIgnoredConvention
    nameWithType: IEntityTypeMemberIgnoredConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IBaseTypeConvention>
  nameWithType: IList<IBaseTypeConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention>
  nameWithType.vb: IList(Of IBaseTypeConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention)
  name.vb: IList(Of IBaseTypeConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
    name: IBaseTypeConvention
    nameWithType: IBaseTypeConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
    name: IBaseTypeConvention
    nameWithType: IBaseTypeConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IEntityTypeAnnotationSetConvention>
  nameWithType: IList<IEntityTypeAnnotationSetConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention>
  nameWithType.vb: IList(Of IEntityTypeAnnotationSetConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention)
  name.vb: IList(Of IEntityTypeAnnotationSetConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention
    name: IEntityTypeAnnotationSetConvention
    nameWithType: IEntityTypeAnnotationSetConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention
    name: IEntityTypeAnnotationSetConvention
    nameWithType: IEntityTypeAnnotationSetConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IForeignKeyConvention>
  nameWithType: IList<IForeignKeyConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention>
  nameWithType.vb: IList(Of IForeignKeyConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention)
  name.vb: IList(Of IForeignKeyConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention
    name: IForeignKeyConvention
    nameWithType: IForeignKeyConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention
    name: IForeignKeyConvention
    nameWithType: IForeignKeyConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IForeignKeyRemovedConvention>
  nameWithType: IList<IForeignKeyRemovedConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention>
  nameWithType.vb: IList(Of IForeignKeyRemovedConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention)
  name.vb: IList(Of IForeignKeyRemovedConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention
    name: IForeignKeyRemovedConvention
    nameWithType: IForeignKeyRemovedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention
    name: IForeignKeyRemovedConvention
    nameWithType: IForeignKeyRemovedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IKeyConvention>
  nameWithType: IList<IKeyConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention>
  nameWithType.vb: IList(Of IKeyConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention)
  name.vb: IList(Of IKeyConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention
    name: IKeyConvention
    nameWithType: IKeyConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention
    name: IKeyConvention
    nameWithType: IKeyConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IKeyRemovedConvention>
  nameWithType: IList<IKeyRemovedConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention>
  nameWithType.vb: IList(Of IKeyRemovedConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention)
  name.vb: IList(Of IKeyRemovedConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention
    name: IKeyRemovedConvention
    nameWithType: IKeyRemovedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention
    name: IKeyRemovedConvention
    nameWithType: IKeyRemovedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IPrimaryKeyConvention>
  nameWithType: IList<IPrimaryKeyConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention>
  nameWithType.vb: IList(Of IPrimaryKeyConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention)
  name.vb: IList(Of IPrimaryKeyConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention
    name: IPrimaryKeyConvention
    nameWithType: IPrimaryKeyConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention
    name: IPrimaryKeyConvention
    nameWithType: IPrimaryKeyConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IIndexConvention>
  nameWithType: IList<IIndexConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention>
  nameWithType.vb: IList(Of IIndexConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention)
  name.vb: IList(Of IIndexConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention
    name: IIndexConvention
    nameWithType: IIndexConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention
    name: IIndexConvention
    nameWithType: IIndexConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IIndexRemovedConvention>
  nameWithType: IList<IIndexRemovedConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention>
  nameWithType.vb: IList(Of IIndexRemovedConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention)
  name.vb: IList(Of IIndexRemovedConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention
    name: IIndexRemovedConvention
    nameWithType: IIndexRemovedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention
    name: IIndexRemovedConvention
    nameWithType: IIndexRemovedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IIndexUniquenessConvention>
  nameWithType: IList<IIndexUniquenessConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention>
  nameWithType.vb: IList(Of IIndexUniquenessConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention)
  name.vb: IList(Of IIndexUniquenessConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention
    name: IIndexUniquenessConvention
    nameWithType: IIndexUniquenessConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention
    name: IIndexUniquenessConvention
    nameWithType: IIndexUniquenessConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IPrincipalEndConvention>
  nameWithType: IList<IPrincipalEndConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention>
  nameWithType.vb: IList(Of IPrincipalEndConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention)
  name.vb: IList(Of IPrincipalEndConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention
    name: IPrincipalEndConvention
    nameWithType: IPrincipalEndConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention
    name: IPrincipalEndConvention
    nameWithType: IPrincipalEndConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IModelConvention>
  nameWithType: IList<IModelConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention>
  nameWithType.vb: IList(Of IModelConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention)
  name.vb: IList(Of IModelConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention
    name: IModelConvention
    nameWithType: IModelConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention
    name: IModelConvention
    nameWithType: IModelConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<INavigationConvention>
  nameWithType: IList<INavigationConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention>
  nameWithType.vb: IList(Of INavigationConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention)
  name.vb: IList(Of INavigationConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention
    name: INavigationConvention
    nameWithType: INavigationConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention
    name: INavigationConvention
    nameWithType: INavigationConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<INavigationRemovedConvention>
  nameWithType: IList<INavigationRemovedConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention>
  nameWithType.vb: IList(Of INavigationRemovedConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention)
  name.vb: IList(Of INavigationRemovedConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention
    name: INavigationRemovedConvention
    nameWithType: INavigationRemovedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention
    name: INavigationRemovedConvention
    nameWithType: INavigationRemovedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IForeignKeyUniquenessConvention>
  nameWithType: IList<IForeignKeyUniquenessConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention>
  nameWithType.vb: IList(Of IForeignKeyUniquenessConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention)
  name.vb: IList(Of IForeignKeyUniquenessConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention
    name: IForeignKeyUniquenessConvention
    nameWithType: IForeignKeyUniquenessConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention
    name: IForeignKeyUniquenessConvention
    nameWithType: IForeignKeyUniquenessConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IPropertyConvention>
  nameWithType: IList<IPropertyConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention>
  nameWithType.vb: IList(Of IPropertyConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention)
  name.vb: IList(Of IPropertyConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention
    name: IPropertyConvention
    nameWithType: IPropertyConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention
    name: IPropertyConvention
    nameWithType: IPropertyConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IPropertyNullableConvention>
  nameWithType: IList<IPropertyNullableConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention>
  nameWithType.vb: IList(Of IPropertyNullableConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention)
  name.vb: IList(Of IPropertyNullableConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention
    name: IPropertyNullableConvention
    nameWithType: IPropertyNullableConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention
    name: IPropertyNullableConvention
    nameWithType: IPropertyNullableConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IPropertyFieldChangedConvention>
  nameWithType: IList<IPropertyFieldChangedConvention>
  fullName: System.Collections.Generic.IList<Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention>
  nameWithType.vb: IList(Of IPropertyFieldChangedConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention)
  name.vb: IList(Of IPropertyFieldChangedConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention
    name: IPropertyFieldChangedConvention
    nameWithType: IPropertyFieldChangedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention
    name: IPropertyFieldChangedConvention
    nameWithType: IPropertyFieldChangedConvention
    fullName: Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention
  - name: )
    nameWithType: )
    fullName: )
