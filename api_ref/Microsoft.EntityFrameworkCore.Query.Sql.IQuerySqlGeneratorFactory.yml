### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
  id: IQuerySqlGeneratorFactory
  parent: Microsoft.EntityFrameworkCore.Query.Sql
  children:
  - Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateDefault(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  - Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: IQuerySqlGeneratorFactory
  nameWithType: IQuerySqlGeneratorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGeneratorFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IQuerySqlGeneratorFactory
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGeneratorFactory.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Sql
  summary: "\n    A factory for instances of <xref href=\"Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IQuerySqlGeneratorFactory
    content.vb: Public Interface IQuerySqlGeneratorFactory
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateDefault(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateDefault(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  id: CreateDefault(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
  langs:
  - csharp
  - vb
  name: CreateDefault(SelectExpression)
  nameWithType: IQuerySqlGeneratorFactory.CreateDefault(SelectExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateDefault(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGeneratorFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateDefault
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGeneratorFactory.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Sql
  summary: "\n    Creates the default SQL generator.\n"
  example: []
  syntax:
    content: IQuerySqlGenerator CreateDefault(SelectExpression selectExpression)
    content.vb: Function CreateDefault(selectExpression As SelectExpression) As IQuerySqlGenerator
    parameters:
    - id: selectExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
      description: 'The select expression. '
    return:
      type: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
      description: "\n    The new default.\n"
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression)
  id: CreateFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory
  langs:
  - csharp
  - vb
  name: CreateFromSql(SelectExpression, String, Expression)
  nameWithType: IQuerySqlGeneratorFactory.CreateFromSql(SelectExpression, String, Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression, System.String, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGeneratorFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateFromSql
    path: src/Microsoft.EntityFrameworkCore.Relational/Query/Sql/IQuerySqlGeneratorFactory.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Query.Sql
  summary: "\n    Creates a FromSql SQL generator.\n"
  example: []
  syntax:
    content: IQuerySqlGenerator CreateFromSql(SelectExpression selectExpression, string sql, Expression arguments)
    content.vb: Function CreateFromSql(selectExpression As SelectExpression, sql As String, arguments As Expression) As IQuerySqlGenerator
    parameters:
    - id: selectExpression
      type: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
      description: 'The select expression. '
    - id: sql
      type: System.String
      description: 'The SQL. '
    - id: arguments
      type: System.Linq.Expressions.Expression
      description: 'The arguments. '
    return:
      type: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
      description: "\n    The new from SQL.\n"
references:
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  commentId: T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
  parent: Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: IQuerySqlGenerator
  nameWithType: IQuerySqlGenerator
  fullName: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator
- uid: Microsoft.EntityFrameworkCore.Query.Sql
  commentId: N:Microsoft.EntityFrameworkCore.Query.Sql
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Sql
  nameWithType: Microsoft.EntityFrameworkCore.Query.Sql
  fullName: Microsoft.EntityFrameworkCore.Query.Sql
- uid: Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IQuerySqlGeneratorFactory, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IQuerySqlGeneratorFactory, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IQuerySqlGeneratorFactory, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IQuerySqlGeneratorFactory, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IQuerySqlGeneratorFactory, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IQuerySqlGeneratorFactory, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IQuerySqlGeneratorFactory, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IQuerySqlGeneratorFactory, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  commentId: T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
  parent: Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: SelectExpression
  nameWithType: SelectExpression
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression
- uid: Microsoft.EntityFrameworkCore.Query.Expressions
  commentId: N:Microsoft.EntityFrameworkCore.Query.Expressions
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Expressions
  nameWithType: Microsoft.EntityFrameworkCore.Query.Expressions
  fullName: Microsoft.EntityFrameworkCore.Query.Expressions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
