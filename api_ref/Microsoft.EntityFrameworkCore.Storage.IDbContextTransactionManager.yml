### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  id: IDbContextTransactionManager
  parent: Microsoft.EntityFrameworkCore.Storage
  children:
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  - Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  langs:
  - csharp
  - vb
  name: IDbContextTransactionManager
  nameWithType: IDbContextTransactionManager
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IDbContextTransactionManager
    path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\n<p>\n    Creates and manages the current transaction.\n</p>\n<p>\n    This interface is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: public interface IDbContextTransactionManager
    content.vb: Public Interface IDbContextTransactionManager
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  id: BeginTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  langs:
  - csharp
  - vb
  name: BeginTransaction()
  nameWithType: IDbContextTransactionManager.BeginTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BeginTransaction
    path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nBegins a new transaction.\n"
  example: []
  syntax:
    content: IDbContextTransaction BeginTransaction()
    content.vb: Function BeginTransaction As IDbContextTransaction
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
      description: 'The newly created transaction. '
  overload: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction*
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  id: BeginTransactionAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  langs:
  - csharp
  - vb
  name: BeginTransactionAsync(CancellationToken)
  nameWithType: IDbContextTransactionManager.BeginTransactionAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: BeginTransactionAsync
    path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nAsynchronously begins a new transaction.\n"
  example: []
  syntax:
    content: Task<IDbContextTransaction> BeginTransactionAsync(CancellationToken cancellationToken = null)
    content.vb: Function BeginTransactionAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IDbContextTransaction)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for the task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
      description: "\nA task that represents the asynchronous operation. The task result contains the newly created transaction.\n"
  overload: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync*
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  id: CommitTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  langs:
  - csharp
  - vb
  name: CommitTransaction()
  nameWithType: IDbContextTransactionManager.CommitTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CommitTransaction
    path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nCommits all changes made to the database in the current transaction.\n"
  example: []
  syntax:
    content: void CommitTransaction()
    content.vb: Sub CommitTransaction
  overload: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction*
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  commentId: M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  id: RollbackTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  langs:
  - csharp
  - vb
  name: RollbackTransaction()
  nameWithType: IDbContextTransactionManager.RollbackTransaction()
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RollbackTransaction
    path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nDiscards all changes made to the database in the current transaction.\n"
  example: []
  syntax:
    content: void RollbackTransaction()
    content.vb: Sub RollbackTransaction
  overload: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction*
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  commentId: P:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  id: CurrentTransaction
  parent: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager
  langs:
  - csharp
  - vb
  name: CurrentTransaction
  nameWithType: IDbContextTransactionManager.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CurrentTransaction
    path: src/Microsoft.EntityFrameworkCore/Storage/IDbContextTransactionManager.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Storage
  summary: "\nGets the current transaction.\n"
  example: []
  syntax:
    content: IDbContextTransaction CurrentTransaction { get; }
    content.vb: ReadOnly Property CurrentTransaction As IDbContextTransaction
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  overload: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
  isExternal: false
  name: BeginTransaction
  nameWithType: IDbContextTransactionManager.BeginTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
  isExternal: false
  name: BeginTransactionAsync
  nameWithType: IDbContextTransactionManager.BeginTransactionAsync
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync
- uid: System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  commentId: T:System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IDbContextTransaction>
  nameWithType: Task<IDbContextTransaction>
  fullName: System.Threading.Tasks.Task<Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction>
  nameWithType.vb: Task(Of IDbContextTransaction)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Task(Of IDbContextTransaction)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
  isExternal: false
  name: CommitTransaction
  nameWithType: IDbContextTransactionManager.CommitTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
  isExternal: false
  name: RollbackTransaction
  nameWithType: IDbContextTransactionManager.RollbackTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction*
  commentId: Overload:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
  isExternal: false
  name: CurrentTransaction
  nameWithType: IDbContextTransactionManager.CurrentTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction
