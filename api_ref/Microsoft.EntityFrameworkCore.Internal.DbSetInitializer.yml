### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer
  commentId: T:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer
  id: DbSetInitializer
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Internal.IDbSetSource)
  - Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  - Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  langs:
  - csharp
  - vb
  name: DbSetInitializer
  nameWithType: DbSetInitializer
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/DbSetInitializer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DbSetInitializer
    path: src/Microsoft.EntityFrameworkCore/Internal/DbSetInitializer.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class DbSetInitializer : IDbSetInitializer'
    content.vb: >-
      Public Class DbSetInitializer
          Implements IDbSetInitializer
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Internal.IDbSetSource)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Internal.IDbSetSource)
  id: '#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Internal.IDbSetSource)'
  parent: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer
  langs:
  - csharp
  - vb
  name: DbSetInitializer(IDbSetFinder, IDbSetSource)
  nameWithType: DbSetInitializer.DbSetInitializer(IDbSetFinder, IDbSetSource)
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.DbSetInitializer(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder, Microsoft.EntityFrameworkCore.Internal.IDbSetSource)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/DbSetInitializer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Internal/DbSetInitializer.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public DbSetInitializer(IDbSetFinder setFinder, IDbSetSource setSource)
    content.vb: Public Sub New(setFinder As IDbSetFinder, setSource As IDbSetSource)
    parameters:
    - id: setFinder
      type: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
    - id: setSource
      type: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  id: InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer
  langs:
  - csharp
  - vb
  name: InitializeSets(DbContext)
  nameWithType: DbSetInitializer.InitializeSets(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/DbSetInitializer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: InitializeSets
    path: src/Microsoft.EntityFrameworkCore/Internal/DbSetInitializer.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void InitializeSets(DbContext context)
    content.vb: Public Overridable Sub InitializeSets(context As DbContext)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  id: CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer
  langs:
  - csharp
  - vb
  name: CreateSet<TEntity>(DbContext)
  nameWithType: DbSetInitializer.CreateSet<TEntity>(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.CreateSet<TEntity>(Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/DbSetInitializer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateSet
    path: src/Microsoft.EntityFrameworkCore/Internal/DbSetInitializer.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public virtual DbSet<TEntity> CreateSet<TEntity>(DbContext context)where TEntity : class'
    content.vb: Public Overridable Function CreateSet(Of TEntity As Class)(context As DbContext) As DbSet(Of TEntity)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
    typeParameters:
    - id: TEntity
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  implements:
  - Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType.vb: DbSetInitializer.CreateSet(Of TEntity)(DbContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.CreateSet(Of TEntity)(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: CreateSet(Of TEntity)(DbContext)
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IDbSetInitializer
  nameWithType: IDbSetInitializer
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<DbSetInitializer, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<DbSetInitializer, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Internal.DbSetInitializer, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of DbSetInitializer, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Internal.DbSetInitializer, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of DbSetInitializer, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<DbSetInitializer, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<DbSetInitializer, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Internal.DbSetInitializer, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of DbSetInitializer, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of DbSetInitializer, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Internal.DbSetInitializer, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IDbSetFinder
  nameWithType: IDbSetFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetFinder
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetSource
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IDbSetSource
  nameWithType: IDbSetSource
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  isExternal: false
  name: InitializeSets(DbContext)
  nameWithType: IDbSetInitializer.InitializeSets(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
    name: InitializeSets
    nameWithType: IDbSetInitializer.InitializeSets
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)
    name: InitializeSets
    nameWithType: IDbSetInitializer.InitializeSets
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  parent: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer
  definition: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
  name: CreateSet<TEntity>(DbContext)
  nameWithType: IDbSetInitializer.CreateSet<TEntity>(DbContext)
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet<TEntity>(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType.vb: IDbSetInitializer.CreateSet(Of TEntity)(DbContext)
  fullname.vb: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet(Of TEntity)(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: CreateSet(Of TEntity)(DbContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
    name: CreateSet<TEntity>
    nameWithType: IDbSetInitializer.CreateSet<TEntity>
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)
    name: CreateSet(Of TEntity)
    nameWithType: IDbSetInitializer.CreateSet(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{``0}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: false
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullname.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
