### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  id: ExpressionPrinter
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter})
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess(System.String)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault(System.Linq.Expressions.DefaultExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry(System.Linq.Expressions.TryExpression)
  - Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)
  langs:
  - csharp
  - vb
  name: ExpressionPrinter
  nameWithType: ExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ExpressionPrinter
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ExpressionPrinter : ExpressionVisitorBase, IExpressionPrinter'
    content.vb: >-
      Public Class ExpressionPrinter
          Inherits ExpressionVisitorBase
          Implements IExpressionPrinter
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: ExpressionPrinter()
  nameWithType: ExpressionPrinter.ExpressionPrinter()
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ExpressionPrinter()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ExpressionPrinter()
    content.vb: Public Sub New
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter})
  id: '#ctor(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter})'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: ExpressionPrinter(List<ExpressionPrinter.IConstantPrinter>)
  nameWithType: ExpressionPrinter.ExpressionPrinter(List<ExpressionPrinter.IConstantPrinter>)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ExpressionPrinter(System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected ExpressionPrinter(List<ExpressionPrinter.IConstantPrinter> constantPrinters)
    content.vb: Protected Sub New(constantPrinters As List(Of ExpressionPrinter.IConstantPrinter))
    parameters:
    - id: constantPrinters
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter}
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor*
  nameWithType.vb: ExpressionPrinter.ExpressionPrinter(List(Of ExpressionPrinter.IConstantPrinter))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ExpressionPrinter(System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter))
  name.vb: ExpressionPrinter(List(Of ExpressionPrinter.IConstantPrinter))
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder
  id: StringBuilder
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: StringBuilder
  nameWithType: ExpressionPrinter.StringBuilder
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StringBuilder
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 81
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IndentedStringBuilder StringBuilder { get; }
    content.vb: Public Overridable ReadOnly Property StringBuilder As IndentedStringBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append
  id: Append
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: Append
  nameWithType: ExpressionPrinter.Append
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Append
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected static Action<IndentedStringBuilder, string> Append { get; }
    content.vb: Protected Shared ReadOnly Property Append As Action(Of IndentedStringBuilder, String)
    parameters: []
    return:
      type: System.Action{Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String}
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append*
  modifiers.csharp:
  - protected
  - static
  - get
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine
  id: AppendLine
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: AppendLine
  nameWithType: ExpressionPrinter.AppendLine
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AppendLine
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 96
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected static Action<IndentedStringBuilder, string> AppendLine { get; }
    content.vb: Protected Shared ReadOnly Property AppendLine As Action(Of IndentedStringBuilder, String)
    parameters: []
    return:
      type: System.Action{Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String}
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine*
  modifiers.csharp:
  - protected
  - static
  - get
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)
  id: Print(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: Print(Expression)
  nameWithType: ExpressionPrinter.Print(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Print
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 105
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string Print(Expression expression)
    content.vb: Public Overridable Function Print(expression As Expression) As String
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print*
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery
  id: TrackedQuery
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: TrackedQuery
  nameWithType: ExpressionPrinter.TrackedQuery
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TrackedQuery
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 124
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool TrackedQuery { get; }
    content.vb: Public Overridable ReadOnly Property TrackedQuery As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)
  id: Visit(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: Visit(Expression)
  nameWithType: ExpressionPrinter.Visit(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Visit
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 130
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override Expression Visit(Expression node)
    content.vb: Public Overrides Function Visit(node As Expression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.Expression
  overridden: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)
  id: VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitBinary(BinaryExpression)
  nameWithType: ExpressionPrinter.VisitBinary(BinaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitBinary
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 233
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitBinary(BinaryExpression node)
    content.vb: Protected Overrides Function VisitBinary(node As BinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BinaryExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)
  id: VisitBlock(System.Linq.Expressions.BlockExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitBlock(BlockExpression)
  nameWithType: ExpressionPrinter.VisitBlock(BlockExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitBlock
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 267
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitBlock(BlockExpression node)
    content.vb: Protected Overrides Function VisitBlock(node As BlockExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BlockExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  id: VisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitConditional(ConditionalExpression)
  nameWithType: ExpressionPrinter.VisitConditional(ConditionalExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitConditional
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 306
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitConditional(ConditionalExpression node)
    content.vb: Protected Overrides Function VisitConditional(node As ConditionalExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ConditionalExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)
  id: VisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitConstant(ConstantExpression)
  nameWithType: ExpressionPrinter.VisitConstant(ConstantExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitConstant
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 325
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitConstant(ConstantExpression node)
    content.vb: Protected Overrides Function VisitConstant(node As ConstantExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ConstantExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)
  id: VisitGoto(System.Linq.Expressions.GotoExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitGoto(GotoExpression)
  nameWithType: ExpressionPrinter.VisitGoto(GotoExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitGoto
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 342
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitGoto(GotoExpression node)
    content.vb: Protected Overrides Function VisitGoto(node As GotoExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.GotoExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)
  id: VisitLabel(System.Linq.Expressions.LabelExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitLabel(LabelExpression)
  nameWithType: ExpressionPrinter.VisitLabel(LabelExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitLabel
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 359
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitLabel(LabelExpression node)
    content.vb: Protected Overrides Function VisitLabel(node As LabelExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.LabelExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  id: VisitLambda``1(System.Linq.Expressions.Expression{``0})
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitLambda<T>(Expression<T>)
  nameWithType: ExpressionPrinter.VisitLambda<T>(Expression<T>)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitLambda
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 370
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitLambda<T>(Expression<T> node)
    content.vb: Protected Overrides Function VisitLambda(Of T)(node As Expression(Of T)) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda*
  nameWithType.vb: ExpressionPrinter.VisitLambda(Of T)(Expression(Of T))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: VisitLambda(Of T)(Expression(Of T))
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)
  id: VisitMember(System.Linq.Expressions.MemberExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitMember(MemberExpression)
  nameWithType: ExpressionPrinter.VisitMember(MemberExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitMember
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 401
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitMember(MemberExpression node)
    content.vb: Protected Overrides Function VisitMember(node As MemberExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  id: VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitMemberInit(MemberInitExpression)
  nameWithType: ExpressionPrinter.VisitMemberInit(MemberInitExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitMemberInit
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 422
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitMemberInit(MemberInitExpression node)
    content.vb: Protected Overrides Function VisitMemberInit(node As MemberInitExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberInitExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: ExpressionPrinter.VisitMethodCall(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitMethodCall
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 455
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitMethodCall(MethodCallExpression node)
    content.vb: Protected Overrides Function VisitMethodCall(node As MethodCallExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MethodCallExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)
  id: VisitNew(System.Linq.Expressions.NewExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitNew(NewExpression)
  nameWithType: ExpressionPrinter.VisitNew(NewExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitNew
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 526
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitNew(NewExpression node)
    content.vb: Protected Overrides Function VisitNew(node As NewExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.NewExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  id: VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitNewArray(NewArrayExpression)
  nameWithType: ExpressionPrinter.VisitNewArray(NewArrayExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitNewArray
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 551
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitNewArray(NewArrayExpression node)
    content.vb: Protected Overrides Function VisitNewArray(node As NewArrayExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.NewArrayExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)
  id: VisitParameter(System.Linq.Expressions.ParameterExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitParameter(ParameterExpression)
  nameWithType: ExpressionPrinter.VisitParameter(ParameterExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitParameter
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 574
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitParameter(ParameterExpression node)
    content.vb: Protected Overrides Function VisitParameter(node As ParameterExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ParameterExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)
  id: VisitUnary(System.Linq.Expressions.UnaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitUnary(UnaryExpression)
  nameWithType: ExpressionPrinter.VisitUnary(UnaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitUnary
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 592
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitUnary(UnaryExpression node)
    content.vb: Protected Overrides Function VisitUnary(node As UnaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.UnaryExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault(System.Linq.Expressions.DefaultExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault(System.Linq.Expressions.DefaultExpression)
  id: VisitDefault(System.Linq.Expressions.DefaultExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitDefault(DefaultExpression)
  nameWithType: ExpressionPrinter.VisitDefault(DefaultExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault(System.Linq.Expressions.DefaultExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitDefault
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 625
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitDefault(DefaultExpression node)
    content.vb: Protected Overrides Function VisitDefault(node As DefaultExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.DefaultExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry(System.Linq.Expressions.TryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry(System.Linq.Expressions.TryExpression)
  id: VisitTry(System.Linq.Expressions.TryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitTry(TryExpression)
  nameWithType: ExpressionPrinter.VisitTry(TryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry(System.Linq.Expressions.TryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitTry
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 636
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitTry(TryExpression node)
    content.vb: Protected Overrides Function VisitTry(node As TryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.TryExpression
    return:
      type: System.Linq.Expressions.Expression
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension(System.Linq.Expressions.Expression)
  id: VisitExtension(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: VisitExtension(Expression)
  nameWithType: ExpressionPrinter.VisitExtension(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitExtension
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 653
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitExtension(Expression node)
    content.vb: Protected Overrides Function VisitExtension(node As Expression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.Expression
  overridden: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess(System.String)
  id: PostProcess(System.String)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter
  langs:
  - csharp
  - vb
  name: PostProcess(String)
  nameWithType: ExpressionPrinter.PostProcess(String)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PostProcess
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/ExpressionPrinter.cs
    startLine: 680
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual string PostProcess(string queryPlan)
    content.vb: Protected Overridable Function PostProcess(queryPlan As String) As String
    parameters:
    - id: queryPlan
      type: System.String
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: ExpressionVisitorBase
  nameWithType: ExpressionVisitorBase
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IExpressionPrinter
  nameWithType: IExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor
  isExternal: false
  name: ExpressionPrinter
  nameWithType: ExpressionPrinter.ExpressionPrinter
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ExpressionPrinter
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ExpressionPrinter.IConstantPrinter>
  nameWithType: List<ExpressionPrinter.IConstantPrinter>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter>
  nameWithType.vb: List(Of ExpressionPrinter.IConstantPrinter)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter)
  name.vb: List(Of ExpressionPrinter.IConstantPrinter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter
    name: ExpressionPrinter.IConstantPrinter
    nameWithType: ExpressionPrinter.IConstantPrinter
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter
    name: ExpressionPrinter.IConstantPrinter
    nameWithType: ExpressionPrinter.IConstantPrinter
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder
  isExternal: false
  name: StringBuilder
  nameWithType: ExpressionPrinter.StringBuilder
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder
- uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: IndentedStringBuilder
  nameWithType: IndentedStringBuilder
  fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append
  isExternal: false
  name: Append
  nameWithType: ExpressionPrinter.Append
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append
- uid: System.Action{Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String}
  commentId: T:System.Action{Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String}
  parent: System
  definition: System.Action`2
  name: Action<IndentedStringBuilder, String>
  nameWithType: Action<IndentedStringBuilder, String>
  fullName: System.Action<Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder, System.String>
  nameWithType.vb: Action(Of IndentedStringBuilder, String)
  fullname.vb: System.Action(Of Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder, System.String)
  name.vb: Action(Of IndentedStringBuilder, String)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
    name: IndentedStringBuilder
    nameWithType: IndentedStringBuilder
    fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
    name: IndentedStringBuilder
    nameWithType: IndentedStringBuilder
    fullName: Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullname.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine
  isExternal: false
  name: AppendLine
  nameWithType: ExpressionPrinter.AppendLine
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print
  isExternal: false
  name: Print
  nameWithType: ExpressionPrinter.Print
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter
  isExternal: true
  name: Print(Expression)
  nameWithType: IExpressionPrinter.Print(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression)
    name: Print
    nameWithType: IExpressionPrinter.Print
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression)
    name: Print
    nameWithType: IExpressionPrinter.Print
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery
  isExternal: false
  name: TrackedQuery
  nameWithType: ExpressionPrinter.TrackedQuery
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: Visit(Expression)
  nameWithType: ExpressionVisitorBase.Visit(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit
  isExternal: false
  name: Visit
  nameWithType: ExpressionPrinter.Visit
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary
  isExternal: false
  name: VisitBinary
  nameWithType: ExpressionPrinter.VisitBinary
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary
- uid: System.Linq.Expressions.BinaryExpression
  commentId: T:System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock
  isExternal: false
  name: VisitBlock
  nameWithType: ExpressionPrinter.VisitBlock
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock
- uid: System.Linq.Expressions.BlockExpression
  commentId: T:System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional
  isExternal: false
  name: VisitConditional
  nameWithType: ExpressionPrinter.VisitConditional
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional
- uid: System.Linq.Expressions.ConditionalExpression
  commentId: T:System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant
  isExternal: false
  name: VisitConstant
  nameWithType: ExpressionPrinter.VisitConstant
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant
- uid: System.Linq.Expressions.ConstantExpression
  commentId: T:System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ConstantExpression
  nameWithType: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto
  isExternal: false
  name: VisitGoto
  nameWithType: ExpressionPrinter.VisitGoto
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto
- uid: System.Linq.Expressions.GotoExpression
  commentId: T:System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel
  isExternal: false
  name: VisitLabel
  nameWithType: ExpressionPrinter.VisitLabel
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel
- uid: System.Linq.Expressions.LabelExpression
  commentId: T:System.Linq.Expressions.LabelExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: LabelExpression
  nameWithType: LabelExpression
  fullName: System.Linq.Expressions.LabelExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda
  isExternal: false
  name: VisitLambda<T>
  nameWithType: ExpressionPrinter.VisitLambda<T>
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda<T>
  nameWithType.vb: ExpressionPrinter.VisitLambda(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda(Of T)
  name.vb: VisitLambda(Of T)
- uid: System.Linq.Expressions.Expression{{T}}
  commentId: T:System.Linq.Expressions.Expression{``0}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<T>
  nameWithType: Expression<T>
  fullName: System.Linq.Expressions.Expression<T>
  nameWithType.vb: Expression(Of T)
  fullname.vb: System.Linq.Expressions.Expression(Of T)
  name.vb: Expression(Of T)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember
  isExternal: false
  name: VisitMember
  nameWithType: ExpressionPrinter.VisitMember
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember
- uid: System.Linq.Expressions.MemberExpression
  commentId: T:System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit
  isExternal: false
  name: VisitMemberInit
  nameWithType: ExpressionPrinter.VisitMemberInit
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit
- uid: System.Linq.Expressions.MemberInitExpression
  commentId: T:System.Linq.Expressions.MemberInitExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MemberInitExpression
  nameWithType: MemberInitExpression
  fullName: System.Linq.Expressions.MemberInitExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall
  isExternal: false
  name: VisitMethodCall
  nameWithType: ExpressionPrinter.VisitMethodCall
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew
  isExternal: false
  name: VisitNew
  nameWithType: ExpressionPrinter.VisitNew
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew
- uid: System.Linq.Expressions.NewExpression
  commentId: T:System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray
  isExternal: false
  name: VisitNewArray
  nameWithType: ExpressionPrinter.VisitNewArray
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray
- uid: System.Linq.Expressions.NewArrayExpression
  commentId: T:System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: NewArrayExpression
  nameWithType: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter
  isExternal: false
  name: VisitParameter
  nameWithType: ExpressionPrinter.VisitParameter
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter
- uid: System.Linq.Expressions.ParameterExpression
  commentId: T:System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary
  isExternal: false
  name: VisitUnary
  nameWithType: ExpressionPrinter.VisitUnary
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary
- uid: System.Linq.Expressions.UnaryExpression
  commentId: T:System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault
  isExternal: false
  name: VisitDefault
  nameWithType: ExpressionPrinter.VisitDefault
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault
- uid: System.Linq.Expressions.DefaultExpression
  commentId: T:System.Linq.Expressions.DefaultExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: DefaultExpression
  nameWithType: DefaultExpression
  fullName: System.Linq.Expressions.DefaultExpression
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry
  isExternal: false
  name: VisitTry
  nameWithType: ExpressionPrinter.VisitTry
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry
- uid: System.Linq.Expressions.TryExpression
  commentId: T:System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: VisitExtension(Expression)
  nameWithType: ExpressionVisitorBase.VisitExtension(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension
  isExternal: false
  name: VisitExtension
  nameWithType: ExpressionPrinter.VisitExtension
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension
- uid: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess*
  commentId: Overload:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess
  isExternal: false
  name: PostProcess
  nameWithType: ExpressionPrinter.PostProcess
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess
