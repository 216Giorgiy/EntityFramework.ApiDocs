### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  id: EntityTypeWriter
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities)
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddAttributes(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration})
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddClass
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddConstructor
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddNavigationProperties
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddProperties
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.WriteCode(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration)
  langs:
  - csharp
  - vb
  name: EntityTypeWriter
  nameWithType: EntityTypeWriter
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: EntityTypeWriter
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class EntityTypeWriter
    content.vb: Public Class EntityTypeWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities)
  id: '#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  langs:
  - csharp
  - vb
  name: EntityTypeWriter(CSharpUtilities)
  nameWithType: EntityTypeWriter.EntityTypeWriter(CSharpUtilities)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.EntityTypeWriter(Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public EntityTypeWriter(CSharpUtilities cSharpUtilities)
    content.vb: Public Sub New(cSharpUtilities As CSharpUtilities)
    parameters:
    - id: cSharpUtilities
      type: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.WriteCode(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.WriteCode(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration)
  id: WriteCode(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  langs:
  - csharp
  - vb
  name: WriteCode(EntityConfiguration)
  nameWithType: EntityTypeWriter.WriteCode(EntityConfiguration)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.WriteCode(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: WriteCode
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string WriteCode(EntityConfiguration entityConfiguration)
    content.vb: Public Overridable Function WriteCode(entityConfiguration As EntityConfiguration) As String
    parameters:
    - id: entityConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddClass
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddClass
  id: AddClass
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  langs:
  - csharp
  - vb
  name: AddClass()
  nameWithType: EntityTypeWriter.AddClass()
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddClass()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddClass
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
    startLine: 82
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddClass()
    content.vb: Public Overridable Sub AddClass
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddConstructor
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddConstructor
  id: AddConstructor
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  langs:
  - csharp
  - vb
  name: AddConstructor()
  nameWithType: EntityTypeWriter.AddConstructor()
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddConstructor()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddConstructor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
    startLine: 100
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddConstructor()
    content.vb: Public Overridable Sub AddConstructor
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddProperties
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddProperties
  id: AddProperties
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  langs:
  - csharp
  - vb
  name: AddProperties()
  nameWithType: EntityTypeWriter.AddProperties()
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddProperties()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddProperties
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
    startLine: 125
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddProperties()
    content.vb: Public Overridable Sub AddProperties
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddNavigationProperties
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddNavigationProperties
  id: AddNavigationProperties
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  langs:
  - csharp
  - vb
  name: AddNavigationProperties()
  nameWithType: EntityTypeWriter.AddNavigationProperties()
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddNavigationProperties()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddNavigationProperties
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
    startLine: 145
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddNavigationProperties()
    content.vb: Public Overridable Sub AddNavigationProperties
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddAttributes(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration})
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddAttributes(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration})
  id: AddAttributes(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration})
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter
  langs:
  - csharp
  - vb
  name: AddAttributes(IEnumerable<IAttributeConfiguration>)
  nameWithType: EntityTypeWriter.AddAttributes(IEnumerable<IAttributeConfiguration>)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddAttributes(System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddAttributes
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Internal/EntityTypeWriter.cs
    startLine: 170
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void AddAttributes(IEnumerable<IAttributeConfiguration> attributeConfigurations)
    content.vb: Public Overridable Sub AddAttributes(attributeConfigurations As IEnumerable(Of IAttributeConfiguration))
    parameters:
    - id: attributeConfigurations
      type: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration}
  nameWithType.vb: EntityTypeWriter.AddAttributes(IEnumerable(Of IAttributeConfiguration))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.AddAttributes(System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration))
  name.vb: AddAttributes(IEnumerable(Of IAttributeConfiguration))
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<EntityTypeWriter, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<EntityTypeWriter, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of EntityTypeWriter, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of EntityTypeWriter, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<EntityTypeWriter, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<EntityTypeWriter, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of EntityTypeWriter, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of EntityTypeWriter, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Scaffolding.Internal.EntityTypeWriter, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Internal
  isExternal: false
  name: CSharpUtilities
  nameWithType: CSharpUtilities
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: EntityConfiguration
  nameWithType: EntityConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAttributeConfiguration>
  nameWithType: IEnumerable<IAttributeConfiguration>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration>
  nameWithType.vb: IEnumerable(Of IAttributeConfiguration)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration)
  name.vb: IEnumerable(Of IAttributeConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
    name: IAttributeConfiguration
    nameWithType: IAttributeConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
    name: IAttributeConfiguration
    nameWithType: IAttributeConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
