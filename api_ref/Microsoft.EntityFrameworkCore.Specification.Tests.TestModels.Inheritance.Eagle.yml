### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle
  id: Eagle
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.#ctor
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Group
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Prey
  langs:
  - csharp
  - vb
  name: Eagle
  nameWithType: Eagle
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Eagle.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Eagle
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Eagle.cs
    startLine: 7
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: 'public class Eagle : Bird'
    content.vb: >-
      Public Class Eagle
          Inherits Bird
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird.IsFlightless
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird.EagleId
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.Species
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.Name
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.CountryId
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle
  langs:
  - csharp
  - vb
  name: Eagle()
  nameWithType: Eagle.Eagle()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Eagle()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Eagle.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Eagle.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: public Eagle()
    content.vb: Public Sub New
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Group
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Group
  id: Group
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: Eagle.Group
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Group
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Eagle.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Group
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Eagle.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: public EagleGroup Group { get; set; }
    content.vb: Public Property Group As EagleGroup
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.EagleGroup
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Group*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Prey
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Prey
  id: Prey
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle
  langs:
  - csharp
  - vb
  name: Prey
  nameWithType: Eagle.Prey
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Prey
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Eagle.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Prey
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/TestModels/Inheritance/Eagle.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  syntax:
    content: public ICollection<Bird> Prey { get; set; }
    content.vb: Public Property Prey As ICollection(Of Bird)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird}
  overload: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Prey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  isExternal: false
  name: Animal
  nameWithType: Animal
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  isExternal: false
  name: Bird
  nameWithType: Bird
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird.IsFlightless
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird.IsFlightless
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
  isExternal: false
  name: IsFlightless
  nameWithType: Bird.IsFlightless
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird.IsFlightless
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird.EagleId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird.EagleId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
  isExternal: false
  name: EagleId
  nameWithType: Bird.EagleId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird.EagleId
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.Species
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.Species
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
  isExternal: false
  name: Species
  nameWithType: Animal.Species
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.Species
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.Name
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.Name
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
  isExternal: false
  name: Name
  nameWithType: Animal.Name
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.Name
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.CountryId
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.CountryId
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal
  isExternal: false
  name: CountryId
  nameWithType: Animal.CountryId
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Animal.CountryId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.#ctor
  isExternal: false
  name: Eagle
  nameWithType: Eagle.Eagle
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Eagle
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Group*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Group
  isExternal: false
  name: Group
  nameWithType: Eagle.Group
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Group
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.EagleGroup
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.EagleGroup
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  isExternal: false
  name: EagleGroup
  nameWithType: EagleGroup
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.EagleGroup
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Prey*
  commentId: Overload:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Prey
  isExternal: false
  name: Prey
  nameWithType: Eagle.Prey
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Eagle.Prey
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Bird>
  nameWithType: ICollection<Bird>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird>
  nameWithType.vb: ICollection(Of Bird)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird)
  name.vb: ICollection(Of Bird)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
    name: Bird
    nameWithType: Bird
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
    name: Bird
    nameWithType: Bird
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.Bird
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
