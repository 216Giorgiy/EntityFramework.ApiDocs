### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  id: KeyFluentApiConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.FluentApiLines
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.HasAttributeEquivalent
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.Key
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.LambdaIdentifier
  langs:
  - csharp
  - vb
  name: KeyFluentApiConfiguration
  nameWithType: KeyFluentApiConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: KeyFluentApiConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class KeyFluentApiConfiguration : IFluentApiConfiguration'
    content.vb: >-
      Public Class KeyFluentApiConfiguration
          Implements IFluentApiConfiguration
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)
  id: '#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  langs:
  - csharp
  - vb
  name: KeyFluentApiConfiguration(String, Key)
  nameWithType: KeyFluentApiConfiguration.KeyFluentApiConfiguration(String, Key)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.KeyFluentApiConfiguration(System.String, Microsoft.EntityFrameworkCore.Metadata.Internal.Key)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public KeyFluentApiConfiguration(string lambdaIdentifier, Key key)
    content.vb: Public Sub New(lambdaIdentifier As String, key As Key)
    parameters:
    - id: lambdaIdentifier
      type: System.String
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.LambdaIdentifier
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.LambdaIdentifier
  id: LambdaIdentifier
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  langs:
  - csharp
  - vb
  name: LambdaIdentifier
  nameWithType: KeyFluentApiConfiguration.LambdaIdentifier
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.LambdaIdentifier
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LambdaIdentifier
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
    startLine: 38
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual string LambdaIdentifier { get; }
    content.vb: Public Overridable ReadOnly Property LambdaIdentifier As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.Key
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.Key
  id: Key
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: KeyFluentApiConfiguration.Key
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.Key
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Key
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual Key Key { get; }
    content.vb: Public Overridable ReadOnly Property Key As Key
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.HasAttributeEquivalent
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.HasAttributeEquivalent
  id: HasAttributeEquivalent
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  langs:
  - csharp
  - vb
  name: HasAttributeEquivalent
  nameWithType: KeyFluentApiConfiguration.HasAttributeEquivalent
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.HasAttributeEquivalent
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: HasAttributeEquivalent
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool HasAttributeEquivalent { get; set; }
    content.vb: Public Overridable Property HasAttributeEquivalent As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.HasAttributeEquivalent
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.FluentApiLines
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.FluentApiLines
  id: FluentApiLines
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration
  langs:
  - csharp
  - vb
  name: FluentApiLines
  nameWithType: KeyFluentApiConfiguration.FluentApiLines
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration.FluentApiLines
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FluentApiLines
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/KeyFluentApiConfiguration.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual ICollection<string> FluentApiLines { get; }
    content.vb: Public Overridable ReadOnly Property FluentApiLines As ICollection(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
  implements:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.FluentApiLines
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: IFluentApiConfiguration
  nameWithType: IFluentApiConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.Key
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Key
  nameWithType: Key
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.Key
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.HasAttributeEquivalent
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.HasAttributeEquivalent
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  isExternal: false
  name: HasAttributeEquivalent
  nameWithType: IFluentApiConfiguration.HasAttributeEquivalent
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.HasAttributeEquivalent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.FluentApiLines
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.FluentApiLines
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration
  isExternal: false
  name: FluentApiLines
  nameWithType: IFluentApiConfiguration.FluentApiLines
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IFluentApiConfiguration.FluentApiLines
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullname.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
