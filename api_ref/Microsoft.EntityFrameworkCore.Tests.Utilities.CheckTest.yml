### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  commentId: T:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  id: CheckTest
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities
  children:
  - Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_is_empty
  - Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_is_null
  - Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_name_empty
  - Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_empty
  - Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_parameter_name_null
  - Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_whitespace
  - Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_null_throws_when_arg_is_null
  - Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_null_throws_when_arg_name_empty
  - Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Valid_entity_type_throws_when_type_is_not_class
  langs:
  - csharp
  - vb
  name: CheckTest
  nameWithType: CheckTest
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CheckTest
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: public class CheckTest
    content.vb: Public Class CheckTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_null_throws_when_arg_is_null
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_null_throws_when_arg_is_null
  id: Not_null_throws_when_arg_is_null
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  langs:
  - csharp
  - vb
  name: Not_null_throws_when_arg_is_null()
  nameWithType: CheckTest.Not_null_throws_when_arg_is_null()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_null_throws_when_arg_is_null()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Not_null_throws_when_arg_is_null
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Not_null_throws_when_arg_is_null()
    content.vb: >-
      <Fact>

      Public Sub Not_null_throws_when_arg_is_null
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_null_throws_when_arg_name_empty
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_null_throws_when_arg_name_empty
  id: Not_null_throws_when_arg_name_empty
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  langs:
  - csharp
  - vb
  name: Not_null_throws_when_arg_name_empty()
  nameWithType: CheckTest.Not_null_throws_when_arg_name_empty()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_null_throws_when_arg_name_empty()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Not_null_throws_when_arg_name_empty
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Not_null_throws_when_arg_name_empty()
    content.vb: >-
      <Fact>

      Public Sub Not_null_throws_when_arg_name_empty
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_empty
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_empty
  id: Not_empty_throws_when_empty
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  langs:
  - csharp
  - vb
  name: Not_empty_throws_when_empty()
  nameWithType: CheckTest.Not_empty_throws_when_empty()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_empty()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Not_empty_throws_when_empty
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Not_empty_throws_when_empty()
    content.vb: >-
      <Fact>

      Public Sub Not_empty_throws_when_empty
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_whitespace
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_whitespace
  id: Not_empty_throws_when_whitespace
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  langs:
  - csharp
  - vb
  name: Not_empty_throws_when_whitespace()
  nameWithType: CheckTest.Not_empty_throws_when_whitespace()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_whitespace()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Not_empty_throws_when_whitespace
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Not_empty_throws_when_whitespace()
    content.vb: >-
      <Fact>

      Public Sub Not_empty_throws_when_whitespace
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_parameter_name_null
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_parameter_name_null
  id: Not_empty_throws_when_parameter_name_null
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  langs:
  - csharp
  - vb
  name: Not_empty_throws_when_parameter_name_null()
  nameWithType: CheckTest.Not_empty_throws_when_parameter_name_null()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Not_empty_throws_when_parameter_name_null()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Not_empty_throws_when_parameter_name_null
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Not_empty_throws_when_parameter_name_null()
    content.vb: >-
      <Fact>

      Public Sub Not_empty_throws_when_parameter_name_null
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_is_empty
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_is_empty
  id: Generic_Not_empty_throws_when_arg_is_empty
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  langs:
  - csharp
  - vb
  name: Generic_Not_empty_throws_when_arg_is_empty()
  nameWithType: CheckTest.Generic_Not_empty_throws_when_arg_is_empty()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_is_empty()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Generic_Not_empty_throws_when_arg_is_empty
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Generic_Not_empty_throws_when_arg_is_empty()
    content.vb: >-
      <Fact>

      Public Sub Generic_Not_empty_throws_when_arg_is_empty
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_is_null
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_is_null
  id: Generic_Not_empty_throws_when_arg_is_null
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  langs:
  - csharp
  - vb
  name: Generic_Not_empty_throws_when_arg_is_null()
  nameWithType: CheckTest.Generic_Not_empty_throws_when_arg_is_null()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_is_null()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Generic_Not_empty_throws_when_arg_is_null
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Generic_Not_empty_throws_when_arg_is_null()
    content.vb: >-
      <Fact>

      Public Sub Generic_Not_empty_throws_when_arg_is_null
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_name_empty
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_name_empty
  id: Generic_Not_empty_throws_when_arg_name_empty
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  langs:
  - csharp
  - vb
  name: Generic_Not_empty_throws_when_arg_name_empty()
  nameWithType: CheckTest.Generic_Not_empty_throws_when_arg_name_empty()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Generic_Not_empty_throws_when_arg_name_empty()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Generic_Not_empty_throws_when_arg_name_empty
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Generic_Not_empty_throws_when_arg_name_empty()
    content.vb: >-
      <Fact>

      Public Sub Generic_Not_empty_throws_when_arg_name_empty
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Valid_entity_type_throws_when_type_is_not_class
  commentId: M:Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Valid_entity_type_throws_when_type_is_not_class
  id: Valid_entity_type_throws_when_type_is_not_class
  parent: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest
  langs:
  - csharp
  - vb
  name: Valid_entity_type_throws_when_type_is_not_class()
  nameWithType: CheckTest.Valid_entity_type_throws_when_type_is_not_class()
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities.CheckTest.Valid_entity_type_throws_when_type_is_not_class()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Valid_entity_type_throws_when_type_is_not_class
    path: test/Microsoft.EntityFrameworkCore.Tests/Utilities/CheckTest.cs
    startLine: 64
  assemblies:
  - Microsoft.EntityFrameworkCore.Tests
  namespace: Microsoft.EntityFrameworkCore.Tests.Utilities
  syntax:
    content: >-
      [Fact]

      public void Valid_entity_type_throws_when_type_is_not_class()
    content.vb: >-
      <Fact>

      Public Sub Valid_entity_type_throws_when_type_is_not_class
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.Tests.Utilities
  commentId: N:Microsoft.EntityFrameworkCore.Tests.Utilities
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Tests.Utilities
  nameWithType: Microsoft.EntityFrameworkCore.Tests.Utilities
  fullName: Microsoft.EntityFrameworkCore.Tests.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
