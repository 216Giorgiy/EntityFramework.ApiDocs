### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer
  id: QueryOptimizer
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  langs:
  - csharp
  - vb
  name: QueryOptimizer
  nameWithType: QueryOptimizer
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryOptimizer
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class QueryOptimizer : SubQueryFromClauseFlattener, IQueryModelVisitor, IQueryOptimizer'
    content.vb: >-
      Public Class QueryOptimizer
          Inherits SubQueryFromClauseFlattener
          Implements IQueryModelVisitor, IQueryOptimizer
  inheritance:
  - System.Object
  - Remotion.Linq.QueryModelVisitorBase
  - Remotion.Linq.Transformations.SubQueryFromClauseFlattener
  implements:
  - Remotion.Linq.IQueryModelVisitor
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer
  inheritedMembers:
  - Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  - Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  - Remotion.Linq.Transformations.SubQueryFromClauseFlattener.CheckFlattenable(Remotion.Linq.QueryModel)
  - Remotion.Linq.Transformations.SubQueryFromClauseFlattener.InsertBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel,System.Int32)
  - Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
  - Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  - Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  - Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  - Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  - Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
  - Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
  - Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)
  id: Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer
  langs:
  - csharp
  - vb
  name: Optimize(IReadOnlyCollection<IQueryAnnotation>, QueryModel)
  nameWithType: QueryOptimizer.Optimize(IReadOnlyCollection<IQueryAnnotation>, QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection<Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation>, Remotion.Linq.QueryModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Optimize
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual void Optimize(IReadOnlyCollection<IQueryAnnotation> queryAnnotations, QueryModel queryModel)
    content.vb: Public Overridable Sub Optimize(queryAnnotations As IReadOnlyCollection(Of IQueryAnnotation), queryModel As QueryModel)
    parameters:
    - id: queryAnnotations
      type: System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation}
    - id: queryModel
      type: Remotion.Linq.QueryModel
  implements:
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)
  nameWithType.vb: QueryOptimizer.Optimize(IReadOnlyCollection(Of IQueryAnnotation), QueryModel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection(Of Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation), Remotion.Linq.QueryModel)
  name.vb: Optimize(IReadOnlyCollection(Of IQueryAnnotation), QueryModel)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  id: VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer
  langs:
  - csharp
  - vb
  name: VisitJoinClause(JoinClause, QueryModel, Int32)
  nameWithType: QueryOptimizer.VisitJoinClause(JoinClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitJoinClause
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitJoinClause(JoinClause joinClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitJoinClause(joinClause As JoinClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: joinClause
      type: Remotion.Linq.Clauses.JoinClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: index
      type: System.Int32
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  id: VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer
  langs:
  - csharp
  - vb
  name: VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  nameWithType: QueryOptimizer.VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.GroupJoinClause)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitJoinClause
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
    startLine: 80
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitJoinClause(JoinClause joinClause, QueryModel queryModel, GroupJoinClause groupJoinClause)
    content.vb: Public Overrides Sub VisitJoinClause(joinClause As JoinClause, queryModel As QueryModel, groupJoinClause As GroupJoinClause)
    parameters:
    - id: joinClause
      type: Remotion.Linq.Clauses.JoinClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: groupJoinClause
      type: Remotion.Linq.Clauses.GroupJoinClause
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  id: VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer
  langs:
  - csharp
  - vb
  name: VisitGroupJoinClause(GroupJoinClause, QueryModel, Int32)
  nameWithType: QueryOptimizer.VisitGroupJoinClause(GroupJoinClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause, Remotion.Linq.QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitGroupJoinClause
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
    startLine: 116
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitGroupJoinClause(GroupJoinClause groupJoinClause, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitGroupJoinClause(groupJoinClause As GroupJoinClause, queryModel As QueryModel, index As Integer)
    parameters:
    - id: groupJoinClause
      type: Remotion.Linq.Clauses.GroupJoinClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: index
      type: System.Int32
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)
  id: FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer
  langs:
  - csharp
  - vb
  name: FlattenSubQuery(SubQueryExpression, IFromClause, QueryModel, Int32)
  nameWithType: QueryOptimizer.FlattenSubQuery(SubQueryExpression, IFromClause, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression, Remotion.Linq.Clauses.IFromClause, Remotion.Linq.QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FlattenSubQuery
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
    startLine: 159
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override void FlattenSubQuery(SubQueryExpression subQueryExpression, IFromClause fromClause, QueryModel queryModel, int destinationIndex)
    content.vb: Protected Overrides Sub FlattenSubQuery(subQueryExpression As SubQueryExpression, fromClause As IFromClause, queryModel As QueryModel, destinationIndex As Integer)
    parameters:
    - id: subQueryExpression
      type: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    - id: fromClause
      type: Remotion.Linq.Clauses.IFromClause
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: destinationIndex
      type: System.Int32
  overridden: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  id: VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer
  langs:
  - csharp
  - vb
  name: VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  nameWithType: QueryOptimizer.VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase, Remotion.Linq.QueryModel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: VisitResultOperator
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryOptimizer.cs
    startLine: 234
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public override void VisitResultOperator(ResultOperatorBase resultOperator, QueryModel queryModel, int index)
    content.vb: Public Overrides Sub VisitResultOperator(resultOperator As ResultOperatorBase, queryModel As QueryModel, index As Integer)
    parameters:
    - id: resultOperator
      type: Remotion.Linq.Clauses.ResultOperatorBase
    - id: queryModel
      type: Remotion.Linq.QueryModel
    - id: index
      type: System.Int32
  overridden: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Remotion.Linq.QueryModelVisitorBase
  commentId: T:Remotion.Linq.QueryModelVisitorBase
  parent: Remotion.Linq
  isExternal: true
  name: QueryModelVisitorBase
  nameWithType: QueryModelVisitorBase
  fullName: Remotion.Linq.QueryModelVisitorBase
- uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener
  commentId: T:Remotion.Linq.Transformations.SubQueryFromClauseFlattener
  parent: Remotion.Linq.Transformations
  isExternal: true
  name: SubQueryFromClauseFlattener
  nameWithType: SubQueryFromClauseFlattener
  fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener
- uid: Remotion.Linq.IQueryModelVisitor
  commentId: T:Remotion.Linq.IQueryModelVisitor
  parent: Remotion.Linq
  isExternal: true
  name: IQueryModelVisitor
  nameWithType: IQueryModelVisitor
  fullName: Remotion.Linq.IQueryModelVisitor
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: IQueryOptimizer
  nameWithType: IQueryOptimizer
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer
- uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
  parent: Remotion.Linq.Transformations.SubQueryFromClauseFlattener
  isExternal: true
  name: VisitMainFromClause(MainFromClause, QueryModel)
  nameWithType: SubQueryFromClauseFlattener.VisitMainFromClause(MainFromClause, QueryModel)
  fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause, Remotion.Linq.QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
    name: VisitMainFromClause
    nameWithType: SubQueryFromClauseFlattener.VisitMainFromClause
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitMainFromClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.MainFromClause
    name: MainFromClause
    nameWithType: MainFromClause
    fullName: Remotion.Linq.Clauses.MainFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)
    name: VisitMainFromClause
    nameWithType: SubQueryFromClauseFlattener.VisitMainFromClause
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitMainFromClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.MainFromClause
    name: MainFromClause
    nameWithType: MainFromClause
    fullName: Remotion.Linq.Clauses.MainFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.Transformations.SubQueryFromClauseFlattener
  isExternal: true
  name: VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  nameWithType: SubQueryFromClauseFlattener.VisitAdditionalFromClause(AdditionalFromClause, QueryModel, Int32)
  fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitAdditionalFromClause
    nameWithType: SubQueryFromClauseFlattener.VisitAdditionalFromClause
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitAdditionalFromClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.AdditionalFromClause
    name: AdditionalFromClause
    nameWithType: AdditionalFromClause
    fullName: Remotion.Linq.Clauses.AdditionalFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitAdditionalFromClause
    nameWithType: SubQueryFromClauseFlattener.VisitAdditionalFromClause
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.VisitAdditionalFromClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.AdditionalFromClause
    name: AdditionalFromClause
    nameWithType: AdditionalFromClause
    fullName: Remotion.Linq.Clauses.AdditionalFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.CheckFlattenable(Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.Transformations.SubQueryFromClauseFlattener.CheckFlattenable(Remotion.Linq.QueryModel)
  parent: Remotion.Linq.Transformations.SubQueryFromClauseFlattener
  isExternal: true
  name: CheckFlattenable(QueryModel)
  nameWithType: SubQueryFromClauseFlattener.CheckFlattenable(QueryModel)
  fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.CheckFlattenable(Remotion.Linq.QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.CheckFlattenable(Remotion.Linq.QueryModel)
    name: CheckFlattenable
    nameWithType: SubQueryFromClauseFlattener.CheckFlattenable
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.CheckFlattenable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.CheckFlattenable(Remotion.Linq.QueryModel)
    name: CheckFlattenable
    nameWithType: SubQueryFromClauseFlattener.CheckFlattenable
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.CheckFlattenable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.InsertBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.Transformations.SubQueryFromClauseFlattener.InsertBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.Transformations.SubQueryFromClauseFlattener
  isExternal: true
  name: InsertBodyClauses(ObservableCollection<IBodyClause>, QueryModel, Int32)
  nameWithType: SubQueryFromClauseFlattener.InsertBodyClauses(ObservableCollection<IBodyClause>, QueryModel, Int32)
  fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.InsertBodyClauses(System.Collections.ObjectModel.ObservableCollection<Remotion.Linq.Clauses.IBodyClause>, Remotion.Linq.QueryModel, System.Int32)
  nameWithType.vb: SubQueryFromClauseFlattener.InsertBodyClauses(ObservableCollection(Of IBodyClause), QueryModel, Int32)
  fullname.vb: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.InsertBodyClauses(System.Collections.ObjectModel.ObservableCollection(Of Remotion.Linq.Clauses.IBodyClause), Remotion.Linq.QueryModel, System.Int32)
  name.vb: InsertBodyClauses(ObservableCollection(Of IBodyClause), QueryModel, Int32)
  spec.csharp:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.InsertBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel,System.Int32)
    name: InsertBodyClauses
    nameWithType: SubQueryFromClauseFlattener.InsertBodyClauses
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.InsertBodyClauses
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Remotion.Linq.Clauses.IBodyClause
    name: IBodyClause
    nameWithType: IBodyClause
    fullName: Remotion.Linq.Clauses.IBodyClause
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.InsertBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel,System.Int32)
    name: InsertBodyClauses
    nameWithType: SubQueryFromClauseFlattener.InsertBodyClauses
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.InsertBodyClauses
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Remotion.Linq.Clauses.IBodyClause
    name: IBodyClause
    nameWithType: IBodyClause
    fullName: Remotion.Linq.Clauses.IBodyClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitQueryModel(QueryModel)
  nameWithType: QueryModelVisitorBase.VisitQueryModel(QueryModel)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
    name: VisitQueryModel
    nameWithType: QueryModelVisitorBase.VisitQueryModel
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel(Remotion.Linq.QueryModel)
    name: VisitQueryModel
    nameWithType: QueryModelVisitorBase.VisitQueryModel
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitQueryModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitWhereClause(WhereClause, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitWhereClause(WhereClause, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitWhereClause
    nameWithType: QueryModelVisitorBase.VisitWhereClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.WhereClause
    name: WhereClause
    nameWithType: WhereClause
    fullName: Remotion.Linq.Clauses.WhereClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitWhereClause
    nameWithType: QueryModelVisitorBase.VisitWhereClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitWhereClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.WhereClause
    name: WhereClause
    nameWithType: WhereClause
    fullName: Remotion.Linq.Clauses.WhereClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitOrderByClause(OrderByClause, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitOrderByClause(OrderByClause, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitOrderByClause
    nameWithType: QueryModelVisitorBase.VisitOrderByClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitOrderByClause
    nameWithType: QueryModelVisitorBase.VisitOrderByClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderByClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  nameWithType: QueryModelVisitorBase.VisitOrdering(Ordering, QueryModel, OrderByClause, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.OrderByClause, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
    name: VisitOrdering
    nameWithType: QueryModelVisitorBase.VisitOrdering
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrdering
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)
    name: VisitOrdering
    nameWithType: QueryModelVisitorBase.VisitOrdering
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrdering
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitSelectClause(SelectClause, QueryModel)
  nameWithType: QueryModelVisitorBase.VisitSelectClause(SelectClause, QueryModel)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause, Remotion.Linq.QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
    name: VisitSelectClause
    nameWithType: QueryModelVisitorBase.VisitSelectClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.SelectClause
    name: SelectClause
    nameWithType: SelectClause
    fullName: Remotion.Linq.Clauses.SelectClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)
    name: VisitSelectClause
    nameWithType: QueryModelVisitorBase.VisitSelectClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitSelectClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.SelectClause
    name: SelectClause
    nameWithType: SelectClause
    fullName: Remotion.Linq.Clauses.SelectClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitBodyClauses(ObservableCollection<IBodyClause>, QueryModel)
  nameWithType: QueryModelVisitorBase.VisitBodyClauses(ObservableCollection<IBodyClause>, QueryModel)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection<Remotion.Linq.Clauses.IBodyClause>, Remotion.Linq.QueryModel)
  nameWithType.vb: QueryModelVisitorBase.VisitBodyClauses(ObservableCollection(Of IBodyClause), QueryModel)
  fullname.vb: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection(Of Remotion.Linq.Clauses.IBodyClause), Remotion.Linq.QueryModel)
  name.vb: VisitBodyClauses(ObservableCollection(Of IBodyClause), QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
    name: VisitBodyClauses
    nameWithType: QueryModelVisitorBase.VisitBodyClauses
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Remotion.Linq.Clauses.IBodyClause
    name: IBodyClause
    nameWithType: IBodyClause
    fullName: Remotion.Linq.Clauses.IBodyClause
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)
    name: VisitBodyClauses
    nameWithType: QueryModelVisitorBase.VisitBodyClauses
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitBodyClauses
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Remotion.Linq.Clauses.IBodyClause
    name: IBodyClause
    nameWithType: IBodyClause
    fullName: Remotion.Linq.Clauses.IBodyClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitOrderings(ObservableCollection<Ordering>, QueryModel, OrderByClause)
  nameWithType: QueryModelVisitorBase.VisitOrderings(ObservableCollection<Ordering>, QueryModel, OrderByClause)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection<Remotion.Linq.Clauses.Ordering>, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.OrderByClause)
  nameWithType.vb: QueryModelVisitorBase.VisitOrderings(ObservableCollection(Of Ordering), QueryModel, OrderByClause)
  fullname.vb: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection(Of Remotion.Linq.Clauses.Ordering), Remotion.Linq.QueryModel, Remotion.Linq.Clauses.OrderByClause)
  name.vb: VisitOrderings(ObservableCollection(Of Ordering), QueryModel, OrderByClause)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
    name: VisitOrderings
    nameWithType: QueryModelVisitorBase.VisitOrderings
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitOrderings(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.Ordering},Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause)
    name: VisitOrderings
    nameWithType: QueryModelVisitorBase.VisitOrderings
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitOrderings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Remotion.Linq.Clauses.Ordering
    name: Ordering
    nameWithType: Ordering
    fullName: Remotion.Linq.Clauses.Ordering
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.OrderByClause
    name: OrderByClause
    nameWithType: OrderByClause
    fullName: Remotion.Linq.Clauses.OrderByClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitResultOperators(ObservableCollection<ResultOperatorBase>, QueryModel)
  nameWithType: QueryModelVisitorBase.VisitResultOperators(ObservableCollection<ResultOperatorBase>, QueryModel)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection<Remotion.Linq.Clauses.ResultOperatorBase>, Remotion.Linq.QueryModel)
  nameWithType.vb: QueryModelVisitorBase.VisitResultOperators(ObservableCollection(Of ResultOperatorBase), QueryModel)
  fullname.vb: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection(Of Remotion.Linq.Clauses.ResultOperatorBase), Remotion.Linq.QueryModel)
  name.vb: VisitResultOperators(ObservableCollection(Of ResultOperatorBase), QueryModel)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
    name: VisitResultOperators
    nameWithType: QueryModelVisitorBase.VisitResultOperators
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Remotion.Linq.Clauses.ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: Remotion.Linq.Clauses.ResultOperatorBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.ResultOperatorBase},Remotion.Linq.QueryModel)
    name: VisitResultOperators
    nameWithType: QueryModelVisitorBase.VisitResultOperators
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperators
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Remotion.Linq.Clauses.ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: Remotion.Linq.Clauses.ResultOperatorBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Remotion.Linq
  commentId: N:Remotion.Linq
  isExternal: false
  name: Remotion.Linq
  nameWithType: Remotion.Linq
  fullName: Remotion.Linq
- uid: Remotion.Linq.Transformations
  commentId: N:Remotion.Linq.Transformations
  isExternal: false
  name: Remotion.Linq.Transformations
  nameWithType: Remotion.Linq.Transformations
  fullName: Remotion.Linq.Transformations
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer
  isExternal: true
  name: Optimize(IReadOnlyCollection<IQueryAnnotation>, QueryModel)
  nameWithType: IQueryOptimizer.Optimize(IReadOnlyCollection<IQueryAnnotation>, QueryModel)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection<Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation>, Remotion.Linq.QueryModel)
  nameWithType.vb: IQueryOptimizer.Optimize(IReadOnlyCollection(Of IQueryAnnotation), QueryModel)
  fullname.vb: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection(Of Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation), Remotion.Linq.QueryModel)
  name.vb: Optimize(IReadOnlyCollection(Of IQueryAnnotation), QueryModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)
    name: Optimize
    nameWithType: IQueryOptimizer.Optimize
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
    name: IQueryAnnotation
    nameWithType: IQueryAnnotation
    fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)
    name: Optimize
    nameWithType: IQueryOptimizer.Optimize
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
    name: IQueryAnnotation
    nameWithType: IQueryAnnotation
    fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<IQueryAnnotation>
  nameWithType: IReadOnlyCollection<IQueryAnnotation>
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation>
  nameWithType.vb: IReadOnlyCollection(Of IQueryAnnotation)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation)
  name.vb: IReadOnlyCollection(Of IQueryAnnotation)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
    name: IQueryAnnotation
    nameWithType: IQueryAnnotation
    fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
    name: IQueryAnnotation
    nameWithType: IQueryAnnotation
    fullName: Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.QueryModel
  commentId: T:Remotion.Linq.QueryModel
  parent: Remotion.Linq
  isExternal: true
  name: QueryModel
  nameWithType: QueryModel
  fullName: Remotion.Linq.QueryModel
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitJoinClause(JoinClause, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitJoinClause(JoinClause, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitJoinClause
    nameWithType: QueryModelVisitorBase.VisitJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.JoinClause
    name: JoinClause
    nameWithType: JoinClause
    fullName: Remotion.Linq.Clauses.JoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitJoinClause
    nameWithType: QueryModelVisitorBase.VisitJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.JoinClause
    name: JoinClause
    nameWithType: JoinClause
    fullName: Remotion.Linq.Clauses.JoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.JoinClause
  commentId: T:Remotion.Linq.Clauses.JoinClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: JoinClause
  nameWithType: JoinClause
  fullName: Remotion.Linq.Clauses.JoinClause
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Remotion.Linq.Clauses
  commentId: N:Remotion.Linq.Clauses
  isExternal: false
  name: Remotion.Linq.Clauses
  nameWithType: Remotion.Linq.Clauses
  fullName: Remotion.Linq.Clauses
- uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  nameWithType: QueryModelVisitorBase.VisitJoinClause(JoinClause, QueryModel, GroupJoinClause)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause, Remotion.Linq.QueryModel, Remotion.Linq.Clauses.GroupJoinClause)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
    name: VisitJoinClause
    nameWithType: QueryModelVisitorBase.VisitJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.JoinClause
    name: JoinClause
    nameWithType: JoinClause
    fullName: Remotion.Linq.Clauses.JoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.GroupJoinClause
    name: GroupJoinClause
    nameWithType: GroupJoinClause
    fullName: Remotion.Linq.Clauses.GroupJoinClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)
    name: VisitJoinClause
    nameWithType: QueryModelVisitorBase.VisitJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.JoinClause
    name: JoinClause
    nameWithType: JoinClause
    fullName: Remotion.Linq.Clauses.JoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.GroupJoinClause
    name: GroupJoinClause
    nameWithType: GroupJoinClause
    fullName: Remotion.Linq.Clauses.GroupJoinClause
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.GroupJoinClause
  commentId: T:Remotion.Linq.Clauses.GroupJoinClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: GroupJoinClause
  nameWithType: GroupJoinClause
  fullName: Remotion.Linq.Clauses.GroupJoinClause
- uid: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitGroupJoinClause(GroupJoinClause, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitGroupJoinClause(GroupJoinClause, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitGroupJoinClause
    nameWithType: QueryModelVisitorBase.VisitGroupJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.GroupJoinClause
    name: GroupJoinClause
    nameWithType: GroupJoinClause
    fullName: Remotion.Linq.Clauses.GroupJoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)
    name: VisitGroupJoinClause
    nameWithType: QueryModelVisitorBase.VisitGroupJoinClause
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitGroupJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.GroupJoinClause
    name: GroupJoinClause
    nameWithType: GroupJoinClause
    fullName: Remotion.Linq.Clauses.GroupJoinClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.Transformations.SubQueryFromClauseFlattener.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.Transformations.SubQueryFromClauseFlattener
  isExternal: true
  name: FlattenSubQuery(SubQueryExpression, IFromClause, QueryModel, Int32)
  nameWithType: SubQueryFromClauseFlattener.FlattenSubQuery(SubQueryExpression, IFromClause, QueryModel, Int32)
  fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression, Remotion.Linq.Clauses.IFromClause, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)
    name: FlattenSubQuery
    nameWithType: SubQueryFromClauseFlattener.FlattenSubQuery
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.FlattenSubQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    name: SubQueryExpression
    nameWithType: SubQueryExpression
    fullName: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.IFromClause
    name: IFromClause
    nameWithType: IFromClause
    fullName: Remotion.Linq.Clauses.IFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)
    name: FlattenSubQuery
    nameWithType: SubQueryFromClauseFlattener.FlattenSubQuery
    fullName: Remotion.Linq.Transformations.SubQueryFromClauseFlattener.FlattenSubQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    name: SubQueryExpression
    nameWithType: SubQueryExpression
    fullName: Remotion.Linq.Clauses.Expressions.SubQueryExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.Clauses.IFromClause
    name: IFromClause
    nameWithType: IFromClause
    fullName: Remotion.Linq.Clauses.IFromClause
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.Expressions.SubQueryExpression
  commentId: T:Remotion.Linq.Clauses.Expressions.SubQueryExpression
  parent: Remotion.Linq.Clauses.Expressions
  isExternal: true
  name: SubQueryExpression
  nameWithType: SubQueryExpression
  fullName: Remotion.Linq.Clauses.Expressions.SubQueryExpression
- uid: Remotion.Linq.Clauses.IFromClause
  commentId: T:Remotion.Linq.Clauses.IFromClause
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: IFromClause
  nameWithType: IFromClause
  fullName: Remotion.Linq.Clauses.IFromClause
- uid: Remotion.Linq.Clauses.Expressions
  commentId: N:Remotion.Linq.Clauses.Expressions
  isExternal: false
  name: Remotion.Linq.Clauses.Expressions
  nameWithType: Remotion.Linq.Clauses.Expressions
  fullName: Remotion.Linq.Clauses.Expressions
- uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  commentId: M:Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
  parent: Remotion.Linq.QueryModelVisitorBase
  isExternal: true
  name: VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  nameWithType: QueryModelVisitorBase.VisitResultOperator(ResultOperatorBase, QueryModel, Int32)
  fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase, Remotion.Linq.QueryModel, System.Int32)
  spec.csharp:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
    name: VisitResultOperator
    nameWithType: QueryModelVisitorBase.VisitResultOperator
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: Remotion.Linq.Clauses.ResultOperatorBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)
    name: VisitResultOperator
    nameWithType: QueryModelVisitorBase.VisitResultOperator
    fullName: Remotion.Linq.QueryModelVisitorBase.VisitResultOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Remotion.Linq.Clauses.ResultOperatorBase
    name: ResultOperatorBase
    nameWithType: ResultOperatorBase
    fullName: Remotion.Linq.Clauses.ResultOperatorBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Remotion.Linq.QueryModel
    name: QueryModel
    nameWithType: QueryModel
    fullName: Remotion.Linq.QueryModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Remotion.Linq.Clauses.ResultOperatorBase
  commentId: T:Remotion.Linq.Clauses.ResultOperatorBase
  parent: Remotion.Linq.Clauses
  isExternal: true
  name: ResultOperatorBase
  nameWithType: ResultOperatorBase
  fullName: Remotion.Linq.Clauses.ResultOperatorBase
