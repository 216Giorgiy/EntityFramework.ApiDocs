### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  id: SqlServerDatabaseCreationTest.Blog
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.AndChew
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.AndRow
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Cheese
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.CupOfChar
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.ErMilan
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Fuse
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.George
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Key1
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Key2
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.NotFigTime
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.On
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.OrNothing
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.TheGu
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.ToEat
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.WayRound
  langs:
  - csharp
  - vb
  name: SqlServerDatabaseCreationTest.Blog
  nameWithType: SqlServerDatabaseCreationTest.Blog
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Blog
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 444
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public class Blog
    content.vb: Public Class Blog
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Key1
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Key1
  id: Key1
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: Key1
  nameWithType: SqlServerDatabaseCreationTest.Blog.Key1
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Key1
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Key1
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 446
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Key1 { get; set; }
    content.vb: Public Property Key1 As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Key2
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Key2
  id: Key2
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: Key2
  nameWithType: SqlServerDatabaseCreationTest.Blog.Key2
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Key2
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Key2
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 447
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] Key2 { get; set; }
    content.vb: Public Property Key2 As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Cheese
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Cheese
  id: Cheese
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: Cheese
  nameWithType: SqlServerDatabaseCreationTest.Blog.Cheese
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Cheese
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Cheese
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 448
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public string Cheese { get; set; }
    content.vb: Public Property Cheese As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.ErMilan
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.ErMilan
  id: ErMilan
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: ErMilan
  nameWithType: SqlServerDatabaseCreationTest.Blog.ErMilan
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.ErMilan
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ErMilan
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 449
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public int ErMilan { get; set; }
    content.vb: Public Property ErMilan As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.George
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.George
  id: George
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: George
  nameWithType: SqlServerDatabaseCreationTest.Blog.George
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.George
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: George
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 450
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public bool George { get; set; }
    content.vb: Public Property George As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.TheGu
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.TheGu
  id: TheGu
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: TheGu
  nameWithType: SqlServerDatabaseCreationTest.Blog.TheGu
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.TheGu
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TheGu
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 451
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public Guid TheGu { get; set; }
    content.vb: Public Property TheGu As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.NotFigTime
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.NotFigTime
  id: NotFigTime
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: NotFigTime
  nameWithType: SqlServerDatabaseCreationTest.Blog.NotFigTime
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.NotFigTime
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NotFigTime
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 452
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public DateTime NotFigTime { get; set; }
    content.vb: Public Property NotFigTime As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.ToEat
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.ToEat
  id: ToEat
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: ToEat
  nameWithType: SqlServerDatabaseCreationTest.Blog.ToEat
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.ToEat
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ToEat
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 453
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte ToEat { get; set; }
    content.vb: Public Property ToEat As Byte
    parameters: []
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.CupOfChar
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.CupOfChar
  id: CupOfChar
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: CupOfChar
  nameWithType: SqlServerDatabaseCreationTest.Blog.CupOfChar
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.CupOfChar
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CupOfChar
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 454
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public char CupOfChar { get; set; }
    content.vb: Public Property CupOfChar As Char
    parameters: []
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.OrNothing
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.OrNothing
  id: OrNothing
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: OrNothing
  nameWithType: SqlServerDatabaseCreationTest.Blog.OrNothing
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.OrNothing
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OrNothing
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 455
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public double OrNothing { get; set; }
    content.vb: Public Property OrNothing As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Fuse
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Fuse
  id: Fuse
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: Fuse
  nameWithType: SqlServerDatabaseCreationTest.Blog.Fuse
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.Fuse
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Fuse
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 456
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public short Fuse { get; set; }
    content.vb: Public Property Fuse As Short
    parameters: []
    return:
      type: System.Int16
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.WayRound
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.WayRound
  id: WayRound
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: WayRound
  nameWithType: SqlServerDatabaseCreationTest.Blog.WayRound
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.WayRound
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: WayRound
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 457
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public long WayRound { get; set; }
    content.vb: Public Property WayRound As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.On
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.On
  id: On
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: On
  nameWithType: SqlServerDatabaseCreationTest.Blog.On
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.On
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: On
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 458
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public float On { get; set; }
    content.vb: Public Property On As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.AndChew
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.AndChew
  id: AndChew
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: AndChew
  nameWithType: SqlServerDatabaseCreationTest.Blog.AndChew
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.AndChew
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AndChew
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 459
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] AndChew { get; set; }
    content.vb: Public Property AndChew As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.AndRow
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.AndRow
  id: AndRow
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog
  langs:
  - csharp
  - vb
  name: AndRow
  nameWithType: SqlServerDatabaseCreationTest.Blog.AndRow
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlServerDatabaseCreationTest.Blog.AndRow
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AndRow
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlServerDatabaseCreationTest.cs
    startLine: 460
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  syntax:
    content: public byte[] AndRow { get; set; }
    content.vb: Public Property AndRow As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
