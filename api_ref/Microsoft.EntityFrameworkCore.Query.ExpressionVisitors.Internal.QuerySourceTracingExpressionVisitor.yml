### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  id: QuerySourceTracingExpressionVisitor
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.FindResultQuerySourceReferenceExpression(System.Linq.Expressions.Expression,IQuerySource)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  langs:
  - csharp
  - vb
  name: QuerySourceTracingExpressionVisitor
  nameWithType: QuerySourceTracingExpressionVisitor
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: QuerySourceTracingExpressionVisitor
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class QuerySourceTracingExpressionVisitor : ExpressionVisitorBase'
    content.vb: >-
      Public Class QuerySourceTracingExpressionVisitor
          Inherits ExpressionVisitorBase
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.FindResultQuerySourceReferenceExpression(System.Linq.Expressions.Expression,IQuerySource)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.FindResultQuerySourceReferenceExpression(System.Linq.Expressions.Expression,IQuerySource)
  id: FindResultQuerySourceReferenceExpression(System.Linq.Expressions.Expression,IQuerySource)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: FindResultQuerySourceReferenceExpression(Expression, IQuerySource)
  nameWithType: QuerySourceTracingExpressionVisitor.FindResultQuerySourceReferenceExpression(Expression, IQuerySource)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.FindResultQuerySourceReferenceExpression(System.Linq.Expressions.Expression, IQuerySource)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: FindResultQuerySourceReferenceExpression
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual QuerySourceReferenceExpression FindResultQuerySourceReferenceExpression(Expression expression, IQuerySource targetQuerySource)
    content.vb: Public Overridable Function FindResultQuerySourceReferenceExpression(expression As Expression, targetQuerySource As IQuerySource) As QuerySourceReferenceExpression
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
    - id: targetQuerySource
      type: IQuerySource
    return:
      type: QuerySourceReferenceExpression
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  id: VisitQuerySourceReference(QuerySourceReferenceExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitQuerySourceReference(QuerySourceReferenceExpression)
  nameWithType: QuerySourceTracingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitQuerySourceReference(QuerySourceReferenceExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitQuerySourceReference
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 44
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitQuerySourceReference(QuerySourceReferenceExpression expression)
    content.vb: Protected Overrides Function VisitQuerySourceReference(expression As QuerySourceReferenceExpression) As Expression
    parameters:
    - id: expression
      type: QuerySourceReferenceExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  id: VisitSubQuery(SubQueryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitSubQuery(SubQueryExpression)
  nameWithType: QuerySourceTracingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitSubQuery(SubQueryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitSubQuery
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 101
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitSubQuery(SubQueryExpression expression)
    content.vb: Protected Overrides Function VisitSubQuery(expression As SubQueryExpression) As Expression
    parameters:
    - id: expression
      type: SubQueryExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  id: VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitBinary(BinaryExpression)
  nameWithType: QuerySourceTracingExpressionVisitor.VisitBinary(BinaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitBinary
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 112
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitBinary(BinaryExpression node)
    content.vb: Protected Overrides Function VisitBinary(node As BinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BinaryExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  id: VisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitConditional(ConditionalExpression)
  nameWithType: QuerySourceTracingExpressionVisitor.VisitConditional(ConditionalExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitConditional
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 123
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitConditional(ConditionalExpression node)
    content.vb: Protected Overrides Function VisitConditional(node As ConditionalExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ConditionalExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  id: VisitMember(System.Linq.Expressions.MemberExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitMember(MemberExpression)
  nameWithType: QuerySourceTracingExpressionVisitor.VisitMember(MemberExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitMember
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 137
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitMember(MemberExpression node)
    content.vb: Protected Overrides Function VisitMember(node As MemberExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  id: VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitTypeBinary(TypeBinaryExpression)
  nameWithType: QuerySourceTracingExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitTypeBinary
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 143
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitTypeBinary(TypeBinaryExpression node)
    content.vb: Protected Overrides Function VisitTypeBinary(node As TypeBinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.TypeBinaryExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  id: VisitLambda``1(System.Linq.Expressions.Expression{``0})
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitLambda<T>(Expression<T>)
  nameWithType: QuerySourceTracingExpressionVisitor.VisitLambda<T>(Expression<T>)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitLambda
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 149
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitLambda<T>(Expression<T> node)
    content.vb: Protected Overrides Function VisitLambda(Of T)(node As Expression(Of T)) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Linq.Expressions.Expression
  nameWithType.vb: QuerySourceTracingExpressionVisitor.VisitLambda(Of T)(Expression(Of T))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: VisitLambda(Of T)(Expression(Of T))
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  id: VisitInvocation(System.Linq.Expressions.InvocationExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitInvocation(InvocationExpression)
  nameWithType: QuerySourceTracingExpressionVisitor.VisitInvocation(InvocationExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitInvocation
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 155
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitInvocation(InvocationExpression node)
    content.vb: Protected Overrides Function VisitInvocation(node As InvocationExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.InvocationExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: QuerySourceTracingExpressionVisitor.VisitMethodCall(MethodCallExpression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: VisitMethodCall
    path: src/Microsoft.EntityFrameworkCore/Query/ExpressionVisitors/Internal/QuerySourceTracingExpressionVisitor.cs
    startLine: 161
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected override Expression VisitMethodCall(MethodCallExpression node)
    content.vb: Protected Overrides Function VisitMethodCall(node As MethodCallExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MethodCallExpression
    return:
      type: System.Linq.Expressions.Expression
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: ExpressionVisitorBase
  nameWithType: ExpressionVisitorBase
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: Visit(Expression)
  nameWithType: ExpressionVisitorBase.Visit(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitorBase.Visit
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase
  isExternal: true
  name: VisitExtension(Expression)
  nameWithType: ExpressionVisitorBase.VisitExtension(Expression)
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<QuerySourceTracingExpressionVisitor, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<QuerySourceTracingExpressionVisitor, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of QuerySourceTracingExpressionVisitor, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of QuerySourceTracingExpressionVisitor, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<QuerySourceTracingExpressionVisitor, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<QuerySourceTracingExpressionVisitor, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of QuerySourceTracingExpressionVisitor, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of QuerySourceTracingExpressionVisitor, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: IQuerySource
  isExternal: true
  name: IQuerySource
  nameWithType: IQuerySource
  fullName: IQuerySource
- uid: QuerySourceReferenceExpression
  isExternal: true
  name: QuerySourceReferenceExpression
  nameWithType: QuerySourceReferenceExpression
  fullName: QuerySourceReferenceExpression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: SubQueryExpression
  isExternal: true
  name: SubQueryExpression
  nameWithType: SubQueryExpression
  fullName: SubQueryExpression
- uid: System.Linq.Expressions.BinaryExpression
  commentId: T:System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ConditionalExpression
  commentId: T:System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.MemberExpression
  commentId: T:System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.TypeBinaryExpression
  commentId: T:System.Linq.Expressions.TypeBinaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: TypeBinaryExpression
  nameWithType: TypeBinaryExpression
  fullName: System.Linq.Expressions.TypeBinaryExpression
- uid: System.Linq.Expressions.Expression{{T}}
  commentId: T:System.Linq.Expressions.Expression{``0}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<T>
  nameWithType: Expression<T>
  fullName: System.Linq.Expressions.Expression<T>
  nameWithType.vb: Expression(Of T)
  fullname.vb: System.Linq.Expressions.Expression(Of T)
  name.vb: Expression(Of T)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.InvocationExpression
  commentId: T:System.Linq.Expressions.InvocationExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: InvocationExpression
  nameWithType: InvocationExpression
  fullName: System.Linq.Expressions.InvocationExpression
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
