### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture
  id: TransactionSqliteFixture
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.#ctor
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateContext(DbConnection)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateTestStore
  langs:
  - csharp
  - vb
  name: TransactionSqliteFixture
  nameWithType: TransactionSqliteFixture
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TransactionSqliteFixture
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: 'public class TransactionSqliteFixture : TransactionFixtureBase<SqliteTestStore>'
    content.vb: >-
      Public Class TransactionSqliteFixture
          Inherits TransactionFixtureBase(Of SqliteTestStore)
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.CreateContext(System.Data.Common.DbConnection)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.DatabaseName
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.Customers
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture
  langs:
  - csharp
  - vb
  name: TransactionSqliteFixture()
  nameWithType: TransactionSqliteFixture.TransactionSqliteFixture()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.TransactionSqliteFixture()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public TransactionSqliteFixture()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateTestStore
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateTestStore
  id: CreateTestStore
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture
  langs:
  - csharp
  - vb
  name: CreateTestStore()
  nameWithType: TransactionSqliteFixture.CreateTestStore()
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateTestStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateTestStore
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override SqliteTestStore CreateTestStore()
    content.vb: Public Overrides Function CreateTestStore As SqliteTestStore
    return:
      type: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.CreateTestStore
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  id: CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture
  langs:
  - csharp
  - vb
  name: CreateContext(SqliteTestStore)
  nameWithType: TransactionSqliteFixture.CreateContext(SqliteTestStore)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateContext
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override DbContext CreateContext(SqliteTestStore testStore)
    content.vb: Public Overrides Function CreateContext(testStore As SqliteTestStore) As DbContext
    parameters:
    - id: testStore
      type: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  overridden: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateContext(DbConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateContext(DbConnection)
  id: CreateContext(DbConnection)
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture
  langs:
  - csharp
  - vb
  name: CreateContext(DbConnection)
  nameWithType: TransactionSqliteFixture.CreateContext(DbConnection)
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.CreateContext(DbConnection)
  type: Method
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateContext
    path: test/Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests/TransactionSqliteFixture.cs
    startLine: 42
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  syntax:
    content: public override DbContext CreateContext(DbConnection connection)
    content.vb: Public Overrides Function CreateContext(connection As DbConnection) As DbContext
    parameters:
    - id: connection
      type: DbConnection
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  name: TransactionFixtureBase<SqliteTestStore>
  nameWithType: TransactionFixtureBase<SqliteTestStore>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>
  nameWithType.vb: TransactionFixtureBase(Of SqliteTestStore)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  name.vb: TransactionFixtureBase(Of SqliteTestStore)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
    name: TransactionFixtureBase
    nameWithType: TransactionFixtureBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
    name: SqliteTestStore
    nameWithType: SqliteTestStore
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
    name: TransactionFixtureBase
    nameWithType: TransactionFixtureBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
    name: SqliteTestStore
    nameWithType: SqliteTestStore
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.CreateContext(System.Data.Common.DbConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.CreateContext(System.Data.Common.DbConnection)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
  name: CreateContext(DbConnection)
  nameWithType: TransactionFixtureBase<SqliteTestStore>.CreateContext(DbConnection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.CreateContext(System.Data.Common.DbConnection)
  nameWithType.vb: TransactionFixtureBase(Of SqliteTestStore).CreateContext(DbConnection)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).CreateContext(System.Data.Common.DbConnection)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
    name: CreateContext
    nameWithType: TransactionFixtureBase<SqliteTestStore>.CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
    name: CreateContext
    nameWithType: TransactionFixtureBase(Of SqliteTestStore).CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.DatabaseName
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.DatabaseName
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.DatabaseName
  name: DatabaseName
  nameWithType: TransactionFixtureBase<SqliteTestStore>.DatabaseName
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.DatabaseName
  nameWithType.vb: TransactionFixtureBase(Of SqliteTestStore).DatabaseName
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).DatabaseName
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  nameWithType: TransactionFixtureBase<SqliteTestStore>.OnModelCreating(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType.vb: TransactionFixtureBase(Of SqliteTestStore).OnModelCreating(ModelBuilder)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: TransactionFixtureBase<SqliteTestStore>.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.OnModelCreating
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: TransactionFixtureBase(Of SqliteTestStore).OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).OnModelCreating
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.Customers
  commentId: F:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.Customers
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.Customers
  name: Customers
  nameWithType: TransactionFixtureBase<SqliteTestStore>.Customers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.Customers
  nameWithType.vb: TransactionFixtureBase(Of SqliteTestStore).Customers
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).Customers
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<TransactionSqliteFixture, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TransactionSqliteFixture, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TransactionSqliteFixture, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of TransactionSqliteFixture, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<TransactionSqliteFixture, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TransactionSqliteFixture, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of TransactionSqliteFixture, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TransactionSqliteFixture, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.TransactionSqliteFixture, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
  isExternal: false
  name: TransactionFixtureBase<TTestStore>
  nameWithType: TransactionFixtureBase<TTestStore>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>
  nameWithType.vb: TransactionFixtureBase(Of TTestStore)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore)
  name.vb: TransactionFixtureBase(Of TTestStore)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
    name: TransactionFixtureBase
    nameWithType: TransactionFixtureBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TTestStore
    nameWithType: TTestStore
    fullName: TTestStore
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1
    name: TransactionFixtureBase
    nameWithType: TransactionFixtureBase
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTestStore
    nameWithType: TTestStore
    fullName: TTestStore
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
  isExternal: true
  name: CreateContext(DbConnection)
  nameWithType: TransactionFixtureBase<TTestStore>.CreateContext(DbConnection)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.CreateContext(System.Data.Common.DbConnection)
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).CreateContext(DbConnection)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).CreateContext(System.Data.Common.DbConnection)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
    name: CreateContext
    nameWithType: TransactionFixtureBase<TTestStore>.CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(System.Data.Common.DbConnection)
    name: CreateContext
    nameWithType: TransactionFixtureBase(Of TTestStore).CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.DatabaseName
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.DatabaseName
  isExternal: false
  name: DatabaseName
  nameWithType: TransactionFixtureBase<TTestStore>.DatabaseName
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.DatabaseName
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).DatabaseName
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).DatabaseName
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  isExternal: false
  name: OnModelCreating(ModelBuilder)
  nameWithType: TransactionFixtureBase<TTestStore>.OnModelCreating(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).OnModelCreating(ModelBuilder)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: TransactionFixtureBase<TTestStore>.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.OnModelCreating
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: TransactionFixtureBase(Of TTestStore).OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).OnModelCreating
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.Customers
  commentId: F:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.Customers
  isExternal: false
  name: Customers
  nameWithType: TransactionFixtureBase<TTestStore>.Customers
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.Customers
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).Customers
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).Customers
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.CreateTestStore
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.CreateTestStore
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
  name: CreateTestStore()
  nameWithType: TransactionFixtureBase<SqliteTestStore>.CreateTestStore()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.CreateTestStore()
  nameWithType.vb: TransactionFixtureBase(Of SqliteTestStore).CreateTestStore()
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).CreateTestStore()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
    name: CreateTestStore
    nameWithType: TransactionFixtureBase<SqliteTestStore>.CreateTestStore
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.CreateTestStore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
    name: CreateTestStore
    nameWithType: TransactionFixtureBase(Of SqliteTestStore).CreateTestStore
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).CreateTestStore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  commentId: T:Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  parent: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests
  isExternal: false
  name: SqliteTestStore
  nameWithType: SqliteTestStore
  fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
  isExternal: false
  name: CreateTestStore()
  nameWithType: TransactionFixtureBase<TTestStore>.CreateTestStore()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.CreateTestStore()
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).CreateTestStore()
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).CreateTestStore()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
    name: CreateTestStore
    nameWithType: TransactionFixtureBase<TTestStore>.CreateTestStore
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.CreateTestStore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateTestStore
    name: CreateTestStore
    nameWithType: TransactionFixtureBase(Of TTestStore).CreateTestStore
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).CreateTestStore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}.CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase{Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore}
  definition: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
  name: CreateContext(SqliteTestStore)
  nameWithType: TransactionFixtureBase<SqliteTestStore>.CreateContext(SqliteTestStore)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  nameWithType.vb: TransactionFixtureBase(Of SqliteTestStore).CreateContext(SqliteTestStore)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).CreateContext(Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
    name: CreateContext
    nameWithType: TransactionFixtureBase<SqliteTestStore>.CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore>.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
    name: SqliteTestStore
    nameWithType: SqliteTestStore
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
    name: CreateContext
    nameWithType: TransactionFixtureBase(Of SqliteTestStore).CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore).CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
    name: SqliteTestStore
    nameWithType: SqliteTestStore
    fullName: Microsoft.EntityFrameworkCore.Sqlite.FunctionalTests.SqliteTestStore
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
  isExternal: false
  name: CreateContext(TTestStore)
  nameWithType: TransactionFixtureBase<TTestStore>.CreateContext(TTestStore)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.CreateContext(TTestStore)
  nameWithType.vb: TransactionFixtureBase(Of TTestStore).CreateContext(TTestStore)
  fullname.vb: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).CreateContext(TTestStore)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
    name: CreateContext
    nameWithType: TransactionFixtureBase<TTestStore>.CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase<TTestStore>.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: TTestStore
    nameWithType: TTestStore
    fullName: TTestStore
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase`1.CreateContext(`0)
    name: CreateContext
    nameWithType: TransactionFixtureBase(Of TTestStore).CreateContext
    fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TransactionFixtureBase(Of TTestStore).CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: TTestStore
    nameWithType: TTestStore
    fullName: TTestStore
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: DbConnection
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: DbConnection
