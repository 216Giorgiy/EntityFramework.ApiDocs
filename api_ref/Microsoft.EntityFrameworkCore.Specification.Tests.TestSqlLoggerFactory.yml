### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  id: TestSqlLoggerFactory
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.AddProvider(ILoggerProvider)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CancelQuery
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CaptureOutput(ITestOutputHelper)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CommandLogData
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CreateLogger(System.String)
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Dispose
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Log
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Reset
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Sql
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.SqlStatements
  langs:
  - csharp
  - vb
  name: TestSqlLoggerFactory
  nameWithType: TestSqlLoggerFactory
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TestSqlLoggerFactory
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public class TestSqlLoggerFactory : ILoggerFactory'
    content.vb: >-
      Public Class TestSqlLoggerFactory
          Inherits ILoggerFactory
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CreateLogger(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: TestSqlLoggerFactory.CreateLogger(String)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreateLogger
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public ILogger CreateLogger(string name)
    content.vb: Public Function CreateLogger(name As String) As ILogger
    parameters:
    - id: name
      type: System.String
    return:
      type: ILogger
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.AddProvider(ILoggerProvider)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.AddProvider(ILoggerProvider)
  id: AddProvider(ILoggerProvider)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: AddProvider(ILoggerProvider)
  nameWithType: TestSqlLoggerFactory.AddProvider(ILoggerProvider)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.AddProvider(ILoggerProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AddProvider
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public void AddProvider(ILoggerProvider provider)
    content.vb: Public Sub AddProvider(provider As ILoggerProvider)
    parameters:
    - id: provider
      type: ILoggerProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CancelQuery
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CancelQuery
  id: CancelQuery
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: CancelQuery()
  nameWithType: TestSqlLoggerFactory.CancelQuery()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CancelQuery()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CancelQuery
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public CancellationToken CancelQuery()
    content.vb: Public Function CancelQuery As CancellationToken
    return:
      type: System.Threading.CancellationToken
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Reset
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Reset
  id: Reset
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: TestSqlLoggerFactory.Reset()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Reset()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Reset
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static void Reset()
    content.vb: Public Shared Sub Reset
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CaptureOutput(ITestOutputHelper)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CaptureOutput(ITestOutputHelper)
  id: CaptureOutput(ITestOutputHelper)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: CaptureOutput(ITestOutputHelper)
  nameWithType: TestSqlLoggerFactory.CaptureOutput(ITestOutputHelper)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CaptureOutput(ITestOutputHelper)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CaptureOutput
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static void CaptureOutput(ITestOutputHelper testOutputHelper)
    content.vb: Public Shared Sub CaptureOutput(testOutputHelper As ITestOutputHelper)
    parameters:
    - id: testOutputHelper
      type: ITestOutputHelper
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Dispose
  id: Dispose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TestSqlLoggerFactory.Dispose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Dispose
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 46
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Log
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Log
  id: Log
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: TestSqlLoggerFactory.Log
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Log
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Log
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static string Log { get; }
    content.vb: Public Shared ReadOnly Property Log As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Sql
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Sql
  id: Sql
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: Sql
  nameWithType: TestSqlLoggerFactory.Sql
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Sql
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Sql
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static string Sql { get; }
    content.vb: Public Shared ReadOnly Property Sql As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.SqlStatements
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.SqlStatements
  id: SqlStatements
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: SqlStatements
  nameWithType: TestSqlLoggerFactory.SqlStatements
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.SqlStatements
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SqlStatements
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static IReadOnlyList<string> SqlStatements { get; }
    content.vb: Public Shared ReadOnly Property SqlStatements As IReadOnlyList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CommandLogData
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CommandLogData
  id: CommandLogData
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory
  langs:
  - csharp
  - vb
  name: CommandLogData
  nameWithType: TestSqlLoggerFactory.CommandLogData
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.CommandLogData
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CommandLogData
    path: src/Microsoft.EntityFrameworkCore.Relational.Specification.Tests/TestSqlLoggerFactory.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public static IReadOnlyList<DbCommandLogData> CommandLogData { get; }
    content.vb: Public Shared ReadOnly Property CommandLogData As IReadOnlyList(Of DbCommandLogData)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.DbCommandLogData}
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<TestSqlLoggerFactory, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TestSqlLoggerFactory, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TestSqlLoggerFactory, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of TestSqlLoggerFactory, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<TestSqlLoggerFactory, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TestSqlLoggerFactory, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of TestSqlLoggerFactory, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TestSqlLoggerFactory, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Specification.Tests.TestSqlLoggerFactory, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: ILoggerProvider
  isExternal: true
  name: ILoggerProvider
  nameWithType: ILoggerProvider
  fullName: ILoggerProvider
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: ITestOutputHelper
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: ITestOutputHelper
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.DbCommandLogData}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.DbCommandLogData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<DbCommandLogData>
  nameWithType: IReadOnlyList<DbCommandLogData>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Storage.DbCommandLogData>
  nameWithType.vb: IReadOnlyList(Of DbCommandLogData)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Storage.DbCommandLogData)
  name.vb: IReadOnlyList(Of DbCommandLogData)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Storage.DbCommandLogData
    name: DbCommandLogData
    nameWithType: DbCommandLogData
    fullName: Microsoft.EntityFrameworkCore.Storage.DbCommandLogData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Storage.DbCommandLogData
    name: DbCommandLogData
    nameWithType: DbCommandLogData
    fullName: Microsoft.EntityFrameworkCore.Storage.DbCommandLogData
  - name: )
    nameWithType: )
    fullName: )
