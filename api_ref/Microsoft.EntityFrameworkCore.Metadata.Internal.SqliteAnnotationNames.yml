### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames
  id: SqliteAnnotationNames
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.Autoincrement
  - Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.InlinePrimaryKey
  - Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.InlinePrimaryKeyName
  - Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.Prefix
  langs:
  - csharp
  - vb
  name: SqliteAnnotationNames
  nameWithType: SqliteAnnotationNames
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqliteAnnotationNames
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class SqliteAnnotationNames
    content.vb: Public Module SqliteAnnotationNames
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.Prefix
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.Prefix
  id: Prefix
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: SqliteAnnotationNames.Prefix
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.Prefix
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Prefix
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string Prefix = "Sqlite:"
    content.vb: Public Const Prefix As String = "Sqlite:"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.Autoincrement
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.Autoincrement
  id: Autoincrement
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames
  langs:
  - csharp
  - vb
  name: Autoincrement
  nameWithType: SqliteAnnotationNames.Autoincrement
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.Autoincrement
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Autoincrement
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string Autoincrement = "Autoincrement"
    content.vb: Public Const Autoincrement As String = "Autoincrement"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.InlinePrimaryKey
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.InlinePrimaryKey
  id: InlinePrimaryKey
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames
  langs:
  - csharp
  - vb
  name: InlinePrimaryKey
  nameWithType: SqliteAnnotationNames.InlinePrimaryKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.InlinePrimaryKey
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InlinePrimaryKey
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
    startLine: 27
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string InlinePrimaryKey = "InlinePrimaryKey"
    content.vb: Public Const InlinePrimaryKey As String = "InlinePrimaryKey"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.InlinePrimaryKeyName
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.InlinePrimaryKeyName
  id: InlinePrimaryKeyName
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames
  langs:
  - csharp
  - vb
  name: InlinePrimaryKeyName
  nameWithType: SqliteAnnotationNames.InlinePrimaryKeyName
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.SqliteAnnotationNames.InlinePrimaryKeyName
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InlinePrimaryKeyName
    path: src/Microsoft.EntityFrameworkCore.Sqlite/Metadata/Internal/SqliteAnnotationNames.cs
    startLine: 33
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public const string InlinePrimaryKeyName = "InlinePrimaryKeyName"
    content.vb: Public Const InlinePrimaryKeyName As String = "InlinePrimaryKeyName"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
