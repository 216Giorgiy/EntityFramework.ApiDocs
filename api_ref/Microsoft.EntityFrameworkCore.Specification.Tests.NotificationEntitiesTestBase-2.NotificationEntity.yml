### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity
  id: NotificationEntitiesTestBase`2.NotificationEntity
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity.PropertyChanged
  - Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity.SetWithNotify``1(``0,``0@,System.String)
  langs:
  - csharp
  - vb
  name: NotificationEntitiesTestBase<TTestStore, TFixture>.NotificationEntity
  nameWithType: NotificationEntitiesTestBase<TTestStore, TFixture>.NotificationEntity
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase<TTestStore, TFixture>.NotificationEntity
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/NotificationEntitiesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NotificationEntity
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/NotificationEntitiesTestBase.cs
    startLine: 105
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'protected class NotificationEntity : INotifyPropertyChanged'
    content.vb: >-
      Protected Class NotificationEntity
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: NotificationEntitiesTestBase(Of TTestStore, TFixture).NotificationEntity
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase(Of TTestStore, TFixture).NotificationEntity
  name.vb: NotificationEntitiesTestBase(Of TTestStore, TFixture).NotificationEntity
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity.PropertyChanged
  commentId: E:Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity.PropertyChanged
  id: PropertyChanged
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: NotificationEntitiesTestBase<TTestStore, TFixture>.NotificationEntity.PropertyChanged
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase<TTestStore, TFixture>.NotificationEntity.PropertyChanged
  type: Event
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/NotificationEntitiesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyChanged
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/NotificationEntitiesTestBase.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: NotificationEntitiesTestBase(Of TTestStore, TFixture).NotificationEntity.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase(Of TTestStore, TFixture).NotificationEntity.PropertyChanged
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity.SetWithNotify``1(``0,``0@,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity.SetWithNotify``1(``0,``0@,System.String)
  id: SetWithNotify``1(``0,``0@,System.String)
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase`2.NotificationEntity
  langs:
  - csharp
  - vb
  name: SetWithNotify<T>(T, ref T, String)
  nameWithType: NotificationEntitiesTestBase<TTestStore, TFixture>.NotificationEntity.SetWithNotify<T>(T, ref T, String)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase<TTestStore, TFixture>.NotificationEntity.SetWithNotify<T>(T, ref T, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/NotificationEntitiesTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SetWithNotify
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/NotificationEntitiesTestBase.cs
    startLine: 112
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected void SetWithNotify<T>(T value, ref T field, string propertyName = "")
    content.vb: Protected Sub SetWithNotify(Of T)(value As T, ByRef field As T, propertyName As String = "")
    parameters:
    - id: value
      type: '{T}'
    - id: field
      type: '{T}'
    - id: propertyName
      type: System.String
    typeParameters:
    - id: T
  nameWithType.vb: NotificationEntitiesTestBase(Of TTestStore, TFixture).NotificationEntity.SetWithNotify(Of T)(T, ByRef T, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.NotificationEntitiesTestBase(Of TTestStore, TFixture).NotificationEntity.SetWithNotify(Of T)(T, ByRef T, System.String)
  name.vb: SetWithNotify(Of T)(T, ByRef T, String)
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
