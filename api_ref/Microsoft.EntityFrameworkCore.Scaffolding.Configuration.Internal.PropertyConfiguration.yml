### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  id: PropertyConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.AttributeConfigurations
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.EntityConfiguration
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.FluentApiConfigurations
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.GetFluentApiConfigurations(System.Boolean)
  - Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.Property
  langs:
  - csharp
  - vb
  name: PropertyConfiguration
  nameWithType: PropertyConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class PropertyConfiguration
    content.vb: Public Class PropertyConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: '#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IProperty)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  langs:
  - csharp
  - vb
  name: PropertyConfiguration(EntityConfiguration, IProperty)
  nameWithType: PropertyConfiguration.PropertyConfiguration(EntityConfiguration, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.PropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public PropertyConfiguration(EntityConfiguration entityConfiguration, IProperty property)
    content.vb: Public Sub New(entityConfiguration As EntityConfiguration, property As IProperty)
    parameters:
    - id: entityConfiguration
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.EntityConfiguration
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.EntityConfiguration
  id: EntityConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  langs:
  - csharp
  - vb
  name: EntityConfiguration
  nameWithType: PropertyConfiguration.EntityConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.EntityConfiguration
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityConfiguration
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual EntityConfiguration EntityConfiguration { get; }
    content.vb: Public Overridable ReadOnly Property EntityConfiguration As EntityConfiguration
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.EntityConfiguration*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.Property
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.Property
  id: Property
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: PropertyConfiguration.Property
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.Property
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Property
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual IProperty Property { get; }
    content.vb: Public Overridable ReadOnly Property Property As IProperty
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.Property*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.AttributeConfigurations
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.AttributeConfigurations
  id: AttributeConfigurations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  langs:
  - csharp
  - vb
  name: AttributeConfigurations
  nameWithType: PropertyConfiguration.AttributeConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.AttributeConfigurations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AttributeConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<IAttributeConfiguration> AttributeConfigurations { get; }
    content.vb: Public Overridable ReadOnly Property AttributeConfigurations As List(Of IAttributeConfiguration)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration}
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.AttributeConfigurations*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.FluentApiConfigurations
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.FluentApiConfigurations
  id: FluentApiConfigurations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  langs:
  - csharp
  - vb
  name: FluentApiConfigurations
  nameWithType: PropertyConfiguration.FluentApiConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.FluentApiConfigurations
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FluentApiConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<FluentApiConfiguration> FluentApiConfigurations { get; }
    content.vb: Public Overridable ReadOnly Property FluentApiConfigurations As List(Of FluentApiConfiguration)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration}
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.FluentApiConfigurations*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.GetFluentApiConfigurations(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.GetFluentApiConfigurations(System.Boolean)
  id: GetFluentApiConfigurations(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration
  langs:
  - csharp
  - vb
  name: GetFluentApiConfigurations(Boolean)
  nameWithType: PropertyConfiguration.GetFluentApiConfigurations(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.GetFluentApiConfigurations(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetFluentApiConfigurations
    path: src/Microsoft.EntityFrameworkCore.Design/Scaffolding/Configuration/Internal/PropertyConfiguration.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual List<FluentApiConfiguration> GetFluentApiConfigurations(bool useFluentApiOnly)
    content.vb: Public Overridable Function GetFluentApiConfigurations(useFluentApiOnly As Boolean) As List(Of FluentApiConfiguration)
    parameters:
    - id: useFluentApiOnly
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration}
  overload: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.GetFluentApiConfigurations*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.#ctor
  isExternal: false
  name: PropertyConfiguration
  nameWithType: PropertyConfiguration.PropertyConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.PropertyConfiguration
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal
  isExternal: false
  name: EntityConfiguration
  nameWithType: EntityConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.EntityConfiguration*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.EntityConfiguration
  isExternal: false
  name: EntityConfiguration
  nameWithType: PropertyConfiguration.EntityConfiguration
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.EntityConfiguration
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.Property*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.Property
  isExternal: false
  name: Property
  nameWithType: PropertyConfiguration.Property
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.Property
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.AttributeConfigurations*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.AttributeConfigurations
  isExternal: false
  name: AttributeConfigurations
  nameWithType: PropertyConfiguration.AttributeConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.AttributeConfigurations
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IAttributeConfiguration>
  nameWithType: List<IAttributeConfiguration>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration>
  nameWithType.vb: List(Of IAttributeConfiguration)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration)
  name.vb: List(Of IAttributeConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
    name: IAttributeConfiguration
    nameWithType: IAttributeConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
    name: IAttributeConfiguration
    nameWithType: IAttributeConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IAttributeConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.FluentApiConfigurations*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.FluentApiConfigurations
  isExternal: false
  name: FluentApiConfigurations
  nameWithType: PropertyConfiguration.FluentApiConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.FluentApiConfigurations
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FluentApiConfiguration>
  nameWithType: List<FluentApiConfiguration>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration>
  nameWithType.vb: List(Of FluentApiConfiguration)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration)
  name.vb: List(Of FluentApiConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration
    name: FluentApiConfiguration
    nameWithType: FluentApiConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration
    name: FluentApiConfiguration
    nameWithType: FluentApiConfiguration
    fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.GetFluentApiConfigurations*
  commentId: Overload:Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.GetFluentApiConfigurations
  isExternal: false
  name: GetFluentApiConfigurations
  nameWithType: PropertyConfiguration.GetFluentApiConfigurations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration.GetFluentApiConfigurations
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
