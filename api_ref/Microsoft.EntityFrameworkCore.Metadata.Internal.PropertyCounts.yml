### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  id: PropertyCounts
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.NavigationCount
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.OriginalValueCount
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCount
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.RelationshipCount
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.ShadowCount
  - Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.StoreGeneratedCount
  langs:
  - csharp
  - vb
  name: PropertyCounts
  nameWithType: PropertyCounts
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyCounts
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class PropertyCounts
    content.vb: Public Class PropertyCounts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  langs:
  - csharp
  - vb
  name: PropertyCounts(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: PropertyCounts.PropertyCounts(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCounts(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public PropertyCounts(int propertyCount, int navigationCount, int originalValueCount, int shadowCount, int relationshipCount, int storeGeneratedCount)
    content.vb: Public Sub New(propertyCount As Integer, navigationCount As Integer, originalValueCount As Integer, shadowCount As Integer, relationshipCount As Integer, storeGeneratedCount As Integer)
    parameters:
    - id: propertyCount
      type: System.Int32
    - id: navigationCount
      type: System.Int32
    - id: originalValueCount
      type: System.Int32
    - id: shadowCount
      type: System.Int32
    - id: relationshipCount
      type: System.Int32
    - id: storeGeneratedCount
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCount
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCount
  id: PropertyCount
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  langs:
  - csharp
  - vb
  name: PropertyCount
  nameWithType: PropertyCounts.PropertyCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCount
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PropertyCount
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int PropertyCount { get; }
    content.vb: Public Overridable ReadOnly Property PropertyCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.NavigationCount
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.NavigationCount
  id: NavigationCount
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  langs:
  - csharp
  - vb
  name: NavigationCount
  nameWithType: PropertyCounts.NavigationCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.NavigationCount
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: NavigationCount
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int NavigationCount { get; }
    content.vb: Public Overridable ReadOnly Property NavigationCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.NavigationCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.OriginalValueCount
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.OriginalValueCount
  id: OriginalValueCount
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  langs:
  - csharp
  - vb
  name: OriginalValueCount
  nameWithType: PropertyCounts.OriginalValueCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.OriginalValueCount
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OriginalValueCount
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int OriginalValueCount { get; }
    content.vb: Public Overridable ReadOnly Property OriginalValueCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.OriginalValueCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.ShadowCount
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.ShadowCount
  id: ShadowCount
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  langs:
  - csharp
  - vb
  name: ShadowCount
  nameWithType: PropertyCounts.ShadowCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.ShadowCount
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ShadowCount
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int ShadowCount { get; }
    content.vb: Public Overridable ReadOnly Property ShadowCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.ShadowCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.RelationshipCount
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.RelationshipCount
  id: RelationshipCount
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  langs:
  - csharp
  - vb
  name: RelationshipCount
  nameWithType: PropertyCounts.RelationshipCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.RelationshipCount
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RelationshipCount
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int RelationshipCount { get; }
    content.vb: Public Overridable ReadOnly Property RelationshipCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.RelationshipCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.StoreGeneratedCount
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.StoreGeneratedCount
  id: StoreGeneratedCount
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts
  langs:
  - csharp
  - vb
  name: StoreGeneratedCount
  nameWithType: PropertyCounts.StoreGeneratedCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.StoreGeneratedCount
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: StoreGeneratedCount
    path: src/Microsoft.EntityFrameworkCore/Metadata/Internal/PropertyCounts.cs
    startLine: 65
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int StoreGeneratedCount { get; }
    content.vb: Public Overridable ReadOnly Property StoreGeneratedCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.StoreGeneratedCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.#ctor
  isExternal: false
  name: PropertyCounts
  nameWithType: PropertyCounts.PropertyCounts
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCounts
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCount*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCount
  isExternal: false
  name: PropertyCount
  nameWithType: PropertyCounts.PropertyCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCount
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.NavigationCount*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.NavigationCount
  isExternal: false
  name: NavigationCount
  nameWithType: PropertyCounts.NavigationCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.NavigationCount
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.OriginalValueCount*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.OriginalValueCount
  isExternal: false
  name: OriginalValueCount
  nameWithType: PropertyCounts.OriginalValueCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.OriginalValueCount
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.ShadowCount*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.ShadowCount
  isExternal: false
  name: ShadowCount
  nameWithType: PropertyCounts.ShadowCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.ShadowCount
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.RelationshipCount*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.RelationshipCount
  isExternal: false
  name: RelationshipCount
  nameWithType: PropertyCounts.RelationshipCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.RelationshipCount
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.StoreGeneratedCount*
  commentId: Overload:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.StoreGeneratedCount
  isExternal: false
  name: StoreGeneratedCount
  nameWithType: PropertyCounts.StoreGeneratedCount
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.StoreGeneratedCount
