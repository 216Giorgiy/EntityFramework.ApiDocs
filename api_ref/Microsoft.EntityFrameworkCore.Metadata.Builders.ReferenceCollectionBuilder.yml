### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  id: ReferenceCollectionBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  children:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Builder
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Metadata
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  langs:
  - csharp
  - vb
  name: ReferenceCollectionBuilder
  nameWithType: ReferenceCollectionBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ReferenceCollectionBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Provides a simple API for configuring a one-to-many relationship.\n</p>\n<p>\n    Instances of this class are returned from methods when using the <xref href=\"Microsoft.EntityFrameworkCore.ModelBuilder\" data-throw-if-not-resolved=\"false\"></xref> API\n    and it is not designed to be directly constructed in your application code.\n</p>\n"
  example: []
  syntax:
    content: 'public class ReferenceCollectionBuilder : IInfrastructure<IMutableModel>, IInfrastructure<InternalRelationshipBuilder>'
    content.vb: >-
      Public Class ReferenceCollectionBuilder
          Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  - Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: ReferenceCollectionBuilder(EntityType, EntityType, InternalRelationshipBuilder)
  nameWithType: ReferenceCollectionBuilder.ReferenceCollectionBuilder(EntityType, EntityType, InternalRelationshipBuilder)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.ReferenceCollectionBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public ReferenceCollectionBuilder(EntityType principalEntityType, EntityType dependentEntityType, InternalRelationshipBuilder builder)
    content.vb: Public Sub New(principalEntityType As EntityType, dependentEntityType As EntityType, builder As InternalRelationshipBuilder)
    parameters:
    - id: principalEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: dependentEntityType
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: ReferenceCollectionBuilder(InternalRelationshipBuilder, ReferenceCollectionBuilder, Boolean, Boolean, Boolean)
  nameWithType: ReferenceCollectionBuilder.ReferenceCollectionBuilder(InternalRelationshipBuilder, ReferenceCollectionBuilder, Boolean, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.ReferenceCollectionBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected ReferenceCollectionBuilder(InternalRelationshipBuilder builder, ReferenceCollectionBuilder oldBuilder, bool foreignKeySet = false, bool principalKeySet = false, bool requiredSet = false)
    content.vb: Protected Sub New(builder As InternalRelationshipBuilder, oldBuilder As ReferenceCollectionBuilder, foreignKeySet As Boolean = False, principalKeySet As Boolean = False, requiredSet As Boolean = False)
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    - id: oldBuilder
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
    - id: foreignKeySet
      type: System.Boolean
    - id: principalKeySet
      type: System.Boolean
    - id: requiredSet
      type: System.Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Builder
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Builder
  id: Builder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: Builder
  nameWithType: ReferenceCollectionBuilder.Builder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Builder
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Builder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 93
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder Builder { get; }
    content.vb: Protected Overridable ReadOnly Property Builder As InternalRelationshipBuilder
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Metadata
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Metadata
  id: Metadata
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ReferenceCollectionBuilder.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Metadata
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Metadata
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 98
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    The foreign key that represents this relationship.\n"
  example: []
  syntax:
    content: public virtual IMutableForeignKey Metadata { get; }
    content.vb: Public Overridable ReadOnly Property Metadata As IMutableForeignKey
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: IInfrastructure<IMutableModel>.Instance
  nameWithType: ReferenceCollectionBuilder.IInfrastructure<IMutableModel>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 103
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    The model that this relationship belongs to.\n"
  example: []
  syntax:
    content: IMutableModel IInfrastructure<IMutableModel>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance As IMutableModel Implements IInfrastructure(Of IMutableModel).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}.Instance
  nameWithType.vb: ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  id: Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance
  isEii: true
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: IInfrastructure<InternalRelationshipBuilder>.Instance
  nameWithType: ReferenceCollectionBuilder.IInfrastructure<InternalRelationshipBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 108
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Gets the internal builder being used to configure this relationship.\n"
  example: []
  syntax:
    content: InternalRelationshipBuilder IInfrastructure<InternalRelationshipBuilder>.Instance { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance As InternalRelationshipBuilder Implements IInfrastructure(Of InternalRelationshipBuilder).Instance
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Instance
  nameWithType.vb: ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)
  id: HasAnnotation(System.String,System.Object)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: HasAnnotation(String, Object)
  nameWithType: ReferenceCollectionBuilder.HasAnnotation(String, Object)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasAnnotation
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 118
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Adds or updates an annotation on the relationship. If an annotation with the key specified in\n<em>annotation</em>\nalready exists it's value will be updated.\n"
  example: []
  syntax:
    content: public virtual ReferenceCollectionBuilder HasAnnotation(string annotation, object value)
    content.vb: Public Overridable Function HasAnnotation(annotation As String, value As Object) As ReferenceCollectionBuilder
    parameters:
    - id: annotation
      type: System.String
      description: 'The key of the annotation to be added or updated. '
    - id: value
      type: System.Object
      description: 'The value to be stored in the annotation. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])
  id: HasForeignKey(System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKey(String[])
  nameWithType: ReferenceCollectionBuilder.HasForeignKey(String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasForeignKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 150
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n<p>\n    Configures the property(s) to use as the foreign key for this relationship.\n</p>\n<p>\n    If the specified property name(s) do not exist on the entity type then a new shadow state\n    property(s) will be added to serve as the foreign key. A shadow state property is one that does not\n    have a corresponding property in the entity class. The current value for the  property is stored in\n    the <xref href=\"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker\" data-throw-if-not-resolved=\"false\"></xref> rather than being stored in instances\n    of the entity class.\n</p>\n<p>\n    If <xref href=\"Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> is not specified, then an attempt will be made to match\n    the data type and order of foreign key properties against the primary key of the principal\n    entity type. If they do not match, new shadow state properties that form a unique index will be\n    added to the principal entity type to serve as the reference key.\n</p>\n"
  example: []
  syntax:
    content: public virtual ReferenceCollectionBuilder HasForeignKey(params string[] foreignKeyPropertyNames)
    content.vb: Public Overridable Function HasForeignKey(ParamArray foreignKeyPropertyNames As String()) As ReferenceCollectionBuilder
    parameters:
    - id: foreignKeyPropertyNames
      type: System.String[]
      description: "\n    The name(s) of the foreign key property(s).\n"
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceCollectionBuilder.HasForeignKey(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String())
  name.vb: HasForeignKey(String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})
  id: HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKeyBuilder(IReadOnlyList<String>)
  nameWithType: ReferenceCollectionBuilder.HasForeignKeyBuilder(IReadOnlyList<String>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasForeignKeyBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 160
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder HasForeignKeyBuilder(IReadOnlyList<string> foreignKeyPropertyNames)
    content.vb: Protected Overridable Function HasForeignKeyBuilder(foreignKeyPropertyNames As IReadOnlyList(Of String)) As InternalRelationshipBuilder
    parameters:
    - id: foreignKeyPropertyNames
      type: System.Collections.Generic.IReadOnlyList{System.String}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  nameWithType.vb: ReferenceCollectionBuilder.HasForeignKeyBuilder(IReadOnlyList(Of String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList(Of System.String))
  name.vb: HasForeignKeyBuilder(IReadOnlyList(Of String))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  id: HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: HasForeignKeyBuilder(IReadOnlyList<PropertyInfo>)
  nameWithType: ReferenceCollectionBuilder.HasForeignKeyBuilder(IReadOnlyList<PropertyInfo>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasForeignKeyBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 167
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder HasForeignKeyBuilder(IReadOnlyList<PropertyInfo> foreignKeyProperties)
    content.vb: Protected Overridable Function HasForeignKeyBuilder(foreignKeyProperties As IReadOnlyList(Of PropertyInfo)) As InternalRelationshipBuilder
    parameters:
    - id: foreignKeyProperties
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  nameWithType.vb: ReferenceCollectionBuilder.HasForeignKeyBuilder(IReadOnlyList(Of PropertyInfo))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo))
  name.vb: HasForeignKeyBuilder(IReadOnlyList(Of PropertyInfo))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])
  id: HasPrincipalKey(System.String[])
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: HasPrincipalKey(String[])
  nameWithType: ReferenceCollectionBuilder.HasPrincipalKey(String[])
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasPrincipalKey
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 178
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures the unique property(s) that this relationship targets. Typically you would only call this\n    method if you want to use a property(s) other than the primary key as the principal property(s). If\n    the specified property(s) is not already a unique constraint (or the primary key) then a new unique\n    constraint will be introduced.\n"
  example: []
  syntax:
    content: public virtual ReferenceCollectionBuilder HasPrincipalKey(params string[] keyPropertyNames)
    content.vb: Public Overridable Function HasPrincipalKey(ParamArray keyPropertyNames As String()) As ReferenceCollectionBuilder
    parameters:
    - id: keyPropertyNames
      type: System.String[]
      description: 'The name(s) of the reference key property(s). '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  nameWithType.vb: ReferenceCollectionBuilder.HasPrincipalKey(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String())
  name.vb: HasPrincipalKey(String())
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})
  id: HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: HasPrincipalKeyBuilder(IReadOnlyList<String>)
  nameWithType: ReferenceCollectionBuilder.HasPrincipalKeyBuilder(IReadOnlyList<String>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasPrincipalKeyBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 188
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder HasPrincipalKeyBuilder(IReadOnlyList<string> keyPropertyNames)
    content.vb: Protected Overridable Function HasPrincipalKeyBuilder(keyPropertyNames As IReadOnlyList(Of String)) As InternalRelationshipBuilder
    parameters:
    - id: keyPropertyNames
      type: System.Collections.Generic.IReadOnlyList{System.String}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  nameWithType.vb: ReferenceCollectionBuilder.HasPrincipalKeyBuilder(IReadOnlyList(Of String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList(Of System.String))
  name.vb: HasPrincipalKeyBuilder(IReadOnlyList(Of String))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  id: HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: HasPrincipalKeyBuilder(IReadOnlyList<PropertyInfo>)
  nameWithType: ReferenceCollectionBuilder.HasPrincipalKeyBuilder(IReadOnlyList<PropertyInfo>)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: HasPrincipalKeyBuilder
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 195
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual InternalRelationshipBuilder HasPrincipalKeyBuilder(IReadOnlyList<PropertyInfo> keyProperties)
    content.vb: Protected Overridable Function HasPrincipalKeyBuilder(keyProperties As IReadOnlyList(Of PropertyInfo)) As InternalRelationshipBuilder
    parameters:
    - id: keyProperties
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  nameWithType.vb: ReferenceCollectionBuilder.HasPrincipalKeyBuilder(IReadOnlyList(Of PropertyInfo))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo))
  name.vb: HasPrincipalKeyBuilder(IReadOnlyList(Of PropertyInfo))
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)
  id: IsRequired(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: IsRequired(Boolean)
  nameWithType: ReferenceCollectionBuilder.IsRequired(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsRequired
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 204
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures whether this is a required relationship (i.e. whether the foreign key property(s) can\n    be assigned null).\n"
  example: []
  syntax:
    content: public virtual ReferenceCollectionBuilder IsRequired(bool required = true)
    content.vb: Public Overridable Function IsRequired(required As Boolean = True) As ReferenceCollectionBuilder
    parameters:
    - id: required
      type: System.Boolean
      description: 'A value indicating whether this is a required relationship. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  id: OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  langs:
  - csharp
  - vb
  name: OnDelete(DeleteBehavior)
  nameWithType: ReferenceCollectionBuilder.OnDelete(DeleteBehavior)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OnDelete
    path: src/Microsoft.EntityFrameworkCore/Metadata/Builders/ReferenceCollectionBuilder.cs
    startLine: 216
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata.Builders
  summary: "\n    Configures how a delete operation is applied to dependent entities in the relationship when the\n    principal is deleted or the relationship is severed.\n"
  example: []
  syntax:
    content: public virtual ReferenceCollectionBuilder OnDelete(DeleteBehavior deleteBehavior)
    content.vb: Public Overridable Function OnDelete(deleteBehavior As DeleteBehavior) As ReferenceCollectionBuilder
    parameters:
    - id: deleteBehavior
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
      description: 'The action to perform. '
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
      description: 'The same builder instance so that multiple configuration calls can be chained. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IMutableModel>
  nameWithType: IInfrastructure<IMutableModel>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>
  nameWithType.vb: IInfrastructure(Of IMutableModel)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.IMutableModel)
  name.vb: IInfrastructure(Of IMutableModel)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
    name: IMutableModel
    nameWithType: IMutableModel
    fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<InternalRelationshipBuilder>
  nameWithType: IInfrastructure<InternalRelationshipBuilder>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>
  nameWithType.vb: IInfrastructure(Of InternalRelationshipBuilder)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)
  name.vb: IInfrastructure(Of InternalRelationshipBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
    name: InternalRelationshipBuilder
    nameWithType: InternalRelationshipBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  name: ForSqliteHasConstraintName(String)
  nameWithType: SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(String)
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  name: HasConstraintName(String)
  nameWithType: RelationalReferenceCollectionBuilderExtensions.HasConstraintName(String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceCollectionBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceCollectionBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<ReferenceCollectionBuilder, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<ReferenceCollectionBuilder, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of ReferenceCollectionBuilder, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of ReferenceCollectionBuilder, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<ReferenceCollectionBuilder, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<ReferenceCollectionBuilder, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of ReferenceCollectionBuilder, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of ReferenceCollectionBuilder, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  parent: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions
  definition: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  name: ForSqlServerHasConstraintName(String)
  nameWithType: SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: false
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  isExternal: true
  name: ForSqliteHasConstraintName(ReferenceCollectionBuilder, String)
  nameWithType: SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(ReferenceCollectionBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
    name: ReferenceCollectionBuilder
    nameWithType: ReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
    name: ForSqliteHasConstraintName
    nameWithType: SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions.ForSqliteHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
    name: ReferenceCollectionBuilder
    nameWithType: ReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqliteReferenceCollectionBuilderExtensions
  nameWithType: SqliteReferenceCollectionBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqliteReferenceCollectionBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  isExternal: true
  name: HasConstraintName(ReferenceCollectionBuilder, String)
  nameWithType: RelationalReferenceCollectionBuilderExtensions.HasConstraintName(ReferenceCollectionBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceCollectionBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
    name: ReferenceCollectionBuilder
    nameWithType: ReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
    name: HasConstraintName
    nameWithType: RelationalReferenceCollectionBuilderExtensions.HasConstraintName
    fullName: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
    name: ReferenceCollectionBuilder
    nameWithType: ReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: RelationalReferenceCollectionBuilderExtensions
  nameWithType: RelationalReferenceCollectionBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
  isExternal: true
  name: ForSqlServerHasConstraintName(ReferenceCollectionBuilder, String)
  nameWithType: SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(ReferenceCollectionBuilder, String)
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder, System.String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
    name: ReferenceCollectionBuilder
    nameWithType: ReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)
    name: ForSqlServerHasConstraintName
    nameWithType: SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName
    fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions.ForSqlServerHasConstraintName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
    name: ReferenceCollectionBuilder
    nameWithType: ReferenceCollectionBuilder
    fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions
  commentId: T:Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions
  parent: Microsoft.EntityFrameworkCore
  isExternal: false
  name: SqlServerReferenceCollectionBuilderExtensions
  nameWithType: SqlServerReferenceCollectionBuilderExtensions
  fullName: Microsoft.EntityFrameworkCore.SqlServerReferenceCollectionBuilderExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: InternalRelationshipBuilder
  nameWithType: InternalRelationshipBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: false
  name: ReferenceCollectionBuilder
  nameWithType: ReferenceCollectionBuilder
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableForeignKey
  nameWithType: IMutableForeignKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.IMutableModel}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<IMutableModel>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.IMutableModel>.Instance
  nameWithType.vb: IInfrastructure(Of IMutableModel).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.IMutableModel).Instance
- uid: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IMutableModel
  nameWithType: IMutableModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IMutableModel
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  isExternal: false
  name: Instance
  nameWithType: IInfrastructure<T>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>.Instance
  nameWithType.vb: IInfrastructure(Of T).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T).Instance
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Instance
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}.Instance
  parent: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder}
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance
  name: Instance
  nameWithType: IInfrastructure<InternalRelationshipBuilder>.Instance
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder>.Instance
  nameWithType.vb: IInfrastructure(Of InternalRelationshipBuilder).Instance
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder).Instance
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: ChangeTracker
  nameWithType: ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.EntityFrameworkCore.ChangeTracking
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<PropertyInfo>
  nameWithType: IReadOnlyList<PropertyInfo>
  fullName: System.Collections.Generic.IReadOnlyList<System.Reflection.PropertyInfo>
  nameWithType.vb: IReadOnlyList(Of PropertyInfo)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Reflection.PropertyInfo)
  name.vb: IReadOnlyList(Of PropertyInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
