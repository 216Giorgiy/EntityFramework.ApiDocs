### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer
  commentId: T:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer
  id: ModificationCommandComparer
  parent: Microsoft.EntityFrameworkCore.Update.Internal
  children:
  - Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand,Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  - Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.GetComparer(System.Type)
  langs:
  - csharp
  - vb
  name: ModificationCommandComparer
  nameWithType: ModificationCommandComparer
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/ModificationCommandComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ModificationCommandComparer
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/ModificationCommandComparer.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class ModificationCommandComparer : IComparer<ModificationCommand>'
    content.vb: >-
      Public Class ModificationCommandComparer
          Implements IComparer(Of ModificationCommand)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand,Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand,Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  id: Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand,Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  parent: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer
  langs:
  - csharp
  - vb
  name: Compare(ModificationCommand, ModificationCommand)
  nameWithType: ModificationCommandComparer.Compare(ModificationCommand, ModificationCommand)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand, Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/ModificationCommandComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Compare
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/ModificationCommandComparer.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int Compare(ModificationCommand x, ModificationCommand y)
    content.vb: Public Overridable Function Compare(x As ModificationCommand, y As ModificationCommand) As Integer
    parameters:
    - id: x
      type: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    - id: y
      type: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    return:
      type: System.Int32
  overload: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare*
  implements:
  - System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand,Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.GetComparer(System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.GetComparer(System.Type)
  id: GetComparer(System.Type)
  parent: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer
  langs:
  - csharp
  - vb
  name: GetComparer(Type)
  nameWithType: ModificationCommandComparer.GetComparer(Type)
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.GetComparer(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/ModificationCommandComparer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetComparer
    path: src/Microsoft.EntityFrameworkCore.Relational/Update/Internal/ModificationCommandComparer.cs
    startLine: 86
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Update.Internal
  syntax:
    content: protected virtual Func<object, object, int> GetComparer(Type type)
    content.vb: Protected Overridable Function GetComparer(type As Type) As Func(Of Object, Object, Integer)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Func{System.Object,System.Object,System.Int32}
  overload: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.GetComparer*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Update.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Update.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Update.Internal
  fullName: Microsoft.EntityFrameworkCore.Update.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
  commentId: T:System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<ModificationCommand>
  nameWithType: IComparer<ModificationCommand>
  fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Update.ModificationCommand>
  nameWithType.vb: IComparer(Of ModificationCommand)
  fullname.vb: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  name.vb: IComparer(Of ModificationCommand)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullname.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare*
  commentId: Overload:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare
  isExternal: false
  name: Compare
  nameWithType: ModificationCommandComparer.Compare
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare
- uid: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand,Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  commentId: M:System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand,Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  parent: System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(ModificationCommand, ModificationCommand)
  nameWithType: IComparer<ModificationCommand>.Compare(ModificationCommand, ModificationCommand)
  fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Update.ModificationCommand>.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand, Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  nameWithType.vb: IComparer(Of ModificationCommand).Compare(ModificationCommand, ModificationCommand)
  fullname.vb: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Update.ModificationCommand).Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand, Microsoft.EntityFrameworkCore.Update.ModificationCommand)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<ModificationCommand>.Compare
    fullName: System.Collections.Generic.IComparer<Microsoft.EntityFrameworkCore.Update.ModificationCommand>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of ModificationCommand).Compare
    fullName: System.Collections.Generic.IComparer(Of Microsoft.EntityFrameworkCore.Update.ModificationCommand).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
    name: ModificationCommand
    nameWithType: ModificationCommand
    fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Update.ModificationCommand
  commentId: T:Microsoft.EntityFrameworkCore.Update.ModificationCommand
  parent: Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: ModificationCommand
  nameWithType: ModificationCommand
  fullName: Microsoft.EntityFrameworkCore.Update.ModificationCommand
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullname.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Update
  commentId: N:Microsoft.EntityFrameworkCore.Update
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Update
  nameWithType: Microsoft.EntityFrameworkCore.Update
  fullName: Microsoft.EntityFrameworkCore.Update
- uid: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.GetComparer*
  commentId: Overload:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.GetComparer
  isExternal: false
  name: GetComparer
  nameWithType: ModificationCommandComparer.GetComparer
  fullName: Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.GetComparer
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Func{System.Object,System.Object,System.Int32}
  commentId: T:System.Func{System.Object,System.Object,System.Int32}
  parent: System
  definition: System.Func`3
  name: Func<Object, Object, Int32>
  nameWithType: Func<Object, Object, Int32>
  fullName: System.Func<System.Object, System.Object, System.Int32>
  nameWithType.vb: Func(Of Object, Object, Int32)
  fullname.vb: System.Func(Of System.Object, System.Object, System.Int32)
  name.vb: Func(Of Object, Object, Int32)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
