### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations
  id: SqlServerColumnModelAnnotations
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  children:
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.DateTimePrecision
  - Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.IsIdentity
  langs:
  - csharp
  - vb
  name: SqlServerColumnModelAnnotations
  nameWithType: SqlServerColumnModelAnnotations
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerColumnModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqlServerColumnModelAnnotations
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerColumnModelAnnotations.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public class SqlServerColumnModelAnnotations
    content.vb: Public Class SqlServerColumnModelAnnotations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  commentId: M:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  id: '#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)'
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations
  langs:
  - csharp
  - vb
  name: SqlServerColumnModelAnnotations(ColumnModel)
  nameWithType: SqlServerColumnModelAnnotations.SqlServerColumnModelAnnotations(ColumnModel)
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.SqlServerColumnModelAnnotations(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerColumnModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerColumnModelAnnotations.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public SqlServerColumnModelAnnotations(ColumnModel column)
    content.vb: Public Sub New(column As ColumnModel)
    parameters:
    - id: column
      type: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.DateTimePrecision
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.DateTimePrecision
  id: DateTimePrecision
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations
  langs:
  - csharp
  - vb
  name: DateTimePrecision
  nameWithType: SqlServerColumnModelAnnotations.DateTimePrecision
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.DateTimePrecision
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerColumnModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DateTimePrecision
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerColumnModelAnnotations.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual int ? DateTimePrecision { get; set; }
    content.vb: Public Overridable Property DateTimePrecision As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.IsIdentity
  commentId: P:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.IsIdentity
  id: IsIdentity
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations
  langs:
  - csharp
  - vb
  name: IsIdentity
  nameWithType: SqlServerColumnModelAnnotations.IsIdentity
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.SqlServerColumnModelAnnotations.IsIdentity
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerColumnModelAnnotations.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IsIdentity
    path: src/Microsoft.EntityFrameworkCore.SqlServer.Design/Metadata/Internal/SqlServerColumnModelAnnotations.cs
    startLine: 41
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.Design
  namespace: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual bool IsIdentity { get; set; }
    content.vb: Public Overridable Property IsIdentity As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
  commentId: T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
  parent: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: ColumnModel
  nameWithType: ColumnModel
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata.ColumnModel
- uid: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
  fullName: Microsoft.EntityFrameworkCore.Scaffolding.Metadata
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
