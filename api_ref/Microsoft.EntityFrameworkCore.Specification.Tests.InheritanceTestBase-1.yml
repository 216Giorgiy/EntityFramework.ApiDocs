### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  id: InheritanceTestBase`1
  parent: Microsoft.EntityFrameworkCore.Specification.Tests
  children:
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.#ctor(`0)
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_filter_all_animals
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_include_animals
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_include_prey
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_insert_update_delete
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_animals
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_birds
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_plants
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_types_when_shared_column
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_just_kiwis
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_just_roses
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_when_shared_column
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_is_kiwi
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_is_kiwi_in_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_is_kiwi_with_other_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_animal
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird_first
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird_predicate
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird_with_projection
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_kiwi
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_kiwi_where_north_on_derived_property
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_kiwi_where_south_on_derived_property
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_rose
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.CreateContext
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_used_when_projection_over_derived_type
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_used_when_projection_over_derived_type2
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_used_when_projection_over_of_type
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_with_cast_in_shadow_property
  - Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Fixture
  langs:
  - csharp
  - vb
  name: InheritanceTestBase<TFixture>
  nameWithType: InheritanceTestBase<TFixture>
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: InheritanceTestBase
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 11
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: 'public abstract class InheritanceTestBase<TFixture> : IClassFixture<TFixture> where TFixture : InheritanceFixtureBase, new ()'
    content.vb: >-
      Public MustInherit Class InheritanceTestBase(Of TFixture As {InheritanceFixtureBase, New})
          Implements IClassFixture(Of TFixture)
    typeParameters:
    - id: TFixture
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{{TFixture}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: InheritanceTestBase(Of TFixture)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture)
  name.vb: InheritanceTestBase(Of TFixture)
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_when_shared_column
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_when_shared_column
  id: Can_query_when_shared_column
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_query_when_shared_column()
  nameWithType: InheritanceTestBase<TFixture>.Can_query_when_shared_column()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_query_when_shared_column()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_query_when_shared_column
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_query_when_shared_column()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_query_when_shared_column
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_query_when_shared_column()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_query_when_shared_column()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_types_when_shared_column
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_types_when_shared_column
  id: Can_query_all_types_when_shared_column
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_query_all_types_when_shared_column()
  nameWithType: InheritanceTestBase<TFixture>.Can_query_all_types_when_shared_column()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_query_all_types_when_shared_column()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_query_all_types_when_shared_column
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_query_all_types_when_shared_column()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_query_all_types_when_shared_column
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_query_all_types_when_shared_column()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_query_all_types_when_shared_column()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_animal
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_animal
  id: Can_use_of_type_animal
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_of_type_animal()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_of_type_animal()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_of_type_animal()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_of_type_animal
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 57
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_of_type_animal()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_of_type_animal
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_of_type_animal()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_of_type_animal()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_is_kiwi
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_is_kiwi
  id: Can_use_is_kiwi
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_is_kiwi()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_is_kiwi()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_is_kiwi()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_is_kiwi
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 71
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_is_kiwi()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_is_kiwi
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_is_kiwi()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_is_kiwi()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_is_kiwi_with_other_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_is_kiwi_with_other_predicate
  id: Can_use_is_kiwi_with_other_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_is_kiwi_with_other_predicate()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_is_kiwi_with_other_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_is_kiwi_with_other_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_is_kiwi_with_other_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 82
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_is_kiwi_with_other_predicate()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_is_kiwi_with_other_predicate
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_is_kiwi_with_other_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_is_kiwi_with_other_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_is_kiwi_in_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_is_kiwi_in_projection
  id: Can_use_is_kiwi_in_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_is_kiwi_in_projection()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_is_kiwi_in_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_is_kiwi_in_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_is_kiwi_in_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 93
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_is_kiwi_in_projection()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_is_kiwi_in_projection
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_is_kiwi_in_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_is_kiwi_in_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird
  id: Can_use_of_type_bird
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_of_type_bird()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_of_type_bird()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_of_type_bird()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_of_type_bird
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 106
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_of_type_bird()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_of_type_bird
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_of_type_bird()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_of_type_bird()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird_predicate
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird_predicate
  id: Can_use_of_type_bird_predicate
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_of_type_bird_predicate()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_of_type_bird_predicate()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_of_type_bird_predicate()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_of_type_bird_predicate
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 120
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_of_type_bird_predicate()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_of_type_bird_predicate
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_of_type_bird_predicate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_of_type_bird_predicate()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird_with_projection
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird_with_projection
  id: Can_use_of_type_bird_with_projection
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_of_type_bird_with_projection()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_of_type_bird_with_projection()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_of_type_bird_with_projection()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_of_type_bird_with_projection
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 138
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_of_type_bird_with_projection()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_of_type_bird_with_projection
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_of_type_bird_with_projection()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_of_type_bird_with_projection()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird_first
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_bird_first
  id: Can_use_of_type_bird_first
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_of_type_bird_first()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_of_type_bird_first()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_of_type_bird_first()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_of_type_bird_first
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 154
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_of_type_bird_first()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_of_type_bird_first
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_of_type_bird_first()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_of_type_bird_first()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_kiwi
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_kiwi
  id: Can_use_of_type_kiwi
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_of_type_kiwi()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_of_type_kiwi()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_of_type_kiwi()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_of_type_kiwi
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 167
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_of_type_kiwi()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_of_type_kiwi
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_of_type_kiwi()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_of_type_kiwi()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_rose
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_rose
  id: Can_use_of_type_rose
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_of_type_rose()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_of_type_rose()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_of_type_rose()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_of_type_rose
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 180
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_of_type_rose()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_of_type_rose
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_of_type_rose()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_of_type_rose()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_animals
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_animals
  id: Can_query_all_animals
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_query_all_animals()
  nameWithType: InheritanceTestBase<TFixture>.Can_query_all_animals()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_query_all_animals()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_query_all_animals
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 193
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_query_all_animals()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_query_all_animals
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_query_all_animals()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_query_all_animals()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_plants
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_plants
  id: Can_query_all_plants
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_query_all_plants()
  nameWithType: InheritanceTestBase<TFixture>.Can_query_all_plants()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_query_all_plants()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_query_all_plants
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 206
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_query_all_plants()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_query_all_plants
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_query_all_plants()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_query_all_plants()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_filter_all_animals
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_filter_all_animals
  id: Can_filter_all_animals
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_filter_all_animals()
  nameWithType: InheritanceTestBase<TFixture>.Can_filter_all_animals()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_filter_all_animals()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_filter_all_animals
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 219
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_filter_all_animals()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_filter_all_animals
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_filter_all_animals()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_filter_all_animals()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_birds
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_all_birds
  id: Can_query_all_birds
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_query_all_birds()
  nameWithType: InheritanceTestBase<TFixture>.Can_query_all_birds()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_query_all_birds()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_query_all_birds
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 235
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_query_all_birds()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_query_all_birds
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_query_all_birds()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_query_all_birds()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_just_kiwis
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_just_kiwis
  id: Can_query_just_kiwis
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_query_just_kiwis()
  nameWithType: InheritanceTestBase<TFixture>.Can_query_just_kiwis()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_query_just_kiwis()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_query_just_kiwis
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 248
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_query_just_kiwis()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_query_just_kiwis
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_query_just_kiwis()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_query_just_kiwis()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_just_roses
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_query_just_roses
  id: Can_query_just_roses
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_query_just_roses()
  nameWithType: InheritanceTestBase<TFixture>.Can_query_just_roses()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_query_just_roses()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_query_just_roses
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 259
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_query_just_roses()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_query_just_roses
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_query_just_roses()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_query_just_roses()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_include_animals
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_include_animals
  id: Can_include_animals
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_include_animals()
  nameWithType: InheritanceTestBase<TFixture>.Can_include_animals()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_include_animals()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_include_animals
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 270
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_include_animals()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_include_animals
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_include_animals()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_include_animals()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_include_prey
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_include_prey
  id: Can_include_prey
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_include_prey()
  nameWithType: InheritanceTestBase<TFixture>.Can_include_prey()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_include_prey()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_include_prey
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 287
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_include_prey()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_include_prey
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_include_prey()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_include_prey()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_kiwi_where_south_on_derived_property
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_kiwi_where_south_on_derived_property
  id: Can_use_of_type_kiwi_where_south_on_derived_property
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_of_type_kiwi_where_south_on_derived_property()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_of_type_kiwi_where_south_on_derived_property()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_of_type_kiwi_where_south_on_derived_property()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_of_type_kiwi_where_south_on_derived_property
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 302
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_of_type_kiwi_where_south_on_derived_property()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_of_type_kiwi_where_south_on_derived_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_of_type_kiwi_where_south_on_derived_property()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_of_type_kiwi_where_south_on_derived_property()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_kiwi_where_north_on_derived_property
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_use_of_type_kiwi_where_north_on_derived_property
  id: Can_use_of_type_kiwi_where_north_on_derived_property
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_use_of_type_kiwi_where_north_on_derived_property()
  nameWithType: InheritanceTestBase<TFixture>.Can_use_of_type_kiwi_where_north_on_derived_property()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_use_of_type_kiwi_where_north_on_derived_property()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_use_of_type_kiwi_where_north_on_derived_property
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 319
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_use_of_type_kiwi_where_north_on_derived_property()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_use_of_type_kiwi_where_north_on_derived_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_use_of_type_kiwi_where_north_on_derived_property()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_use_of_type_kiwi_where_north_on_derived_property()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_used_when_projection_over_derived_type
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_used_when_projection_over_derived_type
  id: Discriminator_used_when_projection_over_derived_type
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Discriminator_used_when_projection_over_derived_type()
  nameWithType: InheritanceTestBase<TFixture>.Discriminator_used_when_projection_over_derived_type()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Discriminator_used_when_projection_over_derived_type()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Discriminator_used_when_projection_over_derived_type
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 335
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Discriminator_used_when_projection_over_derived_type()
    content.vb: >-
      <Fact>

      Public Overridable Sub Discriminator_used_when_projection_over_derived_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Discriminator_used_when_projection_over_derived_type()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Discriminator_used_when_projection_over_derived_type()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_used_when_projection_over_derived_type2
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_used_when_projection_over_derived_type2
  id: Discriminator_used_when_projection_over_derived_type2
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Discriminator_used_when_projection_over_derived_type2()
  nameWithType: InheritanceTestBase<TFixture>.Discriminator_used_when_projection_over_derived_type2()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Discriminator_used_when_projection_over_derived_type2()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Discriminator_used_when_projection_over_derived_type2
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 349
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Discriminator_used_when_projection_over_derived_type2()
    content.vb: >-
      <Fact>

      Public Overridable Sub Discriminator_used_when_projection_over_derived_type2
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Discriminator_used_when_projection_over_derived_type2()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Discriminator_used_when_projection_over_derived_type2()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_with_cast_in_shadow_property
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_with_cast_in_shadow_property
  id: Discriminator_with_cast_in_shadow_property
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Discriminator_with_cast_in_shadow_property()
  nameWithType: InheritanceTestBase<TFixture>.Discriminator_with_cast_in_shadow_property()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Discriminator_with_cast_in_shadow_property()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Discriminator_with_cast_in_shadow_property
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 363
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Discriminator_with_cast_in_shadow_property()
    content.vb: >-
      <Fact>

      Public Overridable Sub Discriminator_with_cast_in_shadow_property
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Discriminator_with_cast_in_shadow_property()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Discriminator_with_cast_in_shadow_property()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_used_when_projection_over_of_type
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Discriminator_used_when_projection_over_of_type
  id: Discriminator_used_when_projection_over_of_type
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Discriminator_used_when_projection_over_of_type()
  nameWithType: InheritanceTestBase<TFixture>.Discriminator_used_when_projection_over_of_type()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Discriminator_used_when_projection_over_of_type()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Discriminator_used_when_projection_over_of_type
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 378
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Discriminator_used_when_projection_over_of_type()
    content.vb: >-
      <Fact>

      Public Overridable Sub Discriminator_used_when_projection_over_of_type
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Discriminator_used_when_projection_over_of_type()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Discriminator_used_when_projection_over_of_type()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_insert_update_delete
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Can_insert_update_delete
  id: Can_insert_update_delete
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Can_insert_update_delete()
  nameWithType: InheritanceTestBase<TFixture>.Can_insert_update_delete()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Can_insert_update_delete()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Can_insert_update_delete
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 393
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: >-
      [Fact]

      public virtual void Can_insert_update_delete()
    content.vb: >-
      <Fact>

      Public Overridable Sub Can_insert_update_delete
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: InheritanceTestBase(Of TFixture).Can_insert_update_delete()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Can_insert_update_delete()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.CreateContext
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.CreateContext
  id: CreateContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: InheritanceTestBase<TFixture>.CreateContext()
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.CreateContext()
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: CreateContext
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 441
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected InheritanceContext CreateContext()
    content.vb: Protected Function CreateContext As InheritanceContext
    return:
      type: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.InheritanceContext
  nameWithType.vb: InheritanceTestBase(Of TFixture).CreateContext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).CreateContext()
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Fixture
  commentId: P:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.Fixture
  id: Fixture
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: InheritanceTestBase<TFixture>.Fixture
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.Fixture
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Fixture
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 443
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected TFixture Fixture { get; }
    content.vb: Protected ReadOnly Property Fixture As TFixture
    parameters: []
    return:
      type: '{TFixture}'
  nameWithType.vb: InheritanceTestBase(Of TFixture).Fixture
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).Fixture
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.#ctor(`0)
  commentId: M:Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase`1
  langs:
  - csharp
  - vb
  name: InheritanceTestBase(TFixture)
  nameWithType: InheritanceTestBase<TFixture>.InheritanceTestBase(TFixture)
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase<TFixture>.InheritanceTestBase(TFixture)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Specification.Tests/InheritanceTestBase.cs
    startLine: 445
  assemblies:
  - Microsoft.EntityFrameworkCore.Specification.Tests
  namespace: Microsoft.EntityFrameworkCore.Specification.Tests
  syntax:
    content: protected InheritanceTestBase(TFixture fixture)
    content.vb: Protected Sub New(fixture As TFixture)
    parameters:
    - id: fixture
      type: '{TFixture}'
  nameWithType.vb: InheritanceTestBase(Of TFixture).InheritanceTestBase(TFixture)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.EntityFrameworkCore.Specification.Tests.InheritanceTestBase(Of TFixture).InheritanceTestBase(TFixture)
references:
- uid: Microsoft.EntityFrameworkCore.Specification.Tests
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{{TFixture}}
  commentId: T:Xunit.IClassFixture{`0}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.InheritanceContext
  commentId: T:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.InheritanceContext
  parent: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  isExternal: false
  name: InheritanceContext
  nameWithType: InheritanceContext
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance.InheritanceContext
- uid: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  commentId: N:Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  nameWithType: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
  fullName: Microsoft.EntityFrameworkCore.Specification.Tests.TestModels.Inheritance
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  isExternal: false
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
