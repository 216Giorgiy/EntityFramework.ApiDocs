### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  commentId: T:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  id: MusicStoreQueryTests.Album
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  children:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.#ctor
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.AlbumArtUrl
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.AlbumId
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Artist
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.ArtistId
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Created
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Genre
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.GenreId
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.OrderDetails
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Price
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Title
  langs:
  - csharp
  - vb
  name: MusicStoreQueryTests.Album
  nameWithType: MusicStoreQueryTests.Album
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Album
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 104
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public class Album
    content.vb: Public Class Album
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.AlbumId
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.AlbumId
  id: AlbumId
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: AlbumId
  nameWithType: MusicStoreQueryTests.Album.AlbumId
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.AlbumId
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlbumId
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 106
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public int AlbumId { get; set; }
    content.vb: Public Property AlbumId As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.GenreId
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.GenreId
  id: GenreId
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: GenreId
  nameWithType: MusicStoreQueryTests.Album.GenreId
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.GenreId
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GenreId
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 107
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public int GenreId { get; set; }
    content.vb: Public Property GenreId As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.ArtistId
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.ArtistId
  id: ArtistId
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: ArtistId
  nameWithType: MusicStoreQueryTests.Album.ArtistId
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.ArtistId
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ArtistId
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 108
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public int ArtistId { get; set; }
    content.vb: Public Property ArtistId As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Title
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Title
  id: Title
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: MusicStoreQueryTests.Album.Title
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Title
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Title
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 109
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string Title { get; set; }
    content.vb: Public Property Title As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Price
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Price
  id: Price
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: MusicStoreQueryTests.Album.Price
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Price
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Price
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 110
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public decimal Price { get; set; }
    content.vb: Public Property Price As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.AlbumArtUrl
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.AlbumArtUrl
  id: AlbumArtUrl
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: AlbumArtUrl
  nameWithType: MusicStoreQueryTests.Album.AlbumArtUrl
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.AlbumArtUrl
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: AlbumArtUrl
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 111
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public string AlbumArtUrl { get; set; }
    content.vb: Public Property AlbumArtUrl As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Genre
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Genre
  id: Genre
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: Genre
  nameWithType: MusicStoreQueryTests.Album.Genre
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Genre
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Genre
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 113
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public virtual MusicStoreQueryTests.Genre Genre { get; set; }
    content.vb: Public Overridable Property Genre As MusicStoreQueryTests.Genre
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Artist
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Artist
  id: Artist
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: Artist
  nameWithType: MusicStoreQueryTests.Album.Artist
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Artist
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Artist
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 114
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public virtual MusicStoreQueryTests.Artist Artist { get; set; }
    content.vb: Public Overridable Property Artist As MusicStoreQueryTests.Artist
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.OrderDetails
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.OrderDetails
  id: OrderDetails
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: OrderDetails
  nameWithType: MusicStoreQueryTests.Album.OrderDetails
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.OrderDetails
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: OrderDetails
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 115
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public virtual List<MusicStoreQueryTests.OrderDetail> OrderDetails { get; set; }
    content.vb: Public Overridable Property OrderDetails As List(Of MusicStoreQueryTests.OrderDetail)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail}
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Created
  commentId: P:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Created
  id: Created
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: MusicStoreQueryTests.Album.Created
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Created
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Created
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 117
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public DateTime Created { get; set; }
    content.vb: Public Property Created As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album
  langs:
  - csharp
  - vb
  name: Album()
  nameWithType: MusicStoreQueryTests.Album.Album()
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Album.Album()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.InMemory.FunctionalTests/MusicStoreQueryTests.cs
    startLine: 119
  assemblies:
  - Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  syntax:
    content: public Album()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  commentId: N:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  isExternal: false
  name: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  nameWithType: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre
  commentId: T:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  isExternal: false
  name: MusicStoreQueryTests.Genre
  nameWithType: MusicStoreQueryTests.Genre
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Genre
- uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist
  commentId: T:Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist
  parent: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests
  isExternal: false
  name: MusicStoreQueryTests.Artist
  nameWithType: MusicStoreQueryTests.Artist
  fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.Artist
- uid: System.Collections.Generic.List{Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail}
  commentId: T:System.Collections.Generic.List{Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MusicStoreQueryTests.OrderDetail>
  nameWithType: List<MusicStoreQueryTests.OrderDetail>
  fullName: System.Collections.Generic.List<Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail>
  nameWithType.vb: List(Of MusicStoreQueryTests.OrderDetail)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail)
  name.vb: List(Of MusicStoreQueryTests.OrderDetail)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail
    name: MusicStoreQueryTests.OrderDetail
    nameWithType: MusicStoreQueryTests.OrderDetail
    fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail
    name: MusicStoreQueryTests.OrderDetail
    nameWithType: MusicStoreQueryTests.OrderDetail
    fullName: Microsoft.EntityFrameworkCore.InMemory.FunctionalTests.MusicStoreQueryTests.OrderDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
