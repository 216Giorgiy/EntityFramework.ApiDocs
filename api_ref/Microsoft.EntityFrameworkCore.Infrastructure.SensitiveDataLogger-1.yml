### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1
  id: SensitiveDataLogger`1
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  children:
  - Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.#ctor(ILogger{`0},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  - Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.LogSensitiveData
  langs:
  - csharp
  - vb
  name: SensitiveDataLogger<T>
  nameWithType: SensitiveDataLogger<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger<T>
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/SensitiveDataLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SensitiveDataLogger
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/SensitiveDataLogger.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\n<p>\n    A wrapping logger for which logging of sensitive data can be enabled or disabled.\n</p>\n<p>\n    This type is typically used by database providers (and other extensions). It is generally\n    not used in application code.\n</p>\n"
  example: []
  syntax:
    content: 'public class SensitiveDataLogger<T> : ISensitiveDataLogger<T>, ILogger<T>, ISensitiveDataLogger, ILogger'
    content.vb: >-
      Public Class SensitiveDataLogger(Of T)
          Implements ISensitiveDataLogger(Of T), ILogger(Of T), ISensitiveDataLogger, ILogger
    typeParameters:
    - id: T
      description: 'The type who''s name is used for the logger category name. '
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger{{T}}
  - Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand,System.Int64,System.Int64)
  nameWithType.vb: SensitiveDataLogger(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger(Of T)
  name.vb: SensitiveDataLogger(Of T)
- uid: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.#ctor(ILogger{`0},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  commentId: M:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.#ctor(ILogger{`0},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  id: '#ctor(ILogger{`0},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)'
  parent: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1
  langs:
  - csharp
  - vb
  name: SensitiveDataLogger(ILogger<T>, IDbContextOptions)
  nameWithType: SensitiveDataLogger<T>.SensitiveDataLogger(ILogger<T>, IDbContextOptions)
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger<T>.SensitiveDataLogger(ILogger<T>, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/SensitiveDataLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/SensitiveDataLogger.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public SensitiveDataLogger(ILogger<T> logger, IDbContextOptions contextOptions)
    content.vb: Public Sub New(logger As ILogger(Of T), contextOptions As IDbContextOptions)
    parameters:
    - id: logger
      type: ILogger{{T}}
      description: "\nThe underlying logger to which logging information should be written.\n"
    - id: contextOptions
      type: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
      description: "\nThe options for the context that this logger is being used with.\n"
  overload: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.#ctor*
  nameWithType.vb: SensitiveDataLogger(Of T).SensitiveDataLogger(ILogger(Of T), IDbContextOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger(Of T).SensitiveDataLogger(ILogger(Of T), Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)
  name.vb: SensitiveDataLogger(ILogger(Of T), IDbContextOptions)
- uid: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.LogSensitiveData
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.LogSensitiveData
  id: LogSensitiveData
  parent: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1
  langs:
  - csharp
  - vb
  name: LogSensitiveData
  nameWithType: SensitiveDataLogger<T>.LogSensitiveData
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger<T>.LogSensitiveData
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Infrastructure/SensitiveDataLogger.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LogSensitiveData
    path: src/Microsoft.EntityFrameworkCore/Infrastructure/SensitiveDataLogger.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Infrastructure
  summary: "\nGets a value indicating whether sensitive information should be written to the underlying logger.\n"
  example: []
  syntax:
    content: public virtual bool LogSensitiveData { get; }
    content.vb: Public Overridable ReadOnly Property LogSensitiveData As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.LogSensitiveData*
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.LogSensitiveData
  nameWithType.vb: SensitiveDataLogger(Of T).LogSensitiveData
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger(Of T).LogSensitiveData
references:
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger{{T}}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger{`0}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
  name: ISensitiveDataLogger<T>
  nameWithType: ISensitiveDataLogger<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger<T>
  nameWithType.vb: ISensitiveDataLogger(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger(Of T)
  name.vb: ISensitiveDataLogger(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: ISensitiveDataLogger
  nameWithType: ISensitiveDataLogger
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand,System.Int64,System.Int64)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
  parent: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
  definition: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
  name: LogCommandExecuted(DbCommand, Int64, Int64)
  nameWithType: RelationalLoggerExtensions.LogCommandExecuted(DbCommand, Int64, Int64)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand, System.Int64, System.Int64)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand,System.Int64,System.Int64)
    name: LogCommandExecuted
    nameWithType: RelationalLoggerExtensions.LogCommandExecuted
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(System.Data.Common.DbCommand,System.Int64,System.Int64)
    name: LogCommandExecuted
    nameWithType: RelationalLoggerExtensions.LogCommandExecuted
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
  isExternal: false
  name: ISensitiveDataLogger<T>
  nameWithType: ISensitiveDataLogger<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger<T>
  nameWithType.vb: ISensitiveDataLogger(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger(Of T)
  name.vb: ISensitiveDataLogger(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
  commentId: M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
  isExternal: true
  name: LogCommandExecuted(ISensitiveDataLogger, DbCommand, Int64, Int64)
  nameWithType: RelationalLoggerExtensions.LogCommandExecuted(ISensitiveDataLogger, DbCommand, Int64, Int64)
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger, System.Data.Common.DbCommand, System.Int64, System.Int64)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
    name: LogCommandExecuted
    nameWithType: RelationalLoggerExtensions.LogCommandExecuted
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)
    name: LogCommandExecuted
    nameWithType: RelationalLoggerExtensions.LogCommandExecuted
    fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
    name: ISensitiveDataLogger
    nameWithType: ISensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
  parent: Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: RelationalLoggerExtensions
  nameWithType: RelationalLoggerExtensions
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions
- uid: Microsoft.EntityFrameworkCore.Storage.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Storage.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Storage.Internal
  fullName: Microsoft.EntityFrameworkCore.Storage.Internal
- uid: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1
  isExternal: false
  name: SensitiveDataLogger<T>
  nameWithType: SensitiveDataLogger<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger<T>
  nameWithType.vb: SensitiveDataLogger(Of T)
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger(Of T)
  name.vb: SensitiveDataLogger(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1
    name: SensitiveDataLogger
    nameWithType: SensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1
    name: SensitiveDataLogger
    nameWithType: SensitiveDataLogger
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.#ctor*
  commentId: Overload:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.#ctor
  isExternal: false
  name: SensitiveDataLogger
  nameWithType: SensitiveDataLogger<T>.SensitiveDataLogger
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger<T>.SensitiveDataLogger
  nameWithType.vb: SensitiveDataLogger(Of T).SensitiveDataLogger
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger(Of T).SensitiveDataLogger
- uid: ILogger{{T}}
  commentId: '!:ILogger{`0}'
  definition: ILogger`1
  name: ILogger<T>
  nameWithType: ILogger<T>
  fullName: ILogger<T>
  nameWithType.vb: ILogger(Of T)
  fullname.vb: ILogger(Of T)
  name.vb: ILogger(Of T)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: false
  name: IDbContextOptions
  nameWithType: IDbContextOptions
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullname.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.LogSensitiveData*
  commentId: Overload:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.LogSensitiveData
  isExternal: false
  name: LogSensitiveData
  nameWithType: SensitiveDataLogger<T>.LogSensitiveData
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger<T>.LogSensitiveData
  nameWithType.vb: SensitiveDataLogger(Of T).LogSensitiveData
  fullname.vb: Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger(Of T).LogSensitiveData
- uid: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.LogSensitiveData
  commentId: P:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.LogSensitiveData
  parent: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger
  isExternal: false
  name: LogSensitiveData
  nameWithType: ISensitiveDataLogger.LogSensitiveData
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.LogSensitiveData
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
