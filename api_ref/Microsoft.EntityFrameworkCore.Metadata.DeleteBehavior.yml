### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  id: DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  children:
  - Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Cascade
  - Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Restrict
  - Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.SetNull
  langs:
  - csharp
  - vb
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  type: Enum
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DeleteBehavior
    path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n    Indicates how a delete operation is applied to dependent entities in a relationship when the principal is deleted\n    or the relationship is severed.\n"
  example: []
  syntax:
    content: public enum DeleteBehavior
    content.vb: Public Enum DeleteBehavior
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Restrict
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Restrict
  id: Restrict
  parent: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  langs:
  - csharp
  - vb
  name: Restrict
  nameWithType: DeleteBehavior.Restrict
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Restrict
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Restrict
    path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n    The delete operation is not applied to dependent entities. The dependent entities remain unchanged.\n"
  example: []
  syntax:
    content: Restrict = 0
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.SetNull
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.SetNull
  id: SetNull
  parent: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  langs:
  - csharp
  - vb
  name: SetNull
  nameWithType: DeleteBehavior.SetNull
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.SetNull
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SetNull
    path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n    The foreign key properties in dependent entities are set to null. This cascading behavior is only applied\n    to entities that are being tracked by the context. A corresponding cascade behavior should be setup in the\n    database to ensure data that is not being tracked by the context has the same action applied. If you use\n    EF to create the database, this cascade behavior will be setup for you.\n"
  example: []
  syntax:
    content: SetNull = 1
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Cascade
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Cascade
  id: Cascade
  parent: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  langs:
  - csharp
  - vb
  name: Cascade
  nameWithType: DeleteBehavior.Cascade
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Cascade
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Cascade
    path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\n    Dependent entities are also deleted. This cascading behavior is only applied\n    to entities that are being tracked by the context. A corresponding cascade behavior should be setup in the\n    database to ensure data that is not being tracked by the context has the same action applied. If you use\n    EF to create the database, this cascade behavior will be setup for you.\n"
  example: []
  syntax:
    content: Cascade = 2
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<DeleteBehavior, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<DeleteBehavior, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of DeleteBehavior, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of DeleteBehavior, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<DeleteBehavior, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<DeleteBehavior, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of DeleteBehavior, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of DeleteBehavior, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
