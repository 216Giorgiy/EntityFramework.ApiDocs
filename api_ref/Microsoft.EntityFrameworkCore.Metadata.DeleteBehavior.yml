### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  id: DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  children:
  - Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Cascade
  - Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Restrict
  - Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.SetNull
  langs:
  - csharp
  - vb
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  type: Enum
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: DeleteBehavior
    path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
    startLine: 9
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\nIndicates how a delete operation is applied to dependent entities in a relationship when the principal is deleted\nor the relationship is severed.\n"
  example: []
  syntax:
    content: public enum DeleteBehavior
    content.vb: Public Enum DeleteBehavior
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Restrict
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Restrict
  id: Restrict
  parent: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  langs:
  - csharp
  - vb
  name: Restrict
  nameWithType: DeleteBehavior.Restrict
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Restrict
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Restrict
    path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
    startLine: 14
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\nThe delete operation is not applied to dependent entities. The dependent entities remain unchanged.\n"
  example: []
  syntax:
    content: Restrict = 0
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.SetNull
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.SetNull
  id: SetNull
  parent: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  langs:
  - csharp
  - vb
  name: SetNull
  nameWithType: DeleteBehavior.SetNull
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.SetNull
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SetNull
    path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\nThe foreign key properties in dependent entities are set to null. This cascading behavior is only applied\nto entities that are being tracked by the context. A corresponding cascade behavior should be setup in the\ndatabase to ensure data that is not being tracked by the context has the same action applied. If you use\nEF to create the database, this cascade behavior will be setup for you.\n"
  example: []
  syntax:
    content: SetNull = 1
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Cascade
  commentId: F:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Cascade
  id: Cascade
  parent: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  langs:
  - csharp
  - vb
  name: Cascade
  nameWithType: DeleteBehavior.Cascade
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Cascade
  type: Field
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Cascade
    path: src/Microsoft.EntityFrameworkCore/Metadata/DeleteBehavior.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Metadata
  summary: "\nDependent entities are also deleted. This cascading behavior is only applied\nto entities that are being tracked by the context. A corresponding cascade behavior should be setup in the\ndatabase to ensure data that is not being tracked by the context has the same action applied. If you use\nEF to create the database, this cascade behavior will be setup for you.\n"
  example: []
  syntax:
    content: Cascade = 2
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: DeleteBehavior
  nameWithType: DeleteBehavior
  fullName: Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior
