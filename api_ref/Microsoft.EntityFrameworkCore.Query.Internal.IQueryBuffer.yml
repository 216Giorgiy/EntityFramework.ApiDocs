### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  id: IQueryBuffer
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  langs:
  - csharp
  - vb
  name: IQueryBuffer
  nameWithType: IQueryBuffer
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IQueryBuffer
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
    startLine: 15
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IQueryBuffer
    content.vb: Public Interface IQueryBuffer
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  id: GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  langs:
  - csharp
  - vb
  name: GetEntity(IKey, EntityLoadInfo, Boolean, Boolean)
  nameWithType: IQueryBuffer.GetEntity(IKey, EntityLoadInfo, Boolean, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey, Microsoft.EntityFrameworkCore.Query.EntityLoadInfo, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetEntity
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: object GetEntity(IKey key, EntityLoadInfo entityLoadInfo, bool queryStateManager, bool throwOnNullKey)
    content.vb: Function GetEntity(key As IKey, entityLoadInfo As EntityLoadInfo, queryStateManager As Boolean, throwOnNullKey As Boolean) As Object
    parameters:
    - id: key
      type: Microsoft.EntityFrameworkCore.Metadata.IKey
    - id: entityLoadInfo
      type: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
    - id: queryStateManager
      type: System.Boolean
    - id: throwOnNullKey
      type: System.Boolean
    return:
      type: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  id: GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  langs:
  - csharp
  - vb
  name: GetPropertyValue(Object, IProperty)
  nameWithType: IQueryBuffer.GetPropertyValue(Object, IProperty)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object, Microsoft.EntityFrameworkCore.Metadata.IProperty)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: GetPropertyValue
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
    startLine: 31
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: object GetPropertyValue(object entity, IProperty property)
    content.vb: Function GetPropertyValue(entity As Object, property As IProperty) As Object
    parameters:
    - id: entity
      type: System.Object
    - id: property
      type: Microsoft.EntityFrameworkCore.Metadata.IProperty
    return:
      type: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  id: StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  langs:
  - csharp
  - vb
  name: StartTracking(Object, EntityTrackingInfo)
  nameWithType: IQueryBuffer.StartTracking(Object, EntityTrackingInfo)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object, Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: StartTracking
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void StartTracking(object entity, EntityTrackingInfo entityTrackingInfo)
    content.vb: Sub StartTracking(entity As Object, entityTrackingInfo As EntityTrackingInfo)
    parameters:
    - id: entity
      type: System.Object
    - id: entityTrackingInfo
      type: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  id: Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  langs:
  - csharp
  - vb
  name: Include(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IRelatedEntitiesLoader>, Boolean)
  nameWithType: IQueryBuffer.Include(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IRelatedEntitiesLoader>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Include
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
    startLine: 47
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void Include(QueryContext queryContext, object entity, IReadOnlyList<INavigation> navigationPath, IReadOnlyList<IRelatedEntitiesLoader> relatedEntitiesLoaders, bool queryStateManager)
    content.vb: Sub Include(queryContext As QueryContext, entity As Object, navigationPath As IReadOnlyList(Of INavigation), relatedEntitiesLoaders As IReadOnlyList(Of IRelatedEntitiesLoader), queryStateManager As Boolean)
    parameters:
    - id: queryContext
      type: Microsoft.EntityFrameworkCore.Query.QueryContext
    - id: entity
      type: System.Object
    - id: navigationPath
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
    - id: relatedEntitiesLoaders
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader}
    - id: queryStateManager
      type: System.Boolean
  nameWithType.vb: IQueryBuffer.Include(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IRelatedEntitiesLoader), Boolean)
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader), System.Boolean)
  name.vb: Include(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IRelatedEntitiesLoader), Boolean)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  id: IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer
  langs:
  - csharp
  - vb
  name: IncludeAsync(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IAsyncRelatedEntitiesLoader>, Boolean, CancellationToken)
  nameWithType: IQueryBuffer.IncludeAsync(QueryContext, Object, IReadOnlyList<INavigation>, IReadOnlyList<IAsyncRelatedEntitiesLoader>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>, System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IncludeAsync
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/IQueryBuffer.cs
    startLine: 58
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used \n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Task IncludeAsync(QueryContext queryContext, object entity, IReadOnlyList<INavigation> navigationPath, IReadOnlyList<IAsyncRelatedEntitiesLoader> relatedEntitiesLoaders, bool queryStateManager, CancellationToken cancellationToken)
    content.vb: Function IncludeAsync(queryContext As QueryContext, entity As Object, navigationPath As IReadOnlyList(Of INavigation), relatedEntitiesLoaders As IReadOnlyList(Of IAsyncRelatedEntitiesLoader), queryStateManager As Boolean, cancellationToken As CancellationToken) As Task
    parameters:
    - id: queryContext
      type: Microsoft.EntityFrameworkCore.Query.QueryContext
    - id: entity
      type: System.Object
    - id: navigationPath
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
    - id: relatedEntitiesLoaders
      type: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}
    - id: queryStateManager
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: IQueryBuffer.IncludeAsync(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IAsyncRelatedEntitiesLoader), Boolean, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext, System.Object, System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation), System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader), System.Boolean, System.Threading.CancellationToken)
  name.vb: IncludeAsync(QueryContext, Object, IReadOnlyList(Of INavigation), IReadOnlyList(Of IAsyncRelatedEntitiesLoader), Boolean, CancellationToken)
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<IQueryBuffer, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<IQueryBuffer, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of IQueryBuffer, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of IQueryBuffer, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<IQueryBuffer, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<IQueryBuffer, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of IQueryBuffer, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of IQueryBuffer, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Metadata.IKey
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IKey
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IKey
  nameWithType: IKey
  fullName: Microsoft.EntityFrameworkCore.Metadata.IKey
- uid: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
  commentId: T:Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: EntityLoadInfo
  nameWithType: EntityLoadInfo
  fullName: Microsoft.EntityFrameworkCore.Query.EntityLoadInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.IProperty
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IProperty
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IProperty
  nameWithType: IProperty
  fullName: Microsoft.EntityFrameworkCore.Metadata.IProperty
- uid: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: EntityTrackingInfo
  nameWithType: EntityTrackingInfo
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo
- uid: Microsoft.EntityFrameworkCore.Query.QueryContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.QueryContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: QueryContext
  nameWithType: QueryContext
  fullName: Microsoft.EntityFrameworkCore.Query.QueryContext
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<INavigation>
  nameWithType: IReadOnlyList<INavigation>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Metadata.INavigation>
  nameWithType.vb: IReadOnlyList(Of INavigation)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Metadata.INavigation)
  name.vb: IReadOnlyList(Of INavigation)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
    name: INavigation
    nameWithType: INavigation
    fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IRelatedEntitiesLoader>
  nameWithType: IReadOnlyList<IRelatedEntitiesLoader>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader>
  nameWithType.vb: IReadOnlyList(Of IRelatedEntitiesLoader)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader)
  name.vb: IReadOnlyList(Of IRelatedEntitiesLoader)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
    name: IRelatedEntitiesLoader
    nameWithType: IRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
    name: IRelatedEntitiesLoader
    nameWithType: IRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IAsyncRelatedEntitiesLoader>
  nameWithType: IReadOnlyList<IAsyncRelatedEntitiesLoader>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader>
  nameWithType.vb: IReadOnlyList(Of IAsyncRelatedEntitiesLoader)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader)
  name.vb: IReadOnlyList(Of IAsyncRelatedEntitiesLoader)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
    name: IAsyncRelatedEntitiesLoader
    nameWithType: IAsyncRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
    name: IAsyncRelatedEntitiesLoader
    nameWithType: IAsyncRelatedEntitiesLoader
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
