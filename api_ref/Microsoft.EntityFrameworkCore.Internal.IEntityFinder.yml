### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  id: IEntityFinder
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  langs:
  - csharp
  - vb
  name: IEntityFinder
  nameWithType: IEntityFinder
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  type: Interface
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: IEntityFinder
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public interface IEntityFinder
    content.vb: Public Interface IEntityFinder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
  id: Find(System.Object[])
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  langs:
  - csharp
  - vb
  name: Find(Object[])
  nameWithType: IEntityFinder.Find(Object[])
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Find
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
    startLine: 22
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: object Find(object[] keyValues)
    content.vb: Function Find(keyValues As Object()) As Object
    parameters:
    - id: keyValues
      type: System.Object[]
    return:
      type: System.Object
  overload: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find*
  nameWithType.vb: IEntityFinder.Find(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object())
  name.vb: Find(Object())
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)
  id: FindAsync(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  langs:
  - csharp
  - vb
  name: FindAsync(Object[], CancellationToken)
  nameWithType: IEntityFinder.FindAsync(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FindAsync
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Task<object> FindAsync(object[] keyValues, CancellationToken cancellationToken = null)
    content.vb: Function FindAsync(keyValues As Object(), cancellationToken As CancellationToken = Nothing) As Task(Of Object)
    parameters:
    - id: keyValues
      type: System.Object[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Object}
  overload: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync*
  nameWithType.vb: IEntityFinder.FindAsync(Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Object(), CancellationToken)
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  langs:
  - csharp
  - vb
  name: Load(INavigation, InternalEntityEntry)
  nameWithType: IEntityFinder.Load(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Load
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
    startLine: 34
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: void Load(INavigation navigation, InternalEntityEntry entry)
    content.vb: Sub Load(navigation As INavigation, entry As InternalEntityEntry)
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  overload: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load*
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  id: LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  langs:
  - csharp
  - vb
  name: LoadAsync(INavigation, InternalEntityEntry, CancellationToken)
  nameWithType: IEntityFinder.LoadAsync(INavigation, InternalEntityEntry, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: LoadAsync
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
    startLine: 40
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Task LoadAsync(INavigation navigation, InternalEntityEntry entry, CancellationToken cancellationToken = null)
    content.vb: Function LoadAsync(navigation As INavigation, entry As InternalEntityEntry, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync*
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  langs:
  - csharp
  - vb
  name: Query(INavigation, InternalEntityEntry)
  nameWithType: IEntityFinder.Query(INavigation, InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Query
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: IQueryable Query(INavigation navigation, InternalEntityEntry entry)
    content.vb: Function Query(navigation As INavigation, entry As InternalEntityEntry) As IQueryable
    parameters:
    - id: navigation
      type: Microsoft.EntityFrameworkCore.Metadata.INavigation
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Linq.IQueryable
  overload: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query*
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  id: GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  langs:
  - csharp
  - vb
  name: GetDatabaseValues(InternalEntityEntry)
  nameWithType: IEntityFinder.GetDatabaseValues(InternalEntityEntry)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDatabaseValues
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
    startLine: 55
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: object[] GetDatabaseValues(InternalEntityEntry entry)
    content.vb: Function GetDatabaseValues(entry As InternalEntityEntry) As Object()
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    return:
      type: System.Object[]
  overload: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues*
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  id: GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Internal.IEntityFinder
  langs:
  - csharp
  - vb
  name: GetDatabaseValuesAsync(InternalEntityEntry, CancellationToken)
  nameWithType: IEntityFinder.GetDatabaseValuesAsync(InternalEntityEntry, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: GetDatabaseValuesAsync
    path: src/Microsoft.EntityFrameworkCore/Internal/IEntityFinder.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: Task<object[]> GetDatabaseValuesAsync(InternalEntityEntry entry, CancellationToken cancellationToken = null)
    content.vb: Function GetDatabaseValuesAsync(entry As InternalEntityEntry, cancellationToken As CancellationToken = Nothing) As Task(Of Object())
    parameters:
    - id: entry
      type: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Object[]}
  overload: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync*
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find
  isExternal: false
  name: Find
  nameWithType: IEntityFinder.Find
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync
  isExternal: false
  name: FindAsync
  nameWithType: IEntityFinder.FindAsync
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: T:System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  nameWithType.vb: Task(Of Object)
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load
  isExternal: false
  name: Load
  nameWithType: IEntityFinder.Load
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load
- uid: Microsoft.EntityFrameworkCore.Metadata.INavigation
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.INavigation
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: INavigation
  nameWithType: INavigation
  fullName: Microsoft.EntityFrameworkCore.Metadata.INavigation
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  commentId: T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
  parent: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: InternalEntityEntry
  nameWithType: InternalEntityEntry
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  commentId: N:Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  nameWithType: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
  fullName: Microsoft.EntityFrameworkCore.ChangeTracking.Internal
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync
  isExternal: false
  name: LoadAsync
  nameWithType: IEntityFinder.LoadAsync
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query
  isExternal: false
  name: Query
  nameWithType: IEntityFinder.Query
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues
  isExternal: false
  name: GetDatabaseValues
  nameWithType: IEntityFinder.GetDatabaseValues
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues
- uid: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync
  isExternal: false
  name: GetDatabaseValuesAsync
  nameWithType: IEntityFinder.GetDatabaseValuesAsync
  fullName: Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync
- uid: System.Threading.Tasks.Task{System.Object[]}
  commentId: T:System.Threading.Tasks.Task{System.Object[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object[]>
  nameWithType: Task<Object[]>
  fullName: System.Threading.Tasks.Task<System.Object[]>
  nameWithType.vb: Task(Of Object())
  fullname.vb: System.Threading.Tasks.Task(Of System.Object())
  name.vb: Task(Of Object())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
