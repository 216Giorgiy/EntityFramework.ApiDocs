### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  commentId: T:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  id: SqliteDesignStrings
  parent: Microsoft.EntityFrameworkCore.Internal
  children:
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.ColumnNameEmptyOnIndex(System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundForeignKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndex(System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndexColumn(System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundTable(System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalColumnNotFound(System.Object,System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalTableNotFound(System.Object,System.Object,System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.TableNotInSelectionSet(System.Object)
  - Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.UsingSchemaSelectionsWarning
  langs:
  - csharp
  - vb
  name: SqliteDesignStrings
  nameWithType: SqliteDesignStrings
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: SqliteDesignStrings
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nThis API supports the Entity Framework Core infrastructure and is not intended to be used\ndirectly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public static class SqliteDesignStrings
    content.vb: Public Module SqliteDesignStrings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.ColumnNameEmptyOnIndex(System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.ColumnNameEmptyOnIndex(System.Object,System.Object)
  id: ColumnNameEmptyOnIndex(System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: ColumnNameEmptyOnIndex(Object, Object)
  nameWithType: SqliteDesignStrings.ColumnNameEmptyOnIndex(Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.ColumnNameEmptyOnIndex(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ColumnNameEmptyOnIndex
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound a column on index {indexName} on table {tableName} with an empty or null name. Not including column in index.\n"
  example: []
  syntax:
    content: public static string ColumnNameEmptyOnIndex(object indexName, object tableName)
    content.vb: Public Shared Function ColumnNameEmptyOnIndex(indexName As Object, tableName As Object) As String
    parameters:
    - id: indexName
      type: System.Object
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.ColumnNameEmptyOnIndex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  id: FoundColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: FoundColumn(Object, Object, Object, Object, Object, Object, Object)
  nameWithType: SqliteDesignStrings.FoundColumn(Object, Object, Object, Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundColumn(System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundColumn
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound column on table: {tableName}, column name: {columnName}, data type: {dataType}, ordinal: {ordinal}, not nullable: {isNotNullable}, primary key ordinal: {primaryKeyOrdinal}, default value: {defaultValue}.\n"
  example: []
  syntax:
    content: public static string FoundColumn(object tableName, object columnName, object dataType, object ordinal, object isNotNullable, object primaryKeyOrdinal, object defaultValue)
    content.vb: Public Shared Function FoundColumn(tableName As Object, columnName As Object, dataType As Object, ordinal As Object, isNotNullable As Object, primaryKeyOrdinal As Object, defaultValue As Object) As String
    parameters:
    - id: tableName
      type: System.Object
    - id: columnName
      type: System.Object
    - id: dataType
      type: System.Object
    - id: ordinal
      type: System.Object
    - id: isNotNullable
      type: System.Object
    - id: primaryKeyOrdinal
      type: System.Object
    - id: defaultValue
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundColumn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundForeignKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundForeignKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  id: FoundForeignKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: FoundForeignKeyColumn(Object, Object, Object, Object, Object, Object, Object)
  nameWithType: SqliteDesignStrings.FoundForeignKeyColumn(Object, Object, Object, Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundForeignKeyColumn(System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundForeignKeyColumn
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound foreign key column on table: {tableName}, id: {id}, principal table: {principalTableName}, column name: {columnName}, principal column name: {principalColumnName}, delete action: {deleteAction}, ordinal: {ordinal}.\n"
  example: []
  syntax:
    content: public static string FoundForeignKeyColumn(object tableName, object id, object principalTableName, object columnName, object principalColumnName, object deleteAction, object ordinal)
    content.vb: Public Shared Function FoundForeignKeyColumn(tableName As Object, id As Object, principalTableName As Object, columnName As Object, principalColumnName As Object, deleteAction As Object, ordinal As Object) As String
    parameters:
    - id: tableName
      type: System.Object
    - id: id
      type: System.Object
    - id: principalTableName
      type: System.Object
    - id: columnName
      type: System.Object
    - id: principalColumnName
      type: System.Object
    - id: deleteAction
      type: System.Object
    - id: ordinal
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundForeignKeyColumn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndex(System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndex(System.Object,System.Object,System.Object)
  id: FoundIndex(System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: FoundIndex(Object, Object, Object)
  nameWithType: SqliteDesignStrings.FoundIndex(Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndex(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundIndex
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound index with name: {indexName}, table: {tableName}, is unique: {isUnique}.\n"
  example: []
  syntax:
    content: public static string FoundIndex(object indexName, object tableName, object isUnique)
    content.vb: Public Shared Function FoundIndex(indexName As Object, tableName As Object, isUnique As Object) As String
    parameters:
    - id: indexName
      type: System.Object
    - id: tableName
      type: System.Object
    - id: isUnique
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndexColumn(System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndexColumn(System.Object,System.Object,System.Object,System.Object)
  id: FoundIndexColumn(System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: FoundIndexColumn(Object, Object, Object, Object)
  nameWithType: SqliteDesignStrings.FoundIndexColumn(Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndexColumn(System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundIndexColumn
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound index column on index {indexName} on table {tableName}, column name: {columnName}, ordinal: {ordinal}.\n"
  example: []
  syntax:
    content: public static string FoundIndexColumn(object indexName, object tableName, object columnName, object ordinal)
    content.vb: Public Shared Function FoundIndexColumn(indexName As Object, tableName As Object, columnName As Object, ordinal As Object) As String
    parameters:
    - id: indexName
      type: System.Object
    - id: tableName
      type: System.Object
    - id: columnName
      type: System.Object
    - id: ordinal
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndexColumn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundTable(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundTable(System.Object)
  id: FoundTable(System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: FoundTable(Object)
  nameWithType: SqliteDesignStrings.FoundTable(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundTable(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: FoundTable
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 61
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFound table with name: {name}.\n"
  example: []
  syntax:
    content: public static string FoundTable(object name)
    content.vb: Public Shared Function FoundTable(name As Object) As String
    parameters:
    - id: name
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundTable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalColumnNotFound(System.Object,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalColumnNotFound(System.Object,System.Object,System.Object,System.Object)
  id: PrincipalColumnNotFound(System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: PrincipalColumnNotFound(Object, Object, Object, Object)
  nameWithType: SqliteDesignStrings.PrincipalColumnNotFound(Object, Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalColumnNotFound(System.Object, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrincipalColumnNotFound
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 69
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFor foreign key with identity {id} on table {tableName}, unable to find the column called {principalColumnName} on the foreign key's principal table, {principalTableName}. Skipping foreign key.\n"
  example: []
  syntax:
    content: public static string PrincipalColumnNotFound(object id, object tableName, object principalColumnName, object principalTableName)
    content.vb: Public Shared Function PrincipalColumnNotFound(id As Object, tableName As Object, principalColumnName As Object, principalTableName As Object) As String
    parameters:
    - id: id
      type: System.Object
    - id: tableName
      type: System.Object
    - id: principalColumnName
      type: System.Object
    - id: principalTableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalColumnNotFound*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalTableNotFound(System.Object,System.Object,System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalTableNotFound(System.Object,System.Object,System.Object)
  id: PrincipalTableNotFound(System.Object,System.Object,System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: PrincipalTableNotFound(Object, Object, Object)
  nameWithType: SqliteDesignStrings.PrincipalTableNotFound(Object, Object, Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalTableNotFound(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: PrincipalTableNotFound
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 77
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nFor foreign key with identity {id} on table {tableName}, unable to find the principal table {principalTableName}. Either the principal table is missing from the database or it was not included in the selection set. Skipping foreign key.\n"
  example: []
  syntax:
    content: public static string PrincipalTableNotFound(object id, object tableName, object principalTableName)
    content.vb: Public Shared Function PrincipalTableNotFound(id As Object, tableName As Object, principalTableName As Object) As String
    parameters:
    - id: id
      type: System.Object
    - id: tableName
      type: System.Object
    - id: principalTableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalTableNotFound*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.TableNotInSelectionSet(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.TableNotInSelectionSet(System.Object)
  id: TableNotInSelectionSet(System.Object)
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: TableNotInSelectionSet(Object)
  nameWithType: SqliteDesignStrings.TableNotInSelectionSet(Object)
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.TableNotInSelectionSet(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TableNotInSelectionSet
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 85
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nTable {tableName} is not included in the selection set. Skipping.\n"
  example: []
  syntax:
    content: public static string TableNotInSelectionSet(object tableName)
    content.vb: Public Shared Function TableNotInSelectionSet(tableName As Object) As String
    parameters:
    - id: tableName
      type: System.Object
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.TableNotInSelectionSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.UsingSchemaSelectionsWarning
  commentId: P:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.UsingSchemaSelectionsWarning
  id: UsingSchemaSelectionsWarning
  parent: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings
  langs:
  - csharp
  - vb
  name: UsingSchemaSelectionsWarning
  nameWithType: SqliteDesignStrings.UsingSchemaSelectionsWarning
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.UsingSchemaSelectionsWarning
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: UsingSchemaSelectionsWarning
    path: src/Microsoft.EntityFrameworkCore.Sqlite.Design/Properties/SqliteDesignStrings.Designer.cs
    startLine: 93
  assemblies:
  - Microsoft.EntityFrameworkCore.Sqlite.Design
  namespace: Microsoft.EntityFrameworkCore.Internal
  summary: "\nScaffolding from a SQLite database will ignore any schema selection arguments. \n"
  example: []
  syntax:
    content: public static string UsingSchemaSelectionsWarning { get; }
    content.vb: Public Shared ReadOnly Property UsingSchemaSelectionsWarning As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.UsingSchemaSelectionsWarning*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.ColumnNameEmptyOnIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.ColumnNameEmptyOnIndex
  isExternal: false
  name: ColumnNameEmptyOnIndex
  nameWithType: SqliteDesignStrings.ColumnNameEmptyOnIndex
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.ColumnNameEmptyOnIndex
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundColumn
  isExternal: false
  name: FoundColumn
  nameWithType: SqliteDesignStrings.FoundColumn
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundColumn
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundForeignKeyColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundForeignKeyColumn
  isExternal: false
  name: FoundForeignKeyColumn
  nameWithType: SqliteDesignStrings.FoundForeignKeyColumn
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundForeignKeyColumn
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndex*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndex
  isExternal: false
  name: FoundIndex
  nameWithType: SqliteDesignStrings.FoundIndex
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndex
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndexColumn*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndexColumn
  isExternal: false
  name: FoundIndexColumn
  nameWithType: SqliteDesignStrings.FoundIndexColumn
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundIndexColumn
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundTable*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundTable
  isExternal: false
  name: FoundTable
  nameWithType: SqliteDesignStrings.FoundTable
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.FoundTable
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalColumnNotFound*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalColumnNotFound
  isExternal: false
  name: PrincipalColumnNotFound
  nameWithType: SqliteDesignStrings.PrincipalColumnNotFound
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalColumnNotFound
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalTableNotFound*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalTableNotFound
  isExternal: false
  name: PrincipalTableNotFound
  nameWithType: SqliteDesignStrings.PrincipalTableNotFound
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.PrincipalTableNotFound
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.TableNotInSelectionSet*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.TableNotInSelectionSet
  isExternal: false
  name: TableNotInSelectionSet
  nameWithType: SqliteDesignStrings.TableNotInSelectionSet
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.TableNotInSelectionSet
- uid: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.UsingSchemaSelectionsWarning*
  commentId: Overload:Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.UsingSchemaSelectionsWarning
  isExternal: false
  name: UsingSchemaSelectionsWarning
  nameWithType: SqliteDesignStrings.UsingSchemaSelectionsWarning
  fullName: Microsoft.EntityFrameworkCore.Internal.SqliteDesignStrings.UsingSchemaSelectionsWarning
