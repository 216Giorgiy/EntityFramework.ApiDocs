### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand
  commentId: T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommand
  id: MigrationCommand
  parent: Microsoft.EntityFrameworkCore.Migrations
  children:
  - Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,System.Boolean)
  - Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.CommandText
  - Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  - Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.TransactionSuppressed
  langs:
  - csharp
  - vb
  name: MigrationCommand
  nameWithType: MigrationCommand
  fullName: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: MigrationCommand
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
    startLine: 12
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations
  syntax:
    content: public class MigrationCommand
    content.vb: Public Class MigrationCommand
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,System.Boolean)
  id: '#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,System.Boolean)'
  parent: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand
  langs:
  - csharp
  - vb
  name: MigrationCommand(IRelationalCommand, Boolean)
  nameWithType: MigrationCommand.MigrationCommand(IRelationalCommand, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.MigrationCommand(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
    startLine: 16
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations
  syntax:
    content: public MigrationCommand(IRelationalCommand relationalCommand, bool transactionSuppressed = false)
    content.vb: Public Sub New(relationalCommand As IRelationalCommand, transactionSuppressed As Boolean = False)
    parameters:
    - id: relationalCommand
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
    - id: transactionSuppressed
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.TransactionSuppressed
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.TransactionSuppressed
  id: TransactionSuppressed
  parent: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand
  langs:
  - csharp
  - vb
  name: TransactionSuppressed
  nameWithType: MigrationCommand.TransactionSuppressed
  fullName: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.TransactionSuppressed
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TransactionSuppressed
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations
  syntax:
    content: public virtual bool TransactionSuppressed { get; }
    content.vb: Public Overridable ReadOnly Property TransactionSuppressed As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.CommandText
  commentId: P:Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.CommandText
  id: CommandText
  parent: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand
  langs:
  - csharp
  - vb
  name: CommandText
  nameWithType: MigrationCommand.CommandText
  fullName: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.CommandText
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CommandText
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations
  syntax:
    content: public virtual string CommandText { get; }
    content.vb: Public Overridable ReadOnly Property CommandText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  id: ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand
  langs:
  - csharp
  - vb
  name: ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  nameWithType: MigrationCommand.ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean)
  fullName: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteNonQuery
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations
  syntax:
    content: public virtual int ExecuteNonQuery(IRelationalConnection connection, IReadOnlyDictionary<string, object> parameterValues = null, bool manageConnection = true)
    content.vb: Public Overridable Function ExecuteNonQuery(connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing, manageConnection As Boolean = True) As Integer
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: manageConnection
      type: System.Boolean
    return:
      type: System.Int32
  nameWithType.vb: MigrationCommand.ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean)
  name.vb: ExecuteNonQuery(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean)
- uid: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand
  langs:
  - csharp
  - vb
  name: ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  nameWithType: MigrationCommand.ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary<String, Object>, Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ExecuteNonQueryAsync
    path: src/Microsoft.EntityFrameworkCore.Relational/Migrations/MigrationCommand.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.Relational
  namespace: Microsoft.EntityFrameworkCore.Migrations
  syntax:
    content: public virtual Task<int> ExecuteNonQueryAsync(IRelationalConnection connection, IReadOnlyDictionary<string, object> parameterValues = null, bool manageConnection = true, CancellationToken cancellationToken = null)
    content.vb: Public Overridable Function ExecuteNonQueryAsync(connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object) = Nothing, manageConnection As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
    parameters:
    - id: connection
      type: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
    - id: parameterValues
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    - id: manageConnection
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  nameWithType.vb: MigrationCommand.ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object), System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteNonQueryAsync(IRelationalConnection, IReadOnlyDictionary(Of String, Object), Boolean, CancellationToken)
references:
- uid: Microsoft.EntityFrameworkCore.Migrations
  commentId: N:Microsoft.EntityFrameworkCore.Migrations
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Migrations
  nameWithType: Microsoft.EntityFrameworkCore.Migrations
  fullName: Microsoft.EntityFrameworkCore.Migrations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<MigrationCommand, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<MigrationCommand, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Migrations.MigrationCommand, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of MigrationCommand, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Migrations.MigrationCommand, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of MigrationCommand, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<MigrationCommand, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<MigrationCommand, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.Migrations.MigrationCommand, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of MigrationCommand, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of MigrationCommand, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.Migrations.MigrationCommand, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalCommand
  nameWithType: IRelationalCommand
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalCommand
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: false
  name: IRelationalConnection
  nameWithType: IRelationalConnection
  fullName: Microsoft.EntityFrameworkCore.Storage.IRelationalConnection
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, Object>
  nameWithType: IReadOnlyDictionary<String, Object>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>
  nameWithType.vb: IReadOnlyDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.Object)
  name.vb: IReadOnlyDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
