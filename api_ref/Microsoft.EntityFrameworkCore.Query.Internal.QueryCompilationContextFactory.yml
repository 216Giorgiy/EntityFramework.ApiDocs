### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  id: QueryCompilationContextFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal
  children:
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory},Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.ContextType
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Create(System.Boolean)
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.EntityQueryModelVisitorFactory
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Logger
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Model
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.RequiresMaterializationExpressionVisitorFactory
  - Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.TrackQueryResults
  langs:
  - csharp
  - vb
  name: QueryCompilationContextFactory
  nameWithType: QueryCompilationContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: QueryCompilationContextFactory
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
    startLine: 17
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: 'public class QueryCompilationContextFactory : IQueryCompilationContextFactory'
    content.vb: >-
      Public Class QueryCompilationContextFactory
          Implements IQueryCompilationContextFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory},Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory},Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory},Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)'
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  langs:
  - csharp
  - vb
  name: QueryCompilationContextFactory(IModel, ILogger<QueryCompilationContextFactory>, IEntityQueryModelVisitorFactory, IRequiresMaterializationExpressionVisitorFactory, ICurrentDbContext)
  nameWithType: QueryCompilationContextFactory.QueryCompilationContextFactory(IModel, ILogger<QueryCompilationContextFactory>, IEntityQueryModelVisitorFactory, IRequiresMaterializationExpressionVisitorFactory, ICurrentDbContext)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.QueryCompilationContextFactory(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.Extensions.Logging.ILogger<Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory>, Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory, Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: .ctor
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
    startLine: 25
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public QueryCompilationContextFactory(IModel model, ILogger<QueryCompilationContextFactory> logger, IEntityQueryModelVisitorFactory entityQueryModelVisitorFactory, IRequiresMaterializationExpressionVisitorFactory requiresMaterializationExpressionVisitorFactory, ICurrentDbContext currentContext)
    content.vb: Public Sub New(model As IModel, logger As ILogger(Of QueryCompilationContextFactory), entityQueryModelVisitorFactory As IEntityQueryModelVisitorFactory, requiresMaterializationExpressionVisitorFactory As IRequiresMaterializationExpressionVisitorFactory, currentContext As ICurrentDbContext)
    parameters:
    - id: model
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory}
    - id: entityQueryModelVisitorFactory
      type: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
    - id: requiresMaterializationExpressionVisitorFactory
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory
    - id: currentContext
      type: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  nameWithType.vb: QueryCompilationContextFactory.QueryCompilationContextFactory(IModel, ILogger(Of QueryCompilationContextFactory), IEntityQueryModelVisitorFactory, IRequiresMaterializationExpressionVisitorFactory, ICurrentDbContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.QueryCompilationContextFactory(Microsoft.EntityFrameworkCore.Metadata.IModel, Microsoft.Extensions.Logging.ILogger(Of Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory), Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory, Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)
  name.vb: QueryCompilationContextFactory(IModel, ILogger(Of QueryCompilationContextFactory), IEntityQueryModelVisitorFactory, IRequiresMaterializationExpressionVisitorFactory, ICurrentDbContext)
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Model
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Model
  id: Model
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: QueryCompilationContextFactory.Model
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Model
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Model
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IModel Model { get; }
    content.vb: Protected Overridable ReadOnly Property Model As IModel
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.IModel
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Logger
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Logger
  id: Logger
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: QueryCompilationContextFactory.Logger
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Logger
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Logger
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual ILogger Logger { get; }
    content.vb: Protected Overridable ReadOnly Property Logger As ILogger
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.EntityQueryModelVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.EntityQueryModelVisitorFactory
  id: EntityQueryModelVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  langs:
  - csharp
  - vb
  name: EntityQueryModelVisitorFactory
  nameWithType: QueryCompilationContextFactory.EntityQueryModelVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.EntityQueryModelVisitorFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: EntityQueryModelVisitorFactory
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
    startLine: 62
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IEntityQueryModelVisitorFactory EntityQueryModelVisitorFactory { get; }
    content.vb: Protected Overridable ReadOnly Property EntityQueryModelVisitorFactory As IEntityQueryModelVisitorFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.RequiresMaterializationExpressionVisitorFactory
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.RequiresMaterializationExpressionVisitorFactory
  id: RequiresMaterializationExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  langs:
  - csharp
  - vb
  name: RequiresMaterializationExpressionVisitorFactory
  nameWithType: QueryCompilationContextFactory.RequiresMaterializationExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.RequiresMaterializationExpressionVisitorFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: RequiresMaterializationExpressionVisitorFactory
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
    startLine: 68
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual IRequiresMaterializationExpressionVisitorFactory RequiresMaterializationExpressionVisitorFactory { get; }
    content.vb: Protected Overridable ReadOnly Property RequiresMaterializationExpressionVisitorFactory As IRequiresMaterializationExpressionVisitorFactory
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.ContextType
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.ContextType
  id: ContextType
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  langs:
  - csharp
  - vb
  name: ContextType
  nameWithType: QueryCompilationContextFactory.ContextType
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.ContextType
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: ContextType
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
    startLine: 74
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual Type ContextType { get; }
    content.vb: Protected Overridable ReadOnly Property ContextType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.TrackQueryResults
  commentId: P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.TrackQueryResults
  id: TrackQueryResults
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  langs:
  - csharp
  - vb
  name: TrackQueryResults
  nameWithType: QueryCompilationContextFactory.TrackQueryResults
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.TrackQueryResults
  type: Property
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: TrackQueryResults
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
    startLine: 80
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: protected virtual bool TrackQueryResults { get; }
    content.vb: Protected Overridable ReadOnly Property TrackQueryResults As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Create(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Create(System.Boolean)
  id: Create(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  langs:
  - csharp
  - vb
  name: Create(Boolean)
  nameWithType: QueryCompilationContextFactory.Create(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Create(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework.git
    id: Create
    path: src/Microsoft.EntityFrameworkCore/Query/Internal/QueryCompilationContextFactory.cs
    startLine: 87
  assemblies:
  - Microsoft.EntityFrameworkCore
  namespace: Microsoft.EntityFrameworkCore.Query.Internal
  summary: "\n    This API supports the Entity Framework Core infrastructure and is not intended to be used\n    directly from your code. This API may change or be removed in future releases.\n"
  example: []
  syntax:
    content: public virtual QueryCompilationContext Create(bool async)
    content.vb: Public Overridable Function Create(async As Boolean) As QueryCompilationContext
    parameters:
    - id: async
      type: System.Boolean
    return:
      type: Microsoft.EntityFrameworkCore.Query.QueryCompilationContext
  implements:
  - Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory.Create(System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.Query.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IQueryCompilationContextFactory
  nameWithType: IQueryCompilationContextFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Query
  commentId: N:Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query
  nameWithType: Microsoft.EntityFrameworkCore.Query
  fullName: Microsoft.EntityFrameworkCore.Query
- uid: Microsoft.EntityFrameworkCore.Metadata.IModel
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.IModel
  parent: Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: IModel
  nameWithType: IModel
  fullName: Microsoft.EntityFrameworkCore.Metadata.IModel
- uid: Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<QueryCompilationContextFactory>
  nameWithType: ILogger<QueryCompilationContextFactory>
  fullName: Microsoft.Extensions.Logging.ILogger<Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory>
  nameWithType.vb: ILogger(Of QueryCompilationContextFactory)
  fullname.vb: Microsoft.Extensions.Logging.ILogger(Of Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory)
  name.vb: ILogger(Of QueryCompilationContextFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
    name: QueryCompilationContextFactory
    nameWithType: QueryCompilationContextFactory
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
    name: QueryCompilationContextFactory
    nameWithType: QueryCompilationContextFactory
    fullName: Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: IEntityQueryModelVisitorFactory
  nameWithType: IEntityQueryModelVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory
  commentId: T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory
  parent: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: IRequiresMaterializationExpressionVisitorFactory
  nameWithType: IRequiresMaterializationExpressionVisitorFactory
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory
- uid: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  commentId: T:Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: ICurrentDbContext
  nameWithType: ICurrentDbContext
  fullName: Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext
- uid: Microsoft.EntityFrameworkCore.Metadata
  commentId: N:Microsoft.EntityFrameworkCore.Metadata
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata
  nameWithType: Microsoft.EntityFrameworkCore.Metadata
  fullName: Microsoft.EntityFrameworkCore.Metadata
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullname.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
  fullName: Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory.Create(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory.Create(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory
  isExternal: true
  name: Create(Boolean)
  nameWithType: IQueryCompilationContextFactory.Create(Boolean)
  fullName: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory.Create(System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory.Create(System.Boolean)
    name: Create
    nameWithType: IQueryCompilationContextFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory.Create(System.Boolean)
    name: Create
    nameWithType: IQueryCompilationContextFactory.Create
    fullName: Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Query.QueryCompilationContext
  commentId: T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext
  parent: Microsoft.EntityFrameworkCore.Query
  isExternal: false
  name: QueryCompilationContext
  nameWithType: QueryCompilationContext
  fullName: Microsoft.EntityFrameworkCore.Query.QueryCompilationContext
