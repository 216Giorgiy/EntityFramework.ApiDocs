### YamlMime:ManagedReference
items:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  id: SalesOrder
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  children:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.#ctor
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.AccountNumber
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.BillToAddress
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.BillToAddressID
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Comment
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.CreditCardApprovalCode
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Customer
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.CustomerID
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Details
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.DueDate
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Freight
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.IsOnlineOrder
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ModifiedDate
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.OrderDate
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.PurchaseOrderNumber
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.RevisionNumber
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.rowguid
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SalesOrderID
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SalesOrderNumber
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipDate
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipMethod
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipToAddress
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipToAddressID
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Status
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SubTotal
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.TaxAmt
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.TotalDue
  langs:
  - csharp
  - vb
  name: SalesOrder
  nameWithType: SalesOrder
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  type: Class
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SalesOrder
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 10
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [Table("SalesOrderHeader", Schema = "SalesLT")]

      public class SalesOrder
    content.vb: >-
      <Table("SalesOrderHeader", Schema:="SalesLT")>

      Public Class SalesOrder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.TableAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SalesOrderHeader
    namedArguments:
    - name: Schema
      type: System.String
      value: SalesLT
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.#ctor
  commentId: M:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.#ctor
  id: '#ctor'
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: SalesOrder()
  nameWithType: SalesOrder.SalesOrder()
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SalesOrder()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: .ctor
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 13
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public SalesOrder()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SalesOrderID
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SalesOrderID
  id: SalesOrderID
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: SalesOrderID
  nameWithType: SalesOrder.SalesOrderID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SalesOrderID
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SalesOrderID
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 18
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public int SalesOrderID { get; set; }
    content.vb: Public Property SalesOrderID As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.AccountNumber
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.AccountNumber
  id: AccountNumber
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: AccountNumber
  nameWithType: SalesOrder.AccountNumber
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.AccountNumber
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: AccountNumber
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 19
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public string AccountNumber { get; set; }
    content.vb: Public Property AccountNumber As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.BillToAddressID
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.BillToAddressID
  id: BillToAddressID
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: BillToAddressID
  nameWithType: SalesOrder.BillToAddressID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.BillToAddressID
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: BillToAddressID
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 20
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public int ? BillToAddressID { get; set; }
    content.vb: Public Property BillToAddressID As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Comment
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Comment
  id: Comment
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: Comment
  nameWithType: SalesOrder.Comment
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Comment
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Comment
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 21
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public string Comment { get; set; }
    content.vb: Public Property Comment As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.CreditCardApprovalCode
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.CreditCardApprovalCode
  id: CreditCardApprovalCode
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: CreditCardApprovalCode
  nameWithType: SalesOrder.CreditCardApprovalCode
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.CreditCardApprovalCode
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CreditCardApprovalCode
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 23
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [MaxLength(15)]

      public string CreditCardApprovalCode { get; set; }
    content.vb: >-
      <MaxLength(15)>

      Public Property CreditCardApprovalCode As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 15
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.CustomerID
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.CustomerID
  id: CustomerID
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: CustomerID
  nameWithType: SalesOrder.CustomerID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.CustomerID
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: CustomerID
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 26
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public int CustomerID { get; set; }
    content.vb: Public Property CustomerID As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.DueDate
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.DueDate
  id: DueDate
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: DueDate
  nameWithType: SalesOrder.DueDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.DueDate
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: DueDate
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 28
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public DateTime DueDate { get; set; }
    content.vb: Public Property DueDate As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Freight
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Freight
  id: Freight
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: Freight
  nameWithType: SalesOrder.Freight
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Freight
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Freight
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 29
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public decimal Freight { get; set; }
    content.vb: Public Property Freight As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ModifiedDate
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ModifiedDate
  id: ModifiedDate
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: ModifiedDate
  nameWithType: SalesOrder.ModifiedDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ModifiedDate
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ModifiedDate
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 30
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public DateTime ModifiedDate { get; set; }
    content.vb: Public Property ModifiedDate As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.IsOnlineOrder
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.IsOnlineOrder
  id: IsOnlineOrder
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: IsOnlineOrder
  nameWithType: SalesOrder.IsOnlineOrder
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.IsOnlineOrder
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: IsOnlineOrder
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 32
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [Column("OnlineOrderFlag")]

      public bool IsOnlineOrder { get; set; }
    content.vb: >-
      <Column("OnlineOrderFlag")>

      Public Property IsOnlineOrder As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnlineOrderFlag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.OrderDate
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.OrderDate
  id: OrderDate
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: OrderDate
  nameWithType: SalesOrder.OrderDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.OrderDate
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: OrderDate
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 35
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public DateTime OrderDate { get; set; }
    content.vb: Public Property OrderDate As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.PurchaseOrderNumber
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.PurchaseOrderNumber
  id: PurchaseOrderNumber
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: PurchaseOrderNumber
  nameWithType: SalesOrder.PurchaseOrderNumber
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.PurchaseOrderNumber
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: PurchaseOrderNumber
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 36
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public string PurchaseOrderNumber { get; set; }
    content.vb: Public Property PurchaseOrderNumber As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.RevisionNumber
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.RevisionNumber
  id: RevisionNumber
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: RevisionNumber
  nameWithType: SalesOrder.RevisionNumber
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.RevisionNumber
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: RevisionNumber
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 37
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public byte RevisionNumber { get; set; }
    content.vb: Public Property RevisionNumber As Byte
    parameters: []
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SalesOrderNumber
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SalesOrderNumber
  id: SalesOrderNumber
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: SalesOrderNumber
  nameWithType: SalesOrder.SalesOrderNumber
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SalesOrderNumber
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SalesOrderNumber
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 39
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [Required]

      [MaxLength(25)]

      public string SalesOrderNumber { get; set; }
    content.vb: >-
      <Required>

      <MaxLength(25)>

      Public Property SalesOrderNumber As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 25
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipDate
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipDate
  id: ShipDate
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: ShipDate
  nameWithType: SalesOrder.ShipDate
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipDate
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ShipDate
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 43
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public DateTime? ShipDate { get; set; }
    content.vb: Public Property ShipDate As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipMethod
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipMethod
  id: ShipMethod
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: ShipMethod
  nameWithType: SalesOrder.ShipMethod
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipMethod
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ShipMethod
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 45
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [Required]

      [MaxLength(50)]

      public string ShipMethod { get; set; }
    content.vb: >-
      <Required>

      <MaxLength(50)>

      Public Property ShipMethod As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipToAddressID
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipToAddressID
  id: ShipToAddressID
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: ShipToAddressID
  nameWithType: SalesOrder.ShipToAddressID
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipToAddressID
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ShipToAddressID
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 49
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public int ? ShipToAddressID { get; set; }
    content.vb: Public Property ShipToAddressID As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Status
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Status
  id: Status
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: SalesOrder.Status
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Status
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Status
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 50
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public byte Status { get; set; }
    content.vb: Public Property Status As Byte
    parameters: []
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SubTotal
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SubTotal
  id: SubTotal
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: SubTotal
  nameWithType: SalesOrder.SubTotal
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.SubTotal
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: SubTotal
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 51
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public decimal SubTotal { get; set; }
    content.vb: Public Property SubTotal As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.TaxAmt
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.TaxAmt
  id: TaxAmt
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: TaxAmt
  nameWithType: SalesOrder.TaxAmt
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.TaxAmt
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TaxAmt
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 52
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public decimal TaxAmt { get; set; }
    content.vb: Public Property TaxAmt As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.TotalDue
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.TotalDue
  id: TotalDue
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: TotalDue
  nameWithType: SalesOrder.TotalDue
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.TotalDue
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: TotalDue
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 53
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public decimal TotalDue { get; set; }
    content.vb: Public Property TotalDue As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.rowguid
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.rowguid
  id: rowguid
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: rowguid
  nameWithType: SalesOrder.rowguid
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.rowguid
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: rowguid
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 54
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: public Guid rowguid { get; set; }
    content.vb: Public Property rowguid As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Details
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Details
  id: Details
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: Details
  nameWithType: SalesOrder.Details
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Details
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Details
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 56
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [InverseProperty("SalesOrder")]

      public virtual ICollection<SalesOrderDetail> Details { get; set; }
    content.vb: >-
      <InverseProperty("SalesOrder")>

      Public Overridable Property Details As ICollection(Of SalesOrderDetail)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail}
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SalesOrder
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Customer
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Customer
  id: Customer
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: Customer
  nameWithType: SalesOrder.Customer
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Customer
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: Customer
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 59
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [ForeignKey("CustomerID")]

      [InverseProperty("Orders")]

      public virtual Customer Customer { get; set; }
    content.vb: >-
      <ForeignKey("CustomerID")>

      <InverseProperty("Orders")>

      Public Overridable Property Customer As Customer
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Customer
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CustomerID
  - type: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Orders
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.BillToAddress
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.BillToAddress
  id: BillToAddress
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: BillToAddress
  nameWithType: SalesOrder.BillToAddress
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.BillToAddress
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: BillToAddress
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 63
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [ForeignKey("BillToAddressID")]

      public virtual Address BillToAddress { get; set; }
    content.vb: >-
      <ForeignKey("BillToAddressID")>

      Public Overridable Property BillToAddress As Address
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Address
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BillToAddressID
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipToAddress
  commentId: P:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipToAddress
  id: ShipToAddress
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder
  langs:
  - csharp
  - vb
  name: ShipToAddress
  nameWithType: SalesOrder.ShipToAddress
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.ShipToAddress
  type: Property
  source:
    remote:
      path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
      branch: dev
      repo: https://github.com/aspnet/EntityFramework
    id: ShipToAddress
    path: test/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests/SqlAzure/Model/SalesOrder.cs
    startLine: 66
  assemblies:
  - Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests
  namespace: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  syntax:
    content: >-
      [ForeignKey("ShipToAddressID")]

      public virtual Address ShipToAddress { get; set; }
    content.vb: >-
      <ForeignKey("ShipToAddressID")>

      Public Overridable Property ShipToAddress As Address
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Address
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ShipToAddressID
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  commentId: N:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  isExternal: false
  name: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  nameWithType: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder.Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  definition: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  name: AsConcreteMetadataType<SalesOrder, TConcrete>(String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<SalesOrder, TConcrete>(String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder, TConcrete>(System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of SalesOrder, TConcrete)(String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder, TConcrete)(System.String)
  name.vb: AsConcreteMetadataType(Of SalesOrder, TConcrete)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType<SalesOrder, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<SalesOrder, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(System.String)
    name: AsConcreteMetadataType(Of SalesOrder, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of SalesOrder, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrder, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  commentId: M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
  isExternal: true
  name: AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, String)
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>(TInterface, System.String)
  nameWithType.vb: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  fullname.vb: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, System.String)
  name.vb: AsConcreteMetadataType(Of TInterface, TConcrete)(TInterface, String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType<TInterface, TConcrete>
    nameWithType: MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType<TInterface, TConcrete>
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)
    name: AsConcreteMetadataType(Of TInterface, TConcrete)
    nameWithType: MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
    fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType(Of TInterface, TConcrete)
  - name: (
    nameWithType: (
    fullName: (
  - name: TInterface
    nameWithType: TInterface
    fullName: TInterface
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
  parent: Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: MetadataExtensions
  nameWithType: MetadataExtensions
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions
- uid: Microsoft.EntityFrameworkCore.Metadata.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Internal
  isExternal: false
  name: Microsoft.EntityFrameworkCore.Metadata.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Internal
  fullName: Microsoft.EntityFrameworkCore.Metadata.Internal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<SalesOrderDetail>
  nameWithType: ICollection<SalesOrderDetail>
  fullName: System.Collections.Generic.ICollection<Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail>
  nameWithType.vb: ICollection(Of SalesOrderDetail)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail)
  name.vb: ICollection(Of SalesOrderDetail)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail
    name: SalesOrderDetail
    nameWithType: SalesOrderDetail
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail
    name: SalesOrderDetail
    nameWithType: SalesOrderDetail
    fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.SalesOrderDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Customer
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Customer
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  isExternal: false
  name: Customer
  nameWithType: Customer
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Customer
- uid: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Address
  commentId: T:Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Address
  parent: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model
  isExternal: false
  name: Address
  nameWithType: Address
  fullName: Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.SqlAzure.Model.Address
